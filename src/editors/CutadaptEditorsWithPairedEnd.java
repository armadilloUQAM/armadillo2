/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

package editors;

import configuration.Config;
import editor.EditorInterface;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.nio.file.Path;
import java.util.Vector;
import java.util.List;
import java.util.ArrayList;
import java.util.Hashtable;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import program.*;
import workflows.armadillo_workflow;
import workflows.workflow_properties;
import workflows.workflow_properties_dictionnary;

/**
 *
 * @author Jérémy Goimard
 * @date Sept 2015
 *
 * If a button, box is used with spinner or text field,
 * the choice was made to use the value name because of the updated content function
 *
 * QUESTIONS STILL OPEN WITH -b // FIXED IN CHECK Requierments
 *
 */

public class CutadaptEditorsWithPairedEnd extends javax.swing.JDialog implements EditorInterface  {
    
    /**
     * Creates new form MaqEditors
     */
    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected="";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow parent_workflow;
    
    public final String defaultNameString=" Name";
    static final boolean default_map=true;
    
    /////////////////////////////////////////////////////////////////////////
    /// Default Options
    
    public CutadaptEditorsWithPairedEnd(java.awt.Frame parent, armadillo_workflow parent_workflow) {
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        C_SorPE_buttons = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        CutadaptEditor = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        name_jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        reset_jButton3 = new javax.swing.JButton();
        stop_jButton4 = new javax.swing.JButton();
        run_jButton5 = new javax.swing.JButton();
        ClosejButton6 = new javax.swing.JButton();
        CADAPT_singleRead_button = new javax.swing.JRadioButton();
        CADAPT_pairedEndRead_button = new javax.swing.JRadioButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Read1_panel = new javax.swing.JPanel();
        R1_a_box = new javax.swing.JCheckBox();
        R1_ANCH_a_box = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        R1_a_value = new javax.swing.JTextField();
        R1_g_box = new javax.swing.JCheckBox();
        R1_ANCH_g_box = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        R1_g_value = new javax.swing.JTextField();
        R1_anywhere_box = new javax.swing.JCheckBox();
        R1_anywhere_value = new javax.swing.JTextField();
        R1_cut_box = new javax.swing.JCheckBox();
        R1_cut_value = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        R1_infoFile_box = new javax.swing.JCheckBox();
        R1_restFile_box = new javax.swing.JCheckBox();
        R1_wildcardFile_box = new javax.swing.JCheckBox();
        R1_discard_box = new javax.swing.JCheckBox();
        Read2_panel = new javax.swing.JPanel();
        R2_A_box = new javax.swing.JCheckBox();
        R2_ANCH_A_box = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        R2_A_value = new javax.swing.JTextField();
        R2_G_box = new javax.swing.JCheckBox();
        R2_ANCH_G_box = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        R2_G_value = new javax.swing.JTextField();
        R2_B_box = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        R2_B_value = new javax.swing.JTextField();
        R2_U_box = new javax.swing.JCheckBox();
        R2_U_value = new javax.swing.JSpinner();
        Options_panel = new javax.swing.JPanel();
        O_noIndels_box = new javax.swing.JCheckBox();
        O_overlap_box = new javax.swing.JCheckBox();
        O_overlap_value = new javax.swing.JSpinner();
        O_trimQualities_box = new javax.swing.JCheckBox();
        O_trimQualities_value = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        O_qualityBase33_box = new javax.swing.JCheckBox();
        O_qualityBase64_box = new javax.swing.JCheckBox();
        O_e_box = new javax.swing.JCheckBox();
        O_e_value = new javax.swing.JSpinner();
        O_times_box = new javax.swing.JCheckBox();
        O_times_value = new javax.swing.JSpinner();
        O_noTrim_box = new javax.swing.JCheckBox();
        NBases_panel = new javax.swing.JPanel();
        NB_N_box = new javax.swing.JCheckBox();
        NB_matchReadWildcards_box = new javax.swing.JCheckBox();
        NB_trimN_box = new javax.swing.JCheckBox();
        NB_maxN_box = new javax.swing.JCheckBox();
        NB_maxN_value = new javax.swing.JSpinner();
        Output_panel = new javax.swing.JPanel();
        OP_minimumLength_box = new javax.swing.JCheckBox();
        OP_minimumLength_value = new javax.swing.JSpinner();
        OP_tooShortOutput_box = new javax.swing.JCheckBox();
        OP_maximumLength_box = new javax.swing.JCheckBox();
        OP_maximumLength_value = new javax.swing.JSpinner();
        OP_tooLongOutput_box = new javax.swing.JCheckBox();
        OP_untrimmedOutput_box = new javax.swing.JCheckBox();
        OP_discardTrimmed_box = new javax.swing.JCheckBox();
        OP_untrimmedPairedOutput_box = new javax.swing.JCheckBox();
        Other_panel = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        OT_C_stripF3_box = new javax.swing.JCheckBox();
        OT_C_colorspace_box = new javax.swing.JCheckBox();
        jPanel10 = new javax.swing.JPanel();
        OT_DE_bwa_box = new javax.swing.JCheckBox();
        OT_DE_d_box = new javax.swing.JCheckBox();
        OT_DE_trimPrimer_box = new javax.swing.JCheckBox();
        OT_DE_noZeroCap_box = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("?");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        CutadaptEditor.setPreferredSize(new java.awt.Dimension(449, 418));
        CutadaptEditor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                CutadaptEditorComponentShown(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(428, 521));

        jPanel2.setPreferredSize(new java.awt.Dimension(414, 244));

        jButton2.setText("Rename");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        name_jTextField1.setText("Cutadapt");
        name_jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        reset_jButton3.setText("Reset default value");
        reset_jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_jButton3ActionPerformed(evt);
            }
        });

        stop_jButton4.setText("Stop");
        stop_jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop_jButton4ActionPerformed(evt);
            }
        });

        run_jButton5.setText("Run");
        run_jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_jButton5ActionPerformed(evt);
            }
        });

        ClosejButton6.setText("Close");
        ClosejButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClosejButton6ActionPerformed(evt);
            }
        });

        C_SorPE_buttons.add(CADAPT_singleRead_button);
        CADAPT_singleRead_button.setText("single read");
        CADAPT_singleRead_button.setName("CADAPT_singleRead_button"); // NOI18N
        CADAPT_singleRead_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CADAPT_singleRead_buttonActionPerformed(evt);
            }
        });

        C_SorPE_buttons.add(CADAPT_pairedEndRead_button);
        CADAPT_pairedEndRead_button.setText("paired-end reads");
        CADAPT_pairedEndRead_button.setName("CADAPT_pairedEndRead_button"); // NOI18N
        CADAPT_pairedEndRead_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CADAPT_pairedEndRead_buttonActionPerformed(evt);
            }
        });

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(425, 272));

        R1_a_box.setText("-a");
        R1_a_box.setName("R1_a_box"); // NOI18N
        R1_a_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_a_boxActionPerformed(evt);
            }
        });

        R1_ANCH_a_box.setText("-a <seq>$");
        R1_ANCH_a_box.setName("R1_ANCH_a_box"); // NOI18N
        R1_ANCH_a_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_ANCH_a_boxActionPerformed(evt);
            }
        });

        jLabel2.setText("a seq");

        R1_a_value.setName("R1_a_value"); // NOI18N
        R1_a_value.setPreferredSize(new java.awt.Dimension(192, 27));
        R1_a_value.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                R1_a_valueFocusLost(evt);
            }
        });
        R1_a_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_a_valueActionPerformed(evt);
            }
        });

        R1_g_box.setText("-g");
        R1_g_box.setName("R1_g_box"); // NOI18N
        R1_g_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_g_boxActionPerformed(evt);
            }
        });

        R1_ANCH_g_box.setText("-g ^<seq>");
        R1_ANCH_g_box.setName("R1_ANCH_g_box"); // NOI18N
        R1_ANCH_g_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_ANCH_g_boxActionPerformed(evt);
            }
        });

        jLabel3.setText("g seq");

        R1_g_value.setName("R1_g_value"); // NOI18N
        R1_g_value.setPreferredSize(new java.awt.Dimension(192, 27));
        R1_g_value.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                R1_g_valueFocusLost(evt);
            }
        });
        R1_g_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_g_valueActionPerformed(evt);
            }
        });

        R1_anywhere_box.setText("--anywhere/-b");
        R1_anywhere_box.setName("R1_anywhere_box"); // NOI18N
        R1_anywhere_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_anywhere_boxActionPerformed(evt);
            }
        });

        R1_anywhere_value.setName("R1_anywhere_value"); // NOI18N
        R1_anywhere_value.setPreferredSize(new java.awt.Dimension(192, 27));
        R1_anywhere_value.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                R1_anywhere_valueFocusLost(evt);
            }
        });
        R1_anywhere_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_anywhere_valueActionPerformed(evt);
            }
        });

        R1_cut_box.setText("--cut/-u");
        R1_cut_box.setName("R1_cut_box"); // NOI18N
        R1_cut_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_cut_boxActionPerformed(evt);
            }
        });

        R1_cut_value.setModel(new javax.swing.SpinnerNumberModel());
        R1_cut_value.setName("R1_cut_value"); // NOI18N
        R1_cut_value.setPreferredSize(new java.awt.Dimension(100, 28));
        R1_cut_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                R1_cut_valueStateChanged(evt);
            }
        });

        jLabel9.setText("b seq");

        R1_infoFile_box.setText("--info-file");
        R1_infoFile_box.setName("R1_infoFile_box"); // NOI18N
        R1_infoFile_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_infoFile_boxActionPerformed(evt);
            }
        });

        R1_restFile_box.setText("--rest-file");
        R1_restFile_box.setName("R1_restFile_box"); // NOI18N
        R1_restFile_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_restFile_boxActionPerformed(evt);
            }
        });

        R1_wildcardFile_box.setText("--wildcard-file");
        R1_wildcardFile_box.setName("R1_wildcardFile_box"); // NOI18N
        R1_wildcardFile_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_wildcardFile_boxActionPerformed(evt);
            }
        });

        R1_discard_box.setText("--discard");
        R1_discard_box.setName("R1_discard_box"); // NOI18N
        R1_discard_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1_discard_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Read1_panelLayout = new javax.swing.GroupLayout(Read1_panel);
        Read1_panel.setLayout(Read1_panelLayout);
        Read1_panelLayout.setHorizontalGroup(
            Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Read1_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Read1_panelLayout.createSequentialGroup()
                        .addGroup(Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Read1_panelLayout.createSequentialGroup()
                                .addComponent(R1_a_box)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(R1_ANCH_a_box)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(R1_a_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Read1_panelLayout.createSequentialGroup()
                                .addGroup(Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Read1_panelLayout.createSequentialGroup()
                                        .addComponent(R1_cut_box)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(R1_cut_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Read1_panelLayout.createSequentialGroup()
                                        .addGroup(Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(Read1_panelLayout.createSequentialGroup()
                                                .addComponent(R1_g_box)
                                                .addGap(6, 6, 6)
                                                .addComponent(R1_ANCH_g_box)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel3))
                                            .addGroup(Read1_panelLayout.createSequentialGroup()
                                                .addComponent(R1_anywhere_box)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel9)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(R1_g_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(R1_anywhere_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Read1_panelLayout.createSequentialGroup()
                        .addComponent(R1_infoFile_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(R1_restFile_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(R1_wildcardFile_box)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Read1_panelLayout.createSequentialGroup()
                        .addComponent(R1_discard_box)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        Read1_panelLayout.setVerticalGroup(
            Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Read1_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R1_a_box)
                    .addComponent(R1_ANCH_a_box)
                    .addComponent(jLabel2)
                    .addComponent(R1_a_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R1_g_box)
                    .addComponent(R1_ANCH_g_box)
                    .addComponent(jLabel3)
                    .addComponent(R1_g_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R1_anywhere_box)
                    .addComponent(R1_anywhere_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R1_cut_box)
                    .addComponent(R1_cut_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Read1_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R1_infoFile_box)
                    .addComponent(R1_restFile_box)
                    .addComponent(R1_wildcardFile_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(R1_discard_box)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        R1_cut_box.getAccessibleContext().setAccessibleDescription("remove a fixed number of bases from the beginning or end of each read, and to remove low-quality bases (quality trimming) from the 3’ and 5’ ends");

        jTabbedPane1.addTab("Read 1", Read1_panel);

        R2_A_box.setText("-A");
        R2_A_box.setName("R2_A_box"); // NOI18N
        R2_A_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2_A_boxActionPerformed(evt);
            }
        });

        R2_ANCH_A_box.setText("-A <seq>$");
        R2_ANCH_A_box.setName("R2_ANCH_A_box"); // NOI18N
        R2_ANCH_A_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2_ANCH_A_boxActionPerformed(evt);
            }
        });

        jLabel6.setText("A seq");

        R2_A_value.setName("R2_A_value"); // NOI18N
        R2_A_value.setPreferredSize(new java.awt.Dimension(192, 27));
        R2_A_value.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                R2_A_valueFocusLost(evt);
            }
        });
        R2_A_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2_A_valueActionPerformed(evt);
            }
        });

        R2_G_box.setText("-G");
        R2_G_box.setName("R2_G_box"); // NOI18N
        R2_G_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2_G_boxActionPerformed(evt);
            }
        });

        R2_ANCH_G_box.setText("-G ^<seq>");
        R2_ANCH_G_box.setName("R2_ANCH_G_box"); // NOI18N
        R2_ANCH_G_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2_ANCH_G_boxActionPerformed(evt);
            }
        });

        jLabel7.setText("G seq");

        R2_G_value.setName("R2_G_value"); // NOI18N
        R2_G_value.setPreferredSize(new java.awt.Dimension(192, 27));
        R2_G_value.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                R2_G_valueFocusLost(evt);
            }
        });
        R2_G_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2_G_valueActionPerformed(evt);
            }
        });

        R2_B_box.setText("-B <seq>");
        R2_B_box.setName("R2_B_box"); // NOI18N
        R2_B_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2_B_boxActionPerformed(evt);
            }
        });

        jLabel8.setText("B seq");

        R2_B_value.setName("R2_B_value"); // NOI18N
        R2_B_value.setPreferredSize(new java.awt.Dimension(192, 27));
        R2_B_value.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                R2_B_valueFocusLost(evt);
            }
        });
        R2_B_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2_B_valueActionPerformed(evt);
            }
        });

        R2_U_box.setText("-U");
        R2_U_box.setName("R2_U_box"); // NOI18N
        R2_U_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2_U_boxActionPerformed(evt);
            }
        });

        R2_U_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        R2_U_value.setName("R2_U_value"); // NOI18N
        R2_U_value.setPreferredSize(new java.awt.Dimension(100, 28));
        R2_U_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                R2_U_valueStateChanged(evt);
            }
        });

        javax.swing.GroupLayout Read2_panelLayout = new javax.swing.GroupLayout(Read2_panel);
        Read2_panel.setLayout(Read2_panelLayout);
        Read2_panelLayout.setHorizontalGroup(
            Read2_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Read2_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Read2_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Read2_panelLayout.createSequentialGroup()
                        .addComponent(R2_B_box)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(R2_B_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Read2_panelLayout.createSequentialGroup()
                        .addComponent(R2_A_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(R2_ANCH_A_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(R2_A_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Read2_panelLayout.createSequentialGroup()
                        .addComponent(R2_G_box)
                        .addGap(6, 6, 6)
                        .addComponent(R2_ANCH_G_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(R2_G_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Read2_panelLayout.createSequentialGroup()
                        .addComponent(R2_U_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(R2_U_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Read2_panelLayout.setVerticalGroup(
            Read2_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Read2_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Read2_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R2_A_box)
                    .addComponent(R2_ANCH_A_box)
                    .addComponent(jLabel6)
                    .addComponent(R2_A_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Read2_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R2_G_box)
                    .addComponent(R2_ANCH_G_box)
                    .addComponent(jLabel7)
                    .addComponent(R2_G_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Read2_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R2_B_box)
                    .addComponent(R2_B_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Read2_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R2_U_box)
                    .addComponent(R2_U_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        R2_U_box.getAccessibleContext().setAccessibleDescription("--cut for second reads remove a fixed number of bases from the beginning or end of each read, and to remove low-quality bases (quality trimming) from the 3’ and 5’ ends");

        jTabbedPane1.addTab("Read 2", Read2_panel);

        O_noIndels_box.setText("--no-indels");
        O_noIndels_box.setName("O_noIndels_box"); // NOI18N
        O_noIndels_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_noIndels_boxActionPerformed(evt);
            }
        });

        O_overlap_box.setText("--overlap/-O");
        O_overlap_box.setName("O_overlap_box"); // NOI18N
        O_overlap_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_overlap_boxActionPerformed(evt);
            }
        });

        O_overlap_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(3), null, Integer.valueOf(1)));
        O_overlap_value.setName("O_overlap_value"); // NOI18N
        O_overlap_value.setPreferredSize(new java.awt.Dimension(100, 28));
        O_overlap_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                O_overlap_valueStateChanged(evt);
            }
        });

        O_trimQualities_box.setText("--trim-qualities/-q");
        O_trimQualities_box.setName("O_trimQualities_box"); // NOI18N
        O_trimQualities_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_trimQualities_boxActionPerformed(evt);
            }
        });

        O_trimQualities_value.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        O_trimQualities_value.setText("15,0");
        O_trimQualities_value.setPreferredSize(new java.awt.Dimension(100, 27));
        O_trimQualities_value.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                O_trimQualities_valueFocusLost(evt);
            }
        });

        jLabel5.setText("phred --quality-base=");

        O_qualityBase33_box.setText("33");
        O_qualityBase33_box.setName("O_qualityBase33_box"); // NOI18N
        O_qualityBase33_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_qualityBase33_boxActionPerformed(evt);
            }
        });

        O_qualityBase64_box.setText("64");
        O_qualityBase64_box.setName("O_qualityBase64_box"); // NOI18N
        O_qualityBase64_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_qualityBase64_boxActionPerformed(evt);
            }
        });

        O_e_box.setText("-e");
        O_e_box.setName("O_e_box"); // NOI18N
        O_e_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_e_boxActionPerformed(evt);
            }
        });

        O_e_value.setModel(new javax.swing.SpinnerNumberModel(0.1d, 0.0d, 1.0d, 0.1d));
        O_e_value.setName("O_e_value"); // NOI18N
        O_e_value.setPreferredSize(new java.awt.Dimension(100, 28));
        O_e_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                O_e_valueStateChanged(evt);
            }
        });

        O_times_box.setText("--times/-n");
        O_times_box.setName("O_times_box"); // NOI18N
        O_times_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_times_boxActionPerformed(evt);
            }
        });

        O_times_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        O_times_value.setName("O_times_value"); // NOI18N
        O_times_value.setPreferredSize(new java.awt.Dimension(100, 28));
        O_times_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                O_times_valueStateChanged(evt);
            }
        });

        O_noTrim_box.setText("--no-trim");
        O_noTrim_box.setName("O_noTrim_box"); // NOI18N
        O_noTrim_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_noTrim_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Options_panelLayout = new javax.swing.GroupLayout(Options_panel);
        Options_panel.setLayout(Options_panelLayout);
        Options_panelLayout.setHorizontalGroup(
            Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Options_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(O_noIndels_box)
                    .addGroup(Options_panelLayout.createSequentialGroup()
                        .addComponent(O_overlap_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(O_overlap_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Options_panelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(O_qualityBase33_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(O_qualityBase64_box))
                    .addGroup(Options_panelLayout.createSequentialGroup()
                        .addComponent(O_e_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(O_e_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Options_panelLayout.createSequentialGroup()
                        .addComponent(O_trimQualities_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(O_trimQualities_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Options_panelLayout.createSequentialGroup()
                        .addComponent(O_times_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(O_times_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(O_noTrim_box))
                .addContainerGap(148, Short.MAX_VALUE))
        );
        Options_panelLayout.setVerticalGroup(
            Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Options_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(O_noIndels_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O_e_box)
                    .addComponent(O_e_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O_overlap_box)
                    .addComponent(O_overlap_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O_trimQualities_box)
                    .addComponent(O_trimQualities_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(O_qualityBase33_box)
                    .addComponent(O_qualityBase64_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O_times_box)
                    .addComponent(O_times_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_noTrim_box)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        O_noIndels_box.getAccessibleContext().setAccessibleDescription("disallow insertions and deletions entirely");
        O_overlap_box.getAccessibleContext().setAccessibleDescription("minimum overlap length Default 3");
        O_trimQualities_box.getAccessibleContext().setAccessibleDescription("default 0,0 the first 0 is for 5' the second is for 3'");
        O_e_box.getAccessibleContext().setAccessibleDescription("error tolerance is adjusted by specifying a maximum error rate 0.1 by default");
        O_times_value.getAccessibleContext().setAccessibleDescription("--times or -n\tsearch for all the given adapter sequences repeatedly, min 1, --times=2 or -n 2");
        O_noTrim_box.getAccessibleContext().setAccessibleDescription("no trim the input files at all");

        jTabbedPane1.addTab("Options", Options_panel);

        NB_N_box.setText("disable Wildcards \"-N\"");
        NB_N_box.setName("NB_N_box"); // NOI18N
        NB_N_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NB_N_boxActionPerformed(evt);
            }
        });

        NB_matchReadWildcards_box.setText("--match-read-wildcards");
        NB_matchReadWildcards_box.setName("NB_matchReadWildcards_box"); // NOI18N
        NB_matchReadWildcards_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NB_matchReadWildcards_boxActionPerformed(evt);
            }
        });

        NB_trimN_box.setText("--trim-n");
        NB_trimN_box.setName("NB_trimN_box"); // NOI18N
        NB_trimN_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NB_trimN_boxActionPerformed(evt);
            }
        });

        NB_maxN_box.setText("--max-n");
        NB_maxN_box.setName("NB_maxN_box"); // NOI18N
        NB_maxN_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NB_maxN_boxActionPerformed(evt);
            }
        });

        NB_maxN_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        NB_maxN_value.setName("NB_maxN_value"); // NOI18N
        NB_maxN_value.setPreferredSize(new java.awt.Dimension(100, 28));
        NB_maxN_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                NB_maxN_valueStateChanged(evt);
            }
        });

        javax.swing.GroupLayout NBases_panelLayout = new javax.swing.GroupLayout(NBases_panel);
        NBases_panel.setLayout(NBases_panelLayout);
        NBases_panelLayout.setHorizontalGroup(
            NBases_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NBases_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NBases_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NB_trimN_box)
                    .addComponent(NB_N_box)
                    .addComponent(NB_matchReadWildcards_box)
                    .addGroup(NBases_panelLayout.createSequentialGroup()
                        .addComponent(NB_maxN_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NB_maxN_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        NBases_panelLayout.setVerticalGroup(
            NBases_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NBases_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NB_trimN_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NB_N_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NB_matchReadWildcards_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NBases_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NB_maxN_box)
                    .addComponent(NB_maxN_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("N Bases", NBases_panel);

        OP_minimumLength_box.setText("--minimum-length/-m");
        OP_minimumLength_box.setName("OP_minimumLength_box"); // NOI18N
        OP_minimumLength_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OP_minimumLength_boxActionPerformed(evt);
            }
        });

        OP_minimumLength_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        OP_minimumLength_value.setName("OP_minimumLength_value"); // NOI18N
        OP_minimumLength_value.setPreferredSize(new java.awt.Dimension(100, 28));
        OP_minimumLength_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                OP_minimumLength_valueStateChanged(evt);
            }
        });

        OP_tooShortOutput_box.setText("--too-short-output");
        OP_tooShortOutput_box.setName("OP_tooShortOutput_box"); // NOI18N
        OP_tooShortOutput_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OP_tooShortOutput_boxActionPerformed(evt);
            }
        });

        OP_maximumLength_box.setText("--maximum-length/-M");
        OP_maximumLength_box.setName("OP_maximumLength_box"); // NOI18N
        OP_maximumLength_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OP_maximumLength_boxActionPerformed(evt);
            }
        });

        OP_maximumLength_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        OP_maximumLength_value.setName("OP_maximumLength_value"); // NOI18N
        OP_maximumLength_value.setPreferredSize(new java.awt.Dimension(100, 28));
        OP_maximumLength_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                OP_maximumLength_valueStateChanged(evt);
            }
        });

        OP_tooLongOutput_box.setText("--too-long-output");
        OP_tooLongOutput_box.setName("OP_tooLongOutput_box"); // NOI18N
        OP_tooLongOutput_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OP_tooLongOutput_boxActionPerformed(evt);
            }
        });

        OP_untrimmedOutput_box.setText("--untrimmed-output");
        OP_untrimmedOutput_box.setName("OP_untrimmedOutput_box"); // NOI18N
        OP_untrimmedOutput_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OP_untrimmedOutput_boxActionPerformed(evt);
            }
        });

        OP_discardTrimmed_box.setText("--discard-trimmed");
        OP_discardTrimmed_box.setName("OP_discardTrimmed_box"); // NOI18N
        OP_discardTrimmed_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OP_discardTrimmed_boxActionPerformed(evt);
            }
        });

        OP_untrimmedPairedOutput_box.setText("--untrimmed-paired-output");
        OP_untrimmedPairedOutput_box.setName("OP_untrimmedPairedOutput_box"); // NOI18N
        OP_untrimmedPairedOutput_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OP_untrimmedPairedOutput_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Output_panelLayout = new javax.swing.GroupLayout(Output_panel);
        Output_panel.setLayout(Output_panelLayout);
        Output_panelLayout.setHorizontalGroup(
            Output_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Output_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Output_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Output_panelLayout.createSequentialGroup()
                        .addComponent(OP_minimumLength_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OP_minimumLength_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(OP_tooShortOutput_box)
                    .addGroup(Output_panelLayout.createSequentialGroup()
                        .addComponent(OP_maximumLength_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OP_maximumLength_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(OP_tooLongOutput_box)
                    .addComponent(OP_untrimmedOutput_box)
                    .addComponent(OP_discardTrimmed_box)
                    .addComponent(OP_untrimmedPairedOutput_box))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        Output_panelLayout.setVerticalGroup(
            Output_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Output_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Output_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OP_minimumLength_box)
                    .addComponent(OP_minimumLength_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OP_tooShortOutput_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Output_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OP_maximumLength_box)
                    .addComponent(OP_maximumLength_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OP_tooLongOutput_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OP_untrimmedOutput_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OP_untrimmedPairedOutput_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OP_discardTrimmed_box)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Output", Output_panel);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Colorspace"));

        OT_C_stripF3_box.setText("--strip-f3");
        OT_C_stripF3_box.setName("OT_C_stripF3_box"); // NOI18N
        OT_C_stripF3_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OT_C_stripF3_boxActionPerformed(evt);
            }
        });

        OT_C_colorspace_box.setText("--colorspace/-c");
        OT_C_colorspace_box.setName("OT_C_colorspace_box"); // NOI18N
        OT_C_colorspace_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OT_C_colorspace_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(OT_C_colorspace_box)
                .addGap(18, 18, 18)
                .addComponent(OT_C_stripF3_box)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(OT_C_colorspace_box)
                .addComponent(OT_C_stripF3_box))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Double Encoding"));
        jPanel10.setPreferredSize(new java.awt.Dimension(393, 123));

        OT_DE_bwa_box.setText("--bwa/--maq");
        OT_DE_bwa_box.setName("OT_DE_bwa_box"); // NOI18N
        OT_DE_bwa_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OT_DE_bwa_boxActionPerformed(evt);
            }
        });

        OT_DE_d_box.setText("-d");
        OT_DE_d_box.setName("OT_DE_d_box"); // NOI18N
        OT_DE_d_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OT_DE_d_boxActionPerformed(evt);
            }
        });

        OT_DE_trimPrimer_box.setText("--trim-primer/-t");
        OT_DE_trimPrimer_box.setName("OT_DE_trimPrimer_box"); // NOI18N
        OT_DE_trimPrimer_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OT_DE_trimPrimer_boxActionPerformed(evt);
            }
        });

        OT_DE_noZeroCap_box.setText("--no-zero-cap (BOWTIE)");
        OT_DE_noZeroCap_box.setName("OT_DE_noZeroCap_box"); // NOI18N
        OT_DE_noZeroCap_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OT_DE_noZeroCap_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(OT_DE_bwa_box)
                        .addGap(18, 18, 18)
                        .addComponent(OT_DE_noZeroCap_box))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(OT_DE_d_box)
                        .addGap(18, 18, 18)
                        .addComponent(OT_DE_trimPrimer_box)))
                .addGap(0, 68, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OT_DE_bwa_box)
                    .addComponent(OT_DE_noZeroCap_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OT_DE_d_box)
                    .addComponent(OT_DE_trimPrimer_box)))
        );

        javax.swing.GroupLayout Other_panelLayout = new javax.swing.GroupLayout(Other_panel);
        Other_panel.setLayout(Other_panelLayout);
        Other_panelLayout.setHorizontalGroup(
            Other_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Other_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Other_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        Other_panelLayout.setVerticalGroup(
            Other_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Other_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Other", Other_panel);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(CADAPT_singleRead_button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CADAPT_pairedEndRead_button))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(reset_jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(stop_jButton4)
                                .addGap(18, 18, 18)
                                .addComponent(run_jButton5)
                                .addGap(18, 18, 18)
                                .addComponent(ClosejButton6))
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CADAPT_singleRead_button)
                    .addComponent(CADAPT_pairedEndRead_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset_jButton3)
                    .addComponent(stop_jButton4)
                    .addComponent(run_jButton5)
                    .addComponent(ClosejButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 449, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
        );

        CutadaptEditor.addTab("CutAdapt", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addComponent(CutadaptEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CutadaptEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        CutadaptEditor.getAccessibleContext().setAccessibleName("BwaEditors");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void CutadaptEditorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_CutadaptEditorComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_CutadaptEditorComponentShown
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void ClosejButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClosejButton6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_ClosejButton6ActionPerformed
    
    private void run_jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_jButton5ActionPerformed
        // TODO add your handling code here:
        if (this.properties.isSet("ClassName")) {
            this.parent_workflow.workflow.updateDependance();
            programs prog=new programs(parent_workflow.workbox.getCurrentWorkflows());
            prog.Run(properties);
        }
    }//GEN-LAST:event_run_jButton5ActionPerformed
    
    private void stop_jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop_jButton4ActionPerformed
        // TODO add your handling code here:
        properties.put("Status", Config.status_nothing);
        properties.killThread();
    }//GEN-LAST:event_stop_jButton4ActionPerformed
    
    private void reset_jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_jButton3ActionPerformed
        // TODO add your handling code here:
        properties.load();             //--reload current properties from file
        this.setProperties(properties);//--Update current field
        //this.display(properties); // Doesn't work
        this.setVisible(false);
    }//GEN-LAST:event_reset_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        properties.put("Name", this.name_jTextField1.getText());
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void name_jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_jTextField1ActionPerformed

    private void R1_a_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_a_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R1_ANCH_a_box.getName())) {
            properties.remove(R1_ANCH_a_box.getName());
            R1_ANCH_a_box.setSelected(false);
        }
        cleanR1_5and3options();
        boxEventText(R1_a_box,R1_a_value);
    }//GEN-LAST:event_R1_a_boxActionPerformed

    private void R1_ANCH_a_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_ANCH_a_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R1_a_box.getName())) {
            properties.remove(R1_a_box.getName());
            R1_a_box.setSelected(false);
        }
        cleanR1_5and3options();
        boxEventText(R1_ANCH_a_box,R1_a_value);
    }//GEN-LAST:event_R1_ANCH_a_boxActionPerformed

    private void R1_g_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_g_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R1_ANCH_g_box.getName())) {
            properties.remove(R1_ANCH_g_box.getName());
            R1_ANCH_g_box.setSelected(false);
        }
        cleanR1_5and3options();
        boxEventText(R1_g_box,R1_g_value);
    }//GEN-LAST:event_R1_g_boxActionPerformed

    private void R1_ANCH_g_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_ANCH_g_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R1_g_box.getName())) {
            properties.remove(R1_g_box.getName());
            R1_g_box.setSelected(false);
        }
        cleanR1_5and3options();
        boxEventText(R1_ANCH_g_box,R1_g_value);
    }//GEN-LAST:event_R1_ANCH_g_boxActionPerformed

    private void R1_anywhere_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_anywhere_boxActionPerformed
        // TODO add your handling code here:
        cleanR1_5or3options();
        boxEventText(R1_anywhere_box,R1_anywhere_value);
    }//GEN-LAST:event_R1_anywhere_boxActionPerformed

    private void R1_a_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_a_valueActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R1_ANCH_a_box.getName()))
            boxEventText(R1_ANCH_a_box,R1_a_value);
        if (properties.isSet(R1_a_box.getName()))
            boxEventText(R1_a_box,R1_a_value);
    }//GEN-LAST:event_R1_a_valueActionPerformed

    private void R1_g_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_g_valueActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R1_ANCH_g_box.getName()))
            boxEventText(R1_ANCH_g_box,R1_g_value);
        if (properties.isSet(R1_g_box.getName()))
            boxEventText(R1_g_box,R1_g_value);
    }//GEN-LAST:event_R1_g_valueActionPerformed

    private void R1_a_valueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R1_a_valueFocusLost
        // TODO add your handling code here:
        if (properties.isSet(R1_ANCH_a_box.getName()))
            boxEventText(R1_ANCH_a_box,R1_a_value);
        if (properties.isSet(R1_a_box.getName()))
            boxEventText(R1_a_box,R1_a_value);
    }//GEN-LAST:event_R1_a_valueFocusLost

    private void R1_g_valueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R1_g_valueFocusLost
        // TODO add your handling code here:
        if (properties.isSet(R1_ANCH_g_box.getName()))
            boxEventText(R1_ANCH_g_box,R1_g_value);
        if (properties.isSet(R1_g_box.getName()))
            boxEventText(R1_g_box,R1_g_value);
    }//GEN-LAST:event_R1_g_valueFocusLost

    private void R1_anywhere_valueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R1_anywhere_valueFocusLost
        // TODO add your handling code here:
        boxEventText(R1_anywhere_box,R1_anywhere_value);
    }//GEN-LAST:event_R1_anywhere_valueFocusLost

    private void R1_anywhere_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_anywhere_valueActionPerformed
        // TODO add your handling code here:
        boxEventText(R1_anywhere_box,R1_anywhere_value);
    }//GEN-LAST:event_R1_anywhere_valueActionPerformed

    private void R2_A_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2_A_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R2_ANCH_A_box.getName())) {
            properties.remove(R2_ANCH_A_box.getName());
            R2_ANCH_A_box.setSelected(false);
        }
        cleanR2_5and3options();
        boxEventText(R2_A_box,R2_A_value);
    }//GEN-LAST:event_R2_A_boxActionPerformed

    private void R2_ANCH_A_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2_ANCH_A_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R2_A_box.getName())) {
            properties.remove(R2_A_box.getName());
            R2_A_box.setSelected(false);
        }
        cleanR2_5and3options();
        boxEventText(R2_ANCH_A_box,R2_A_value);
    }//GEN-LAST:event_R2_ANCH_A_boxActionPerformed

    private void R2_A_valueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R2_A_valueFocusLost
        // TODO add your handling code here:
        if (properties.isSet(R2_ANCH_A_box.getName()))
            boxEventText(R2_ANCH_A_box,R2_A_value);
        if (properties.isSet(R2_A_box.getName()))
            boxEventText(R2_A_box,R2_A_value);
    }//GEN-LAST:event_R2_A_valueFocusLost

    private void R2_A_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2_A_valueActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R2_ANCH_A_box.getName()))
            boxEventText(R2_ANCH_A_box,R2_A_value);
        if (properties.isSet(R2_A_box.getName()))
            boxEventText(R2_A_box,R2_A_value);
    }//GEN-LAST:event_R2_A_valueActionPerformed

    private void R2_G_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2_G_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R2_ANCH_G_box.getName())) {
            properties.remove(R2_ANCH_G_box.getName());
            R2_ANCH_G_box.setSelected(false);
        }
        cleanR2_5and3options();
        boxEventText(R2_G_box,R2_G_value);
    }//GEN-LAST:event_R2_G_boxActionPerformed

    private void R2_ANCH_G_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2_ANCH_G_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R2_G_box.getName())) {
            properties.remove(R2_G_box.getName());
            R2_G_box.setSelected(false);
        }
        cleanR2_5and3options();
        boxEventText(R2_ANCH_G_box,R2_G_value);
    }//GEN-LAST:event_R2_ANCH_G_boxActionPerformed

    private void R2_G_valueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R2_G_valueFocusLost
        // TODO add your handling code here:
        if (properties.isSet(R2_ANCH_G_box.getName()))
            boxEventText(R2_ANCH_G_box,R2_G_value);
        if (properties.isSet(R2_G_box.getName()))
            boxEventText(R2_G_box,R2_G_value);
    }//GEN-LAST:event_R2_G_valueFocusLost

    private void R2_G_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2_G_valueActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(R2_ANCH_G_box.getName()))
            boxEventText(R2_ANCH_G_box,R2_G_value);
        if (properties.isSet(R2_G_box.getName()))
            boxEventText(R2_G_box,R2_G_value);
    }//GEN-LAST:event_R2_G_valueActionPerformed

    private void R2_B_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2_B_boxActionPerformed
        // TODO add your handling code here:
        cleanR2_5or3options();
        boxEventText(R2_B_box,R2_B_value);
    }//GEN-LAST:event_R2_B_boxActionPerformed

    private void R2_B_valueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R2_B_valueFocusLost
        // TODO add your handling code here:
        boxEventText(R2_B_box,R2_B_value);
    }//GEN-LAST:event_R2_B_valueFocusLost

    private void R2_B_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2_B_valueActionPerformed
        // TODO add your handling code here:
        boxEventText(R2_B_box,R2_B_value);
    }//GEN-LAST:event_R2_B_valueActionPerformed

    private void R1_cut_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_cut_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(R1_cut_box,R1_cut_value);
    }//GEN-LAST:event_R1_cut_boxActionPerformed

    private void R1_cut_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_R1_cut_valueStateChanged
        // TODO add your handling code here:
        boxEventSpinner(R1_cut_box,R1_cut_value);
    }//GEN-LAST:event_R1_cut_valueStateChanged

    private void R1_infoFile_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_infoFile_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(R1_infoFile_box,null);
        cleanRFileOptions(R1_infoFile_box.getName());
    }//GEN-LAST:event_R1_infoFile_boxActionPerformed

    private void R1_restFile_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_restFile_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(R1_restFile_box,null);
        cleanRFileOptions(R1_restFile_box.getName());
    }//GEN-LAST:event_R1_restFile_boxActionPerformed

    private void R1_wildcardFile_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_wildcardFile_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(R1_wildcardFile_box,null);
        cleanRFileOptions(R1_wildcardFile_box.getName());
    }//GEN-LAST:event_R1_wildcardFile_boxActionPerformed

    private void R1_discard_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1_discard_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(R1_discard_box,null);
        cleanRFileOptions(R1_discard_box.getName());
    }//GEN-LAST:event_R1_discard_boxActionPerformed

    private void R2_U_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2_U_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(R2_U_box,R2_U_value);
    }//GEN-LAST:event_R2_U_boxActionPerformed

    private void O_noIndels_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_noIndels_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(O_noIndels_box,null);
    }//GEN-LAST:event_O_noIndels_boxActionPerformed

    private void O_e_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_e_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(O_e_box,O_e_value);
    }//GEN-LAST:event_O_e_boxActionPerformed

    private void O_e_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_O_e_valueStateChanged
        // TODO add your handling code here:
        boxEventSpinner(O_e_box,O_e_value);
    }//GEN-LAST:event_O_e_valueStateChanged

    private void R2_U_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_R2_U_valueStateChanged
        // TODO add your handling code here:
        boxEventSpinner(R2_U_box,R2_U_value);
    }//GEN-LAST:event_R2_U_valueStateChanged

    private void O_overlap_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_overlap_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(O_overlap_box,O_overlap_value);
    }//GEN-LAST:event_O_overlap_boxActionPerformed

    private void O_overlap_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_O_overlap_valueStateChanged
        // TODO add your handling code here:
        boxEventSpinner(O_overlap_box,O_overlap_value);
    }//GEN-LAST:event_O_overlap_valueStateChanged

    private void O_trimQualities_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_trimQualities_boxActionPerformed
        // TODO add your handling code here:
        if (!O_trimQualities_value.getText().matches("\\d+,\\d+")){
            O_trimQualities_value.setText("0,0");
        }
        boxEventText(O_trimQualities_box,O_trimQualities_value);
    }//GEN-LAST:event_O_trimQualities_boxActionPerformed

    private void O_trimQualities_valueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_trimQualities_valueFocusLost
        // TODO add your handling code here:
        if (!O_trimQualities_value.getText().matches("\\d+,\\d+")){
            O_trimQualities_value.setText("0,0");
        }
        boxEventText(O_trimQualities_box,O_trimQualities_value);
    }//GEN-LAST:event_O_trimQualities_valueFocusLost

    private void O_qualityBase33_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_qualityBase33_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(O_qualityBase64_box.getName())){
            properties.remove(O_qualityBase64_box.getName());
            O_qualityBase64_box.setSelected(false);
        }
        boxEventSpinner(O_qualityBase33_box,null);
    }//GEN-LAST:event_O_qualityBase33_boxActionPerformed

    private void O_qualityBase64_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_qualityBase64_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(O_qualityBase33_box.getName())){
            properties.remove(O_qualityBase33_box.getName());
            O_qualityBase33_box.setSelected(false);
        }
        boxEventSpinner(O_qualityBase64_box,null);
    }//GEN-LAST:event_O_qualityBase64_boxActionPerformed

    private void O_times_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_times_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(O_times_box,O_times_value);
    }//GEN-LAST:event_O_times_boxActionPerformed

    private void O_times_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_O_times_valueStateChanged
        // TODO add your handling code here:
        boxEventSpinner(O_times_box,O_times_value);
    }//GEN-LAST:event_O_times_valueStateChanged

    private void O_noTrim_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_noTrim_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(O_noTrim_box,null);
    }//GEN-LAST:event_O_noTrim_boxActionPerformed

    private void NB_trimN_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NB_trimN_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(NB_trimN_box,null);
    }//GEN-LAST:event_NB_trimN_boxActionPerformed

    private void NB_N_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NB_N_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(NB_N_box,null);
    }//GEN-LAST:event_NB_N_boxActionPerformed

    private void NB_matchReadWildcards_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NB_matchReadWildcards_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(NB_matchReadWildcards_box,null);
    }//GEN-LAST:event_NB_matchReadWildcards_boxActionPerformed

    private void NB_maxN_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NB_maxN_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(NB_maxN_box,NB_maxN_value);
    }//GEN-LAST:event_NB_maxN_boxActionPerformed

    private void NB_maxN_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_NB_maxN_valueStateChanged
        // TODO add your handling code here:
        boxEventSpinner(NB_maxN_box,NB_maxN_value);
    }//GEN-LAST:event_NB_maxN_valueStateChanged

    private void OP_minimumLength_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OP_minimumLength_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OP_minimumLength_box,OP_minimumLength_value);
        if (properties.isSet(OP_minimumLength_box.getName())){
            OP_tooShortOutput_box.setEnabled(true);
        } else {
            OP_tooShortOutput_box.setEnabled(false);
            properties.remove(OP_tooShortOutput_box.getName());
        }
    }//GEN-LAST:event_OP_minimumLength_boxActionPerformed

    private void OP_minimumLength_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_OP_minimumLength_valueStateChanged
        // TODO add your handling code here:
        boxEventSpinner(OP_minimumLength_box,OP_minimumLength_value);
    }//GEN-LAST:event_OP_minimumLength_valueStateChanged

    private void OP_tooShortOutput_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OP_tooShortOutput_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OP_tooShortOutput_box,null);
    }//GEN-LAST:event_OP_tooShortOutput_boxActionPerformed

    private void OP_maximumLength_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OP_maximumLength_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OP_maximumLength_box,OP_maximumLength_value);
        if (properties.isSet(OP_maximumLength_box.getName())){
            OP_tooLongOutput_box.setEnabled(true);
        } else {
            OP_tooLongOutput_box.setEnabled(false);
            properties.remove(OP_tooLongOutput_box.getName());
        }
    }//GEN-LAST:event_OP_maximumLength_boxActionPerformed

    private void OP_maximumLength_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_OP_maximumLength_valueStateChanged
        // TODO add your handling code here:
        boxEventSpinner(OP_maximumLength_box,OP_maximumLength_value);
    }//GEN-LAST:event_OP_maximumLength_valueStateChanged

    private void OP_tooLongOutput_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OP_tooLongOutput_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OP_tooLongOutput_box,null);
    }//GEN-LAST:event_OP_tooLongOutput_boxActionPerformed

    private void OP_untrimmedOutput_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OP_untrimmedOutput_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OP_untrimmedOutput_box,null);
        if (properties.isSet(OP_untrimmedOutput_box.getName())){
            OP_untrimmedPairedOutput_box.setEnabled(true);
        } else {
            OP_untrimmedPairedOutput_box.setEnabled(false);
            properties.remove(OP_untrimmedOutput_box.getName());
        }
    }//GEN-LAST:event_OP_untrimmedOutput_boxActionPerformed

    private void OP_untrimmedPairedOutput_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OP_untrimmedPairedOutput_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OP_untrimmedPairedOutput_box,null);
    }//GEN-LAST:event_OP_untrimmedPairedOutput_boxActionPerformed

    private void OP_discardTrimmed_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OP_discardTrimmed_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OP_discardTrimmed_box,null);
    }//GEN-LAST:event_OP_discardTrimmed_boxActionPerformed

    private void OT_C_colorspace_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OT_C_colorspace_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OT_C_colorspace_box,null);
    }//GEN-LAST:event_OT_C_colorspace_boxActionPerformed

    private void OT_C_stripF3_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OT_C_stripF3_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OT_C_stripF3_box,null);
    }//GEN-LAST:event_OT_C_stripF3_boxActionPerformed

    private void OT_DE_bwa_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OT_DE_bwa_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OT_DE_bwa_box,null);
    }//GEN-LAST:event_OT_DE_bwa_boxActionPerformed

    private void OT_DE_noZeroCap_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OT_DE_noZeroCap_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OT_DE_noZeroCap_box,null);
    }//GEN-LAST:event_OT_DE_noZeroCap_boxActionPerformed

    private void OT_DE_d_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OT_DE_d_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OT_DE_d_box,null);
    }//GEN-LAST:event_OT_DE_d_boxActionPerformed

    private void OT_DE_trimPrimer_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OT_DE_trimPrimer_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(OT_DE_trimPrimer_box,null);
    }//GEN-LAST:event_OT_DE_trimPrimer_boxActionPerformed

    private void CADAPT_pairedEndRead_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CADAPT_pairedEndRead_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(CADAPT_singleRead_button.getName()))
            properties.remove(CADAPT_singleRead_button.getName());
        
        buttonEvent(CADAPT_pairedEndRead_button);
    }//GEN-LAST:event_CADAPT_pairedEndRead_buttonActionPerformed

    private void CADAPT_singleRead_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CADAPT_singleRead_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(CADAPT_pairedEndRead_button.getName()))
            properties.remove(CADAPT_pairedEndRead_button.getName());
        cleanRead2PanelOptions();
        buttonEvent(CADAPT_singleRead_button);
    }//GEN-LAST:event_CADAPT_singleRead_buttonActionPerformed
    
    
    /**
     * CleansValues
     */
    public void removePropertiesIn(String[] sTab,String s) {
        if (s.equals("null")){
            for (String sT:sTab)
                if (properties.isSet(sT))
                    properties.remove(sT);
        } else {
            for (String sT:sTab)
                if (properties.isSet(sT)&&!s.equals(sT))
                    properties.remove(sT);
        }
    }
    
    public void cleanR1_5or3options() {
        String[] sTab = {
            R1_a_box.getName(),
            R1_ANCH_a_box.getName(),
            R1_g_box.getName(),
            R1_ANCH_g_box.getName()
        };
        removePropertiesIn(sTab,"null");
        
        R1_g_value.setEnabled(false);
        R1_a_value.setEnabled(false);
        R1_a_box.setSelected(false);
        R1_ANCH_a_box.setSelected(false);
        R1_g_box.setSelected(false);
        R1_ANCH_g_box.setSelected(false);
    }
    
    public void cleanR1_5and3options() {
        if (properties.isSet(R1_anywhere_box.getName()))
            properties.remove(R1_anywhere_box.getName());
        R1_anywhere_value.setEnabled(false);
        R1_anywhere_box.setSelected(false);
    }
    
    public void cleanR2_5or3options() {
        String[] sTab = {
            R2_A_box.getName(),
            R2_ANCH_A_box.getName(),
            R1_g_box.getName(),
            R2_ANCH_G_box.getName()
        };
        removePropertiesIn(sTab,"null");
        
        R2_G_value.setEnabled(false);
        R2_A_value.setEnabled(false);
        R2_A_box.setSelected(false);
        R2_ANCH_A_box.setSelected(false);
        R2_G_box.setSelected(false);
        R2_ANCH_G_box.setSelected(false);
    }
    
    public void cleanR2_5and3options() {
        if (properties.isSet(R2_B_box.getName()))
            properties.remove(R2_B_box.getName());
        R2_B_value.setEnabled(false);
        R2_B_box.setSelected(false);
    }
    
    public void cleanRFileOptions(String s) {
        String[] sTab = {
            R1_infoFile_box.getName(),
            R1_restFile_box.getName(),
            R1_wildcardFile_box.getName(),
            R1_discard_box.getName()
        };
        removePropertiesIn(sTab,s);
    }
    
    private void cleanRead2PanelOptions () {
        String[] sTab = {
            R2_ANCH_A_box.getName(),
            R2_A_box.getName(),
            R2_B_box.getName(),
            R2_ANCH_G_box.getName(),
            R2_G_box.getName(),
            R2_U_box.getName()
        };
        removePropertiesIn(sTab,"null");
    }
    
    /**
     * Save Values
     * /!\ DONT FORGET TO ADD A NAME in the design for all /!\
     * @param Save_Values
     */
    //For Box and text
    private void boxEventText(javax.swing.JCheckBox b,javax.swing.JTextField t){
        if (b.isSelected()==true){
            if (t == null) {
                properties.put(b.getName(),b.isSelected());
            } else {
                t.setEnabled(true);
                properties.put(t.getName(),t.getText());
                properties.put(b.getName(),t.getText());
            }
        } else {
            properties.remove(b.getName());
            if (t != null){
                t.setEnabled(false);
            }
        }
    }
    //For Box and spinner
    private void boxEventSpinner(javax.swing.JCheckBox b,javax.swing.JSpinner s){
        if (b.isSelected()==true){
            if (s == null) {
                properties.put(b.getName(),b.isSelected());
            } else {
                s.setEnabled(true);
                properties.put(s.getName(),s.getValue());
                properties.put(b.getName(),s.getValue());
            }
        } else {
            properties.remove(b.getName());
            if (s != null){
                s.setEnabled(false);
            }
        }
    }
    //For Button and event
    private void buttonEvent(javax.swing.JRadioButton b){
        if (b.isSelected()==true){
            properties.put(b.getName(),b.isSelected());
        }
    }
    
    /**
     * Enabled panel
     */
    private void enabledRead2Panel (boolean b) {
        Read2_panel.setEnabled(b);
        
        R2_ANCH_A_box.setEnabled(b);
        R2_A_box.setEnabled(b);
        if (properties.isSet(R2_ANCH_A_box.getName())||properties.isSet(R2_A_box.getName()))
            R2_A_value.setEnabled(b);
        else R2_A_value.setEnabled(false);
        
        R2_B_box.setEnabled(b);
        if (properties.isSet(R2_B_box.getName()))
            R2_B_value.setEnabled(b);
        else R2_B_value.setEnabled(false);
        
        R2_ANCH_G_box.setEnabled(b);
        R2_G_box.setEnabled(b);
        if (properties.isSet(R2_ANCH_G_box.getName())||properties.isSet(R2_G_box.getName()))
            R2_G_value.setEnabled(b);
        else R2_G_value.setEnabled(false);
        
        R2_U_box.setEnabled(b);
        if (properties.isSet(R2_U_box.getName()))
            R2_U_value.setEnabled(b);
        else R2_U_value.setEnabled(false);
    }
    
    private void enabledOtherPanel (boolean b) {
        Other_panel.setEnabled(b);
        OT_C_colorspace_box.setEnabled(b);
        OT_C_stripF3_box.setEnabled(b);
        OT_DE_bwa_box.setEnabled(b);
        OT_DE_d_box.setEnabled(b);
        OT_DE_noZeroCap_box.setEnabled(b);
        OT_DE_trimPrimer_box.setEnabled(b);
        
        String[] sTab = {
            Other_panel.getName(),
            OT_C_colorspace_box.getName(),
            OT_C_stripF3_box.getName(),
            OT_DE_bwa_box.getName(),
            OT_DE_d_box.getName(),
            OT_DE_noZeroCap_box.getName(),
            OT_DE_trimPrimer_box.getName()
        };
        removePropertiesIn(sTab,"null");
    }
    
    /**
     * Set Properties
     */
    
    public void setProperties(workflow_properties properties) {
        this.properties=properties;
        setTitle(properties.getName());
        //if (this.properties.isSet("Description")) this.Notice.setText(properties.get("Description"));
        
        // Properties Default Options
        this.defaultPgrmValues(properties);
    }
    
    public void setProperties(String filename, String path) {
        workflow_properties tmp=new workflow_properties();
        tmp.load(filename, path);
        this.properties=tmp;
        setTitle(properties.getName());
    }
    
    private void defaultPgrmValues(workflow_properties properties) {
        String[] sTab = {
            R1_a_box.getName(),
            R1_ANCH_a_box.getName(),
            R1_g_box.getName(),
            R1_ANCH_g_box.getName(),
            R1_anywhere_box.getName()
        };
        boolean b = false;
        for (String sT:sTab)
            if (properties.isSet(sT))
                b = true;
        
        if (!b && properties.isSet("defaultPgrmValues")) {
            String defaultEditorStatus = this.properties.get("defaultPgrmValues");
            String[] arrayDefault = defaultEditorStatus.split("<>");
            int z = 0;
            for (int i =0 ; i < arrayDefault.length ; i=i+2){
                z = i;
                this.properties.put(arrayDefault[z],arrayDefault[z+1]);
            }
        }
    }
    
    /**
     * Update Saved Properties uSP
     */
    
    private void updateSavedProperties(workflow_properties properties) {
        // Menu Options
        uspMenu(properties);
        uspValues(properties);
        uspBoxesAndButtons(properties);
        enabledOtherPanel(false);
    }
    
    private void uspMenu (workflow_properties properties) {
        if (properties.isSet(CADAPT_pairedEndRead_button.getName())){
            CADAPT_pairedEndRead_button.setSelected(true);
            enabledRead2Panel(true);
        } else if (properties.isSet(CADAPT_singleRead_button.getName())) {
            CADAPT_singleRead_button.setSelected(true);
            enabledRead2Panel(false);
            cleanRead2PanelOptions();
        }
    }
    
    private void uspValues (workflow_properties properties) {
        if (properties.isSet(NB_maxN_value.getName())) {
            this.NB_maxN_value.setValue(Integer.parseInt(this.properties.get(NB_maxN_value.getName())));
            NB_maxN_value.setEnabled(false);
        }
        if (properties.isSet(OP_maximumLength_value.getName())) {
            this.OP_maximumLength_value.setValue(Integer.parseInt(this.properties.get(OP_maximumLength_value.getName())));
            OP_maximumLength_value.setEnabled(false);
        }
        if (properties.isSet(OP_minimumLength_value.getName())) {
            this.OP_minimumLength_value.setValue(Integer.parseInt(this.properties.get(OP_minimumLength_value.getName())));
            OP_minimumLength_value.setEnabled(false);
        }
        if (properties.isSet(O_e_value.getName())) {
            this.O_e_value.setValue(Integer.parseInt(this.properties.get(O_e_value.getName())));
            O_e_value.setEnabled(false);
        }
        if (properties.isSet(O_overlap_value.getName())) {
            this.O_overlap_value.setValue(Integer.parseInt(this.properties.get(O_overlap_value.getName())));
            O_overlap_value.setEnabled(false);
        }
        if (properties.isSet(O_times_value.getName())) {
            this.O_times_value.setValue(Integer.parseInt(this.properties.get(O_times_value.getName())));
            O_times_value.setEnabled(false);
        }
        if (properties.isSet(R2_U_value.getName())) {
            this.R2_U_value.setValue(Integer.parseInt(this.properties.get(R2_U_value.getName())));
            R2_U_value.setEnabled(false);
        }
        if (properties.isSet(R1_cut_value.getName())) {
            this.R1_cut_value.setValue(Integer.parseInt(this.properties.get(R1_cut_value.getName())));
            R1_cut_value.setEnabled(false);
        }
        if (properties.isSet(R1_g_value.getName())) {
            this.R1_g_value.setText(this.properties.get(R1_g_value.getName()));
            R1_g_value.setEnabled(false);
        }
        if (properties.isSet(R2_A_value.getName())) {
            this.R2_A_value.setText(this.properties.get(R2_A_value.getName()));
            R2_A_value.setEnabled(false);
        }
        if (properties.isSet(R2_B_value.getName())) {
            this.R2_B_value.setText(this.properties.get(R2_B_value.getName()));
            R2_B_value.setEnabled(false);
        }
        if (properties.isSet(R2_G_value.getName())) {
            this.R2_G_value.setText(this.properties.get(R2_G_value.getName()));
            R2_G_value.setEnabled(false);
        }
        if (properties.isSet(O_trimQualities_value.getName())) {
            this.O_trimQualities_value.setText(this.properties.get(O_trimQualities_value.getName()));
            O_trimQualities_value.setEnabled(false);
        }
        if (properties.isSet(R1_a_value.getName())) {
            this.R1_a_value.setText(this.properties.get(R1_a_value.getName()));
            R1_a_value.setEnabled(false);
        }
        if (properties.isSet(R1_anywhere_value.getName())) {
            this.R1_anywhere_value.setText(this.properties.get(R1_anywhere_value.getName()));
            R1_anywhere_value.setEnabled(false);
        }
    }
    
    
    private void uspBoxesAndButtons (workflow_properties properties) {
        
        if (properties.isSet(NB_N_box.getName())) {
            NB_N_box.setSelected(true);
        }
        if (properties.isSet(NB_matchReadWildcards_box.getName())) {
            NB_matchReadWildcards_box.setSelected(true);
        }
        if (properties.isSet(NB_maxN_box.getName())) {
            NB_maxN_box.setSelected(true);
            NB_maxN_value.setEnabled(true);
        }
        if (properties.isSet(NB_trimN_box.getName())) {
            NB_trimN_box.setSelected(true);
        }
        if (properties.isSet(OP_discardTrimmed_box.getName())) {
            OP_discardTrimmed_box.setSelected(true);
        }
        if (properties.isSet(OP_maximumLength_box.getName())) {
            OP_maximumLength_box.setSelected(true);
            OP_maximumLength_value.setEnabled(true);
        }
        if (properties.isSet(OP_minimumLength_box.getName())) {
            OP_minimumLength_box.setSelected(true);
            OP_minimumLength_value.setEnabled(true);
        }
        if (properties.isSet(OP_tooLongOutput_box.getName())) {
            OP_tooLongOutput_box.setSelected(true);
        }
        if (properties.isSet(OP_tooShortOutput_box.getName())) {
            OP_tooShortOutput_box.setSelected(true);
        }
        if (properties.isSet(OP_untrimmedOutput_box.getName())) {
            OP_untrimmedOutput_box.setSelected(true);
        }
        if (properties.isSet(OP_untrimmedPairedOutput_box.getName())) {
            OP_untrimmedPairedOutput_box.setSelected(true);
        }
        if (properties.isSet(OT_C_colorspace_box.getName())) {
            OT_C_colorspace_box.setSelected(true);
        }
        if (properties.isSet(OT_C_stripF3_box.getName())) {
            OT_C_stripF3_box.setSelected(true);
        }
        if (properties.isSet(OT_DE_bwa_box.getName())) {
            OT_DE_bwa_box.setSelected(true);
        }
        if (properties.isSet(OT_DE_d_box.getName())) {
            OT_DE_d_box.setSelected(true);
        }
        if (properties.isSet(OT_DE_noZeroCap_box.getName())) {
            OT_DE_noZeroCap_box.setSelected(true);
        }
        if (properties.isSet(OT_DE_trimPrimer_box.getName())) {
            OT_DE_trimPrimer_box.setSelected(true);
        }
        if (properties.isSet(O_e_box.getName())) {
            O_e_box.setSelected(true);
            O_e_value.setEnabled(true);
        }
        if (properties.isSet(O_noIndels_box.getName())) {
            O_noIndels_box.setSelected(true);
        }
        if (properties.isSet(O_noTrim_box.getName())) {
            O_noTrim_box.setSelected(true);
        }
        if (properties.isSet(O_overlap_box.getName())) {
            O_overlap_box.setSelected(true);
            O_overlap_value.setEnabled(true);
        }
        if (properties.isSet(O_qualityBase33_box.getName())) {
            O_qualityBase33_box.setSelected(true);
        }
        if (properties.isSet(O_qualityBase64_box.getName())) {
            O_qualityBase64_box.setSelected(true);
        }
        if (properties.isSet(O_times_box.getName())) {
            O_times_box.setSelected(true);
            O_times_value.setEnabled(true);
        }
        if (properties.isSet(O_trimQualities_box.getName())) {
            O_trimQualities_box.setSelected(true);
            O_trimQualities_value.setEnabled(true);
        }
        if (properties.isSet(R1_ANCH_a_box.getName())) {
            R1_ANCH_a_box.setSelected(true);
            R1_a_value.setEnabled(true);
        }
        if (properties.isSet(R1_ANCH_g_box.getName())) {
            R1_ANCH_g_box.setSelected(true);
            R1_g_value.setEnabled(true);
        }
        if (properties.isSet(R1_a_box.getName())) {
            R1_a_box.setSelected(true);
            R1_a_value.setEnabled(true);
        }
        if (properties.isSet(R1_anywhere_box.getName())) {
            R1_anywhere_box.setSelected(true);
            R1_anywhere_value.setEnabled(true);
        }
        if (properties.isSet(R1_cut_box.getName())) {
            R1_cut_box.setSelected(true);
            R1_cut_value.setEnabled(true);
        }
        if (properties.isSet(R1_discard_box.getName())) {
            R1_discard_box.setSelected(true);
        }
        if (properties.isSet(R1_g_box.getName())) {
            R1_g_box.setSelected(true);
            R1_g_value.setEnabled(true);
        }
        if (properties.isSet(R1_infoFile_box.getName())) {
            R1_infoFile_box.setSelected(true);
        }
        if (properties.isSet(R1_restFile_box.getName())) {
            R1_restFile_box.setSelected(true);
        }
        if (properties.isSet(R1_wildcardFile_box.getName())) {
            R1_wildcardFile_box.setSelected(true);
        }
        if (properties.isSet(R2_ANCH_A_box.getName())) {
            R2_ANCH_A_box.setSelected(true);
            R2_A_value.setEnabled(true);
        }
        if (properties.isSet(R2_ANCH_G_box.getName())) {
            R2_ANCH_G_box.setSelected(true);
            R2_G_value.setEnabled(true);
        }
        if (properties.isSet(R2_A_box.getName())) {
            R2_A_box.setSelected(true);
            R2_A_value.setEnabled(true);
        }
        if (properties.isSet(R2_B_box.getName())) {
            R2_B_box.setSelected(true);
            R2_B_value.setEnabled(true);
        }
        if (properties.isSet(R2_G_box.getName())) {
            R2_G_box.setSelected(true);
            R2_G_value.setEnabled(true);
        }
        if (properties.isSet(R2_U_box.getName())) {
            R2_U_box.setSelected(true);
            R2_U_value.setEnabled(true);
        }
    }
    
    /**
     * Set the configuration properties for this object
     */
    
    public void display(workflow_properties properties) {
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // Set position
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
                (screenSize.height-d.height)/2);
        
        this.setProperties(properties);
        
        //Update Saved Properties uSP
        this.updateSavedProperties(properties);
        
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }
    
    public void saveImage(String filename) {
        BufferedImage bi;
        try {
            bi = new Robot().createScreenCapture(this.getBounds());
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
        } catch (Exception ex) {
            Config.log("Unable to save "+filename+" dialog image");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton CADAPT_pairedEndRead_button;
    private javax.swing.JRadioButton CADAPT_singleRead_button;
    private javax.swing.ButtonGroup C_SorPE_buttons;
    private javax.swing.JButton ClosejButton6;
    private javax.swing.JTabbedPane CutadaptEditor;
    private javax.swing.JCheckBox NB_N_box;
    private javax.swing.JCheckBox NB_matchReadWildcards_box;
    private javax.swing.JCheckBox NB_maxN_box;
    private javax.swing.JSpinner NB_maxN_value;
    private javax.swing.JCheckBox NB_trimN_box;
    private javax.swing.JPanel NBases_panel;
    private javax.swing.JCheckBox OP_discardTrimmed_box;
    private javax.swing.JCheckBox OP_maximumLength_box;
    private javax.swing.JSpinner OP_maximumLength_value;
    private javax.swing.JCheckBox OP_minimumLength_box;
    private javax.swing.JSpinner OP_minimumLength_value;
    private javax.swing.JCheckBox OP_tooLongOutput_box;
    private javax.swing.JCheckBox OP_tooShortOutput_box;
    private javax.swing.JCheckBox OP_untrimmedOutput_box;
    private javax.swing.JCheckBox OP_untrimmedPairedOutput_box;
    private javax.swing.JCheckBox OT_C_colorspace_box;
    private javax.swing.JCheckBox OT_C_stripF3_box;
    private javax.swing.JCheckBox OT_DE_bwa_box;
    private javax.swing.JCheckBox OT_DE_d_box;
    private javax.swing.JCheckBox OT_DE_noZeroCap_box;
    private javax.swing.JCheckBox OT_DE_trimPrimer_box;
    private javax.swing.JCheckBox O_e_box;
    private javax.swing.JSpinner O_e_value;
    private javax.swing.JCheckBox O_noIndels_box;
    private javax.swing.JCheckBox O_noTrim_box;
    private javax.swing.JCheckBox O_overlap_box;
    private javax.swing.JSpinner O_overlap_value;
    private javax.swing.JCheckBox O_qualityBase33_box;
    private javax.swing.JCheckBox O_qualityBase64_box;
    private javax.swing.JCheckBox O_times_box;
    private javax.swing.JSpinner O_times_value;
    private javax.swing.JCheckBox O_trimQualities_box;
    private javax.swing.JTextField O_trimQualities_value;
    private javax.swing.JPanel Options_panel;
    private javax.swing.JPanel Other_panel;
    private javax.swing.JPanel Output_panel;
    private javax.swing.JCheckBox R1_ANCH_a_box;
    private javax.swing.JCheckBox R1_ANCH_g_box;
    private javax.swing.JCheckBox R1_a_box;
    private javax.swing.JTextField R1_a_value;
    private javax.swing.JCheckBox R1_anywhere_box;
    private javax.swing.JTextField R1_anywhere_value;
    private javax.swing.JCheckBox R1_cut_box;
    private javax.swing.JSpinner R1_cut_value;
    private javax.swing.JCheckBox R1_discard_box;
    private javax.swing.JCheckBox R1_g_box;
    private javax.swing.JTextField R1_g_value;
    private javax.swing.JCheckBox R1_infoFile_box;
    private javax.swing.JCheckBox R1_restFile_box;
    private javax.swing.JCheckBox R1_wildcardFile_box;
    private javax.swing.JCheckBox R2_ANCH_A_box;
    private javax.swing.JCheckBox R2_ANCH_G_box;
    private javax.swing.JCheckBox R2_A_box;
    private javax.swing.JTextField R2_A_value;
    private javax.swing.JCheckBox R2_B_box;
    private javax.swing.JTextField R2_B_value;
    private javax.swing.JCheckBox R2_G_box;
    private javax.swing.JTextField R2_G_value;
    private javax.swing.JCheckBox R2_U_box;
    private javax.swing.JSpinner R2_U_value;
    private javax.swing.JPanel Read1_panel;
    private javax.swing.JPanel Read2_panel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField name_jTextField1;
    private javax.swing.JButton reset_jButton3;
    private javax.swing.JButton run_jButton5;
    private javax.swing.JButton stop_jButton4;
    // End of variables declaration//GEN-END:variables
}
