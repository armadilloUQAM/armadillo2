/**
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package editors;

import configuration.Config;
import configuration.Util;
import editor.EditorInterface;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JRadioButton;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import program.*;
import workflows.armadillo_workflow;
import workflows.workflow_properties;
import workflows.workflow_properties_dictionnary;

/**
 *
 * @author : J-G
 * @Date   : 11-02-2017
 */

public class RepeatMaskerEditors extends javax.swing.JDialog implements EditorInterface {

    /**
     * Creates new form RepeatMaskerEditors
     */
    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected = "";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow  parent_workflow;

    public final String defaultNameString="Name";
    static final boolean default_map=true;
    public static HashMap<JCheckBox,JSpinner> DictMenuCBS0 = new HashMap<JCheckBox,JSpinner>();
    public static HashMap<JCheckBox,JTextField> DictMenuCBT0 = new HashMap<JCheckBox,JTextField>();
    public static HashMap<JCheckBox,JComboBox> DictMenuCBC0 = new HashMap<JCheckBox,JComboBox>();
    public static HashMap<JRadioButton,JSpinner> DictMenuRBS0 = new HashMap<JRadioButton,JSpinner>();
    public static HashMap<JRadioButton,JTextField> DictMenuRBT0 = new HashMap<JRadioButton,JTextField>();
    public static ArrayList<HashMap> listDictsMenu0 = new ArrayList<HashMap>();

    public RepeatMaskerEditors(java.awt.Frame parent, armadillo_workflow parent_workflow){
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Menu_Buttons = new javax.swing.ButtonGroup();
        close_jButton = new javax.swing.JButton();
        how_jButton = new javax.swing.JButton();
        RepeatMasker_tab = new javax.swing.JTabbedPane();
        general_jPanel1 = new javax.swing.JPanel();
        stop_jButton = new javax.swing.JButton();
        reset_jButton = new javax.swing.JButton();
        run_jButton = new javax.swing.JButton();
        name_jLabel = new javax.swing.JLabel();
        name_jTextField = new javax.swing.JTextField();
        Default_Options = new javax.swing.JRadioButton();
        Advanced_Options = new javax.swing.JRadioButton();
        main_jScroll = new javax.swing.JScrollPane();
        options_tab_panel = new javax.swing.JTabbedPane();
        AO_jPanel = new javax.swing.JPanel();
        AO_OSAS_JLabel = new javax.swing.JLabel();
        AO_OSAS_engine_box = new javax.swing.JCheckBox();
        AO_OSAS_engine_JComboBoxValue = new javax.swing.JComboBox();
        AO_OSAS_parallel_box = new javax.swing.JCheckBox();
        AO_OSAS_parallel_JSpinnerValue = new javax.swing.JSpinner();
        AO_OSAS_s_box = new javax.swing.JCheckBox();
        AO_OSAS_s_JSpinnerValue = new javax.swing.JSpinner();
        AO_OSAS_q_box = new javax.swing.JCheckBox();
        AO_OSAS_q_JSpinnerValue = new javax.swing.JSpinner();
        AO_OSAS_qq_box = new javax.swing.JCheckBox();
        AO_OSAS_qq_JSpinnerValue = new javax.swing.JSpinner();
        AO_SO_JLabel = new javax.swing.JLabel();
        AO_SO_lib_box = new javax.swing.JCheckBox();
        AO_SO_species_box = new javax.swing.JCheckBox();
        AO_SO_species_JComboBoxValue = new javax.swing.JComboBox();
        AO_MO_JLabel = new javax.swing.JLabel();
        AO_MO_cutoff_box = new javax.swing.JCheckBox();
        AO_MO_cutoff_JSpinnerValue = new javax.swing.JSpinner();
        AO_MO_nolow_box = new javax.swing.JCheckBox();
        AO_MO_low_box = new javax.swing.JCheckBox();
        AO_MO_noint_box = new javax.swing.JCheckBox();
        AO_MO_int_box = new javax.swing.JCheckBox();
        AO_MO_norna_box = new javax.swing.JCheckBox();
        AO_MO_alu_box = new javax.swing.JCheckBox();
        AO_MO_div_box = new javax.swing.JCheckBox();
        AO_MO_div_JSpinnerValue = new javax.swing.JSpinner();
        AO_CO_JLabel = new javax.swing.JLabel();
        AO_CO_is_Only_box = new javax.swing.JCheckBox();
        AO_CO_is_Clip_box = new javax.swing.JCheckBox();
        AO_CO_no_Is_box = new javax.swing.JCheckBox();
        AO_RO_JLabel = new javax.swing.JLabel();
        AO_RO_gc_box = new javax.swing.JCheckBox();
        AO_RO_gc_JSpinnerValue = new javax.swing.JSpinner();
        AO_RO_gccalc_box = new javax.swing.JCheckBox();
        AO_RO_frag_box = new javax.swing.JCheckBox();
        AO_RO_frag_JSpinnerValue = new javax.swing.JSpinner();
        AO_RO_nocut_box = new javax.swing.JCheckBox();
        AO_RO_noisy_box = new javax.swing.JCheckBox();
        AO_RO_nopost_box = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        close_jButton.setForeground(new java.awt.Color(0, 0, 255));
        close_jButton.setText("Close");
        close_jButton.setMaximumSize(new java.awt.Dimension(91, 29));
        close_jButton.setMinimumSize(new java.awt.Dimension(91, 29));
        close_jButton.setName("close_jButton"); // NOI18N
        close_jButton.setPreferredSize(new java.awt.Dimension(91, 29));
        close_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close_jButton_ActionPerformed(evt);
            }
        });

        how_jButton.setForeground(new java.awt.Color(255, 0, 255));
        how_jButton.setText("?");
        how_jButton.setMaximumSize(new java.awt.Dimension(51, 29));
        how_jButton.setMinimumSize(new java.awt.Dimension(51, 29));
        how_jButton.setName("how_jButton"); // NOI18N
        how_jButton.setPreferredSize(new java.awt.Dimension(51, 29));
        how_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                how_jButton_ActionPerformed(evt);
            }
        });

        RepeatMasker_tab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                RepeatMasker_tab_ComponentShown(evt);
            }
        });

        general_jPanel1.setName("general_jPanel1"); // NOI18N
        general_jPanel1.setPreferredSize(new java.awt.Dimension(459, 400));

        stop_jButton.setForeground(new java.awt.Color(0, 0, 255));
        stop_jButton.setText("Stop");
        stop_jButton.setMaximumSize(new java.awt.Dimension(91, 29));
        stop_jButton.setMinimumSize(new java.awt.Dimension(91, 29));
        stop_jButton.setName("stop_jButton"); // NOI18N
        stop_jButton.setPreferredSize(new java.awt.Dimension(91, 29));
        stop_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop_jButton_ActionPerformed(evt);
            }
        });

        reset_jButton.setForeground(new java.awt.Color(255, 116, 0));
        reset_jButton.setText("Reset");
        reset_jButton.setMaximumSize(new java.awt.Dimension(91, 29));
        reset_jButton.setMinimumSize(new java.awt.Dimension(91, 29));
        reset_jButton.setName("reset_jButton"); // NOI18N
        reset_jButton.setPreferredSize(new java.awt.Dimension(91, 29));
        reset_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_jButton_ActionPerformed(evt);
            }
        });

        run_jButton.setForeground(new java.awt.Color(255, 116, 0));
        run_jButton.setText("RUN");
        run_jButton.setMaximumSize(new java.awt.Dimension(91, 29));
        run_jButton.setMinimumSize(new java.awt.Dimension(91, 29));
        run_jButton.setName("run_jButton"); // NOI18N
        run_jButton.setPreferredSize(new java.awt.Dimension(91, 29));
        run_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_jButton_ActionPerformed(evt);
            }
        });

        name_jLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        name_jLabel.setText("(re)Name");
        name_jLabel.setName("name_jLabel"); // NOI18N

        name_jTextField.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        name_jTextField.setText("Name");
        name_jTextField.setName("name_jTextField"); // NOI18N
        name_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_jTextField_ActionPerformed(evt);
            }
        });
        name_jTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                name_jTextField_FocusLost(evt);
            }
        });

        Menu_Buttons.add(Default_Options);
        Default_Options.setText("Default Options");
        Default_Options.setName("Default_Options"); // NOI18N
        Default_Options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Default_Options_ActionPerformed(evt);
            }
        });

        Menu_Buttons.add(Advanced_Options);
        Advanced_Options.setText("Advanced Options");
        Advanced_Options.setName("Advanced_Options"); // NOI18N
        Advanced_Options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Advanced_Options_ActionPerformed(evt);
            }
        });

        AO_OSAS_JLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_OSAS_JLabel.setText("Options speed and search");
        AO_OSAS_JLabel.setName("AO_OSAS_JLabel"); // NOI18N

        AO_OSAS_engine_box.setName("AO_OSAS_engine_box"); // NOI18N
        AO_OSAS_engine_box.setText("-engine");
        AO_OSAS_engine_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_OSAS_engine_box_ActionPerformed(evt);
            }
        });

        AO_OSAS_engine_JComboBoxValue.setName("AO_OSAS_engine_JComboBoxValue"); // NOI18N
        AO_OSAS_engine_JComboBoxValue.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "crossmatch", "wublast", "bblast", "ncbi", "hmmer", "decypher" }));
        AO_OSAS_engine_JComboBoxValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_OSAS_engine_JComboBoxValue_ActionPerformed(evt);
            }
        });

        AO_OSAS_parallel_box.setName("AO_OSAS_parallel_box"); // NOI18N
        AO_OSAS_parallel_box.setText("-parallel");
        AO_OSAS_parallel_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_OSAS_parallel_box_ActionPerformed(evt);
            }
        });

        AO_OSAS_parallel_JSpinnerValue.setName("AO_OSAS_parallel_JSpinnerValue"); // NOI18N
        AO_OSAS_parallel_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        AO_OSAS_parallel_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_OSAS_s_box.setName("AO_OSAS_s_box"); // NOI18N
        AO_OSAS_s_box.setText("-s");
        AO_OSAS_s_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_OSAS_s_box_ActionPerformed(evt);
            }
        });

        AO_OSAS_s_JSpinnerValue.setName("AO_OSAS_s_JSpinnerValue"); // NOI18N
        AO_OSAS_s_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1, 1));
        AO_OSAS_s_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_OSAS_q_box.setName("AO_OSAS_q_box"); // NOI18N
        AO_OSAS_q_box.setText("-q");
        AO_OSAS_q_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_OSAS_q_box_ActionPerformed(evt);
            }
        });

        AO_OSAS_q_JSpinnerValue.setName("AO_OSAS_q_JSpinnerValue"); // NOI18N
        AO_OSAS_q_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1, 1));
        AO_OSAS_q_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_OSAS_qq_box.setName("AO_OSAS_qq_box"); // NOI18N
        AO_OSAS_qq_box.setText("-qq");
        AO_OSAS_qq_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_OSAS_qq_box_ActionPerformed(evt);
            }
        });

        AO_OSAS_qq_JSpinnerValue.setName("AO_OSAS_qq_JSpinnerValue"); // NOI18N
        AO_OSAS_qq_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1, 1));
        AO_OSAS_qq_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_SO_JLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_SO_JLabel.setText("Species options");
        AO_SO_JLabel.setName("AO_SO_JLabel"); // NOI18N

        AO_SO_lib_box.setName("AO_SO_lib_box"); // NOI18N
        AO_SO_lib_box.setText("-lib");
        AO_SO_lib_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_SO_lib_box_ActionPerformed(evt);
            }
        });

        AO_SO_species_box.setName("AO_SO_species_box"); // NOI18N
        AO_SO_species_box.setText("-species");
        AO_SO_species_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_SO_species_box_ActionPerformed(evt);
            }
        });

        AO_SO_species_JComboBoxValue.setName("AO_SO_species_JComboBoxValue"); // NOI18N
        AO_SO_species_JComboBoxValue.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Vertebrate (other than below)", "Mammal (other than below)", "Human", "Rodent", "Mouse", "Rat", "Artiodactyls and whales", "Cow", "Pig", "Carnivore", "Cat", "Dog", "Chicken", "Xenopus (African clawed frog)", "Fugu (pufferfish)", "Danio (zebra fish)", "Ciona savigny", "Ciona intestinalis", "Fruit fly (Drosophila melanogaster)", "Malaria mosquito (Anopheles gambiae)", "Caenorhabditis elegans (nematode)", "Diatom (Thalassiosira pseudonana)", "Arabidopsis thaliana (thale cress)", "Triticae (ryes, barleys, wheats)", "Panicoid (maize, sugar cane, sorghum, millet)", "Rice" }));
        AO_SO_species_JComboBoxValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_SO_species_JComboBoxValue_ActionPerformed(evt);
            }
        });

        AO_MO_JLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_MO_JLabel.setText("Masking options");
        AO_MO_JLabel.setName("AO_MO_JLabel"); // NOI18N

        AO_MO_cutoff_box.setName("AO_MO_cutoff_box"); // NOI18N
        AO_MO_cutoff_box.setText("-cutoff");
        AO_MO_cutoff_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_MO_cutoff_box_ActionPerformed(evt);
            }
        });

        AO_MO_cutoff_JSpinnerValue.setName("AO_MO_cutoff_JSpinnerValue"); // NOI18N
        AO_MO_cutoff_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(225, null, null, 1));
        AO_MO_cutoff_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_MO_nolow_box.setName("AO_MO_nolow_box"); // NOI18N
        AO_MO_nolow_box.setText("-nolow");
        AO_MO_nolow_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_MO_nolow_box_ActionPerformed(evt);
            }
        });

        AO_MO_low_box.setName("AO_MO_low_box"); // NOI18N
        AO_MO_low_box.setText("-low");
        AO_MO_low_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_MO_low_box_ActionPerformed(evt);
            }
        });

        AO_MO_noint_box.setName("AO_MO_noint_box"); // NOI18N
        AO_MO_noint_box.setText("-noint");
        AO_MO_noint_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_MO_noint_box_ActionPerformed(evt);
            }
        });

        AO_MO_int_box.setName("AO_MO_int_box"); // NOI18N
        AO_MO_int_box.setText("-int");
        AO_MO_int_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_MO_int_box_ActionPerformed(evt);
            }
        });

        AO_MO_norna_box.setName("AO_MO_norna_box"); // NOI18N
        AO_MO_norna_box.setText("-norna");
        AO_MO_norna_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_MO_norna_box_ActionPerformed(evt);
            }
        });

        AO_MO_alu_box.setName("AO_MO_alu_box"); // NOI18N
        AO_MO_alu_box.setText("-alu");
        AO_MO_alu_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_MO_alu_box_ActionPerformed(evt);
            }
        });

        AO_MO_div_box.setName("AO_MO_div_box"); // NOI18N
        AO_MO_div_box.setText("-div");
        AO_MO_div_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_MO_div_box_ActionPerformed(evt);
            }
        });

        AO_MO_div_JSpinnerValue.setName("AO_MO_div_JSpinnerValue"); // NOI18N
        AO_MO_div_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(10, null, null, 1));
        AO_MO_div_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_CO_JLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_CO_JLabel.setText("Contamination options");
        AO_CO_JLabel.setName("AO_CO_JLabel"); // NOI18N

        AO_CO_is_Only_box.setName("AO_CO_is_Only_box"); // NOI18N
        AO_CO_is_Only_box.setText("-is_only");
        AO_CO_is_Only_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_CO_is_Only_box_ActionPerformed(evt);
            }
        });

        AO_CO_is_Clip_box.setName("AO_CO_is_Clip_box"); // NOI18N
        AO_CO_is_Clip_box.setText("-is_clip");
        AO_CO_is_Clip_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_CO_is_Clip_box_ActionPerformed(evt);
            }
        });

        AO_CO_no_Is_box.setName("AO_CO_no_Is_box"); // NOI18N
        AO_CO_no_Is_box.setText("-no_is");
        AO_CO_no_Is_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_CO_no_Is_box_ActionPerformed(evt);
            }
        });

        AO_RO_JLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_RO_JLabel.setText("Running options");
        AO_RO_JLabel.setName("AO_RO_JLabel"); // NOI18N

        AO_RO_gc_box.setName("AO_RO_gc_box"); // NOI18N
        AO_RO_gc_box.setText("-gc");
        AO_RO_gc_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_RO_gc_box_ActionPerformed(evt);
            }
        });

        AO_RO_gc_JSpinnerValue.setName("AO_RO_gc_JSpinnerValue"); // NOI18N
        AO_RO_gc_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(10, 0, 100, 1));
        AO_RO_gc_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_RO_gccalc_box.setName("AO_RO_gccalc_box"); // NOI18N
        AO_RO_gccalc_box.setText("-gccalc");
        AO_RO_gccalc_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_RO_gccalc_box_ActionPerformed(evt);
            }
        });

        AO_RO_frag_box.setName("AO_RO_frag_box"); // NOI18N
        AO_RO_frag_box.setText("-frag");
        AO_RO_frag_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_RO_frag_box_ActionPerformed(evt);
            }
        });

        AO_RO_frag_JSpinnerValue.setName("AO_RO_frag_JSpinnerValue"); // NOI18N
        AO_RO_frag_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(60000, 0, null, 10000));
        AO_RO_frag_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_RO_nocut_box.setName("AO_RO_nocut_box"); // NOI18N
        AO_RO_nocut_box.setText("-nocut");
        AO_RO_nocut_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_RO_nocut_box_ActionPerformed(evt);
            }
        });

        AO_RO_noisy_box.setName("AO_RO_noisy_box"); // NOI18N
        AO_RO_noisy_box.setText("-noisy");
        AO_RO_noisy_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_RO_noisy_box_ActionPerformed(evt);
            }
        });

        AO_RO_nopost_box.setName("AO_RO_nopost_box"); // NOI18N
        AO_RO_nopost_box.setText("-nopost");
        AO_RO_nopost_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_RO_nopost_box_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AO_jPanelLayout = new javax.swing.GroupLayout(AO_jPanel);
        AO_jPanel.setLayout(AO_jPanelLayout);
        AO_jPanelLayout.setHorizontalGroup(
            AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_jPanelLayout.createSequentialGroup()
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AO_OSAS_JLabel)
                    .addComponent(AO_OSAS_engine_box)
                    .addComponent(AO_OSAS_parallel_box)
                    .addComponent(AO_OSAS_s_box)
                    .addComponent(AO_OSAS_q_box)
                    .addComponent(AO_OSAS_qq_box)
                    .addComponent(AO_SO_JLabel)
                    .addComponent(AO_SO_lib_box)
                    .addComponent(AO_SO_species_box)
                    .addComponent(AO_MO_JLabel)
                    .addComponent(AO_MO_cutoff_box)
                    .addComponent(AO_MO_nolow_box)
                    .addComponent(AO_MO_low_box)
                    .addComponent(AO_MO_noint_box)
                    .addComponent(AO_MO_int_box)
                    .addComponent(AO_MO_norna_box)
                    .addComponent(AO_MO_alu_box)
                    .addComponent(AO_MO_div_box)
                    .addComponent(AO_CO_JLabel)
                    .addComponent(AO_CO_is_Only_box)
                    .addComponent(AO_CO_is_Clip_box)
                    .addComponent(AO_CO_no_Is_box)
                    .addComponent(AO_RO_JLabel)
                    .addComponent(AO_RO_gc_box)
                    .addComponent(AO_RO_gccalc_box)
                    .addComponent(AO_RO_frag_box)
                    .addComponent(AO_RO_nocut_box)
                    .addComponent(AO_RO_noisy_box)
                    .addComponent(AO_RO_nopost_box))
                .addGap(18, 18, 18)
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AO_OSAS_engine_JComboBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AO_OSAS_parallel_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AO_OSAS_s_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AO_OSAS_q_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AO_OSAS_qq_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AO_SO_species_JComboBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AO_MO_cutoff_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AO_MO_div_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AO_RO_gc_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AO_RO_frag_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        AO_jPanelLayout.setVerticalGroup(
            AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AO_OSAS_JLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_OSAS_engine_box)
                    .addComponent(AO_OSAS_engine_JComboBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_OSAS_parallel_box)
                    .addComponent(AO_OSAS_parallel_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_OSAS_s_box)
                    .addComponent(AO_OSAS_s_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_OSAS_q_box)
                    .addComponent(AO_OSAS_q_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_OSAS_qq_box)
                    .addComponent(AO_OSAS_qq_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_SO_JLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_SO_lib_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_SO_species_box)
                    .addComponent(AO_SO_species_JComboBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_MO_JLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_MO_cutoff_box)
                    .addComponent(AO_MO_cutoff_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_MO_nolow_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_MO_low_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_MO_noint_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_MO_int_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_MO_norna_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_MO_alu_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_MO_div_box)
                    .addComponent(AO_MO_div_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_CO_JLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_CO_is_Only_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_CO_is_Clip_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_CO_no_Is_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_RO_JLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_RO_gc_box)
                    .addComponent(AO_RO_gc_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_RO_gccalc_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_RO_frag_box)
                    .addComponent(AO_RO_frag_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_RO_nocut_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_RO_noisy_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_RO_nopost_box)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AO_OSAS_JLabel.getAccessibleContext().setAccessibleDescription("Sub Items");
        AO_SO_JLabel.getAccessibleContext().setAccessibleDescription("Sub Items");
        AO_MO_JLabel.getAccessibleContext().setAccessibleDescription("Sub Items");
        AO_CO_JLabel.getAccessibleContext().setAccessibleDescription("Sub Items");
        AO_RO_JLabel.getAccessibleContext().setAccessibleDescription("Sub Items");

        options_tab_panel.addTab("Advanced Options", AO_jPanel);

        main_jScroll.setViewportView(options_tab_panel);

        javax.swing.GroupLayout general_jPanel1Layout = new javax.swing.GroupLayout(general_jPanel1);
        general_jPanel1.setLayout(general_jPanel1Layout);
        general_jPanel1Layout.setHorizontalGroup(
            general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_jPanel1Layout.createSequentialGroup()
                .addComponent(main_jScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(general_jPanel1Layout.createSequentialGroup()
                .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(general_jPanel1Layout.createSequentialGroup()
                        .addComponent(reset_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(stop_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(run_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(general_jPanel1Layout.createSequentialGroup()
                        .addComponent(name_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(name_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(general_jPanel1Layout.createSequentialGroup()
                        .addComponent(Default_Options)
                        .addGap(18, 18, 18)
                        .addComponent(Advanced_Options)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        general_jPanel1Layout.setVerticalGroup(
            general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stop_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(run_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name_jLabel)
                    .addComponent(name_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Default_Options)
                    .addComponent(Advanced_Options))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(main_jScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        stop_jButton.getAccessibleContext().setAccessibleDescription("Stop this box");
        reset_jButton.getAccessibleContext().setAccessibleDescription("Reset to default values");
        run_jButton.getAccessibleContext().setAccessibleDescription("Run this box");
        name_jLabel.getAccessibleContext().setAccessibleDescription("Name Box");
        name_jTextField.getAccessibleContext().setAccessibleDescription("Rename the box here");
        Default_Options.getAccessibleContext().setAccessibleDescription("Default Options");
        Advanced_Options.getAccessibleContext().setAccessibleDescription("Advanced Options");

        RepeatMasker_tab.addTab("RepeatMasker", general_jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(close_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(how_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(RepeatMasker_tab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(close_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(how_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RepeatMasker_tab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        close_jButton.getAccessibleContext().setAccessibleDescription("Close this box");
        how_jButton.getAccessibleContext().setAccessibleDescription("About this box");
        RepeatMasker_tab.getAccessibleContext().setAccessibleName("RepeatMasker");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RepeatMasker_tab_ComponentShown(java.awt.event.ComponentEvent evt){//GEN-FIRST:event_RepeatMasker_tab_ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_RepeatMasker_tab_ComponentShown
    
    private void how_jButton_ActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_how_jButton_ActionPerformed
        // TODO add your handling code here:
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
    }//GEN-LAST:event_how_jButton_ActionPerformed

    private void close_jButton_ActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_close_jButton_ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_close_jButton_ActionPerformed

    private void run_jButton_ActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_run_jButton_ActionPerformed
        // TODO add your handling code here:
        if (this.properties.isSet("ClassName")){
            this.parent_workflow.workflow.updateDependance();
            programs prog=new programs(parent_workflow.workbox.getCurrentWorkflows());
            prog.Run(properties);
        }
    }//GEN-LAST:event_run_jButton_ActionPerformed

    private void stop_jButton_ActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_stop_jButton_ActionPerformed
        // TODO add your handling code here:
        properties.put("Status", Config.status_nothing);
        properties.killThread();
    }//GEN-LAST:event_stop_jButton_ActionPerformed

    private void reset_jButton_ActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_reset_jButton_ActionPerformed
        // TODO add your handling code here:
        properties.load();             //--reload current properties from file
        this.setProperties(properties);//--Update current field
        this.display(properties);
    }//GEN-LAST:event_reset_jButton_ActionPerformed

    private void name_jTextField_ActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        properties.put("Name", name_jTextField.getText());
    }                                                

    private void name_jTextField_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_name_jTextField_ActionPerformed
        // TODO add your handling code here:
        properties.put("Name", name_jTextField.getText());
    }//GEN-LAST:event_name_jTextField_ActionPerformed

    private void Default_Options_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Default_Options_ActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(Advanced_Options.getName())){
            properties.remove(Advanced_Options.getName());
        }
        Util.buttonEventSpinner(properties,Default_Options,null);
        menuFields(properties);
    }//GEN-LAST:event_Default_Options_ActionPerformed
    
    private void Advanced_Options_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Advanced_Options_ActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(Default_Options.getName())){
            properties.remove(Default_Options.getName());
        }
        Util.buttonEventSpinner(properties,Advanced_Options,null);
        menuFields(properties);
    }//GEN-LAST:event_Advanced_Options_ActionPerformed
    
    private void AO_OSAS_engine_JComboBoxValue_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_OSAS_engine_JComboBoxValue_actionPerformed
        // TODO add your handling code here:
        Util.boxEventComboBox(properties,AO_OSAS_engine_box,AO_OSAS_engine_JComboBoxValue);
    }//GEN-LAST:event_AO_OSAS_engine_JComboBoxValue_actionPerformed

    private void AO_OSAS_engine_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_OSAS_engine_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventComboBox(properties,AO_OSAS_engine_box,AO_OSAS_engine_JComboBoxValue);
    }//GEN-LAST:event_AO_OSAS_engine_box_ActionPerformed
    private void AO_OSAS_parallel_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_OSAS_parallel_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_OSAS_parallel_box,AO_OSAS_parallel_JSpinnerValue);
    }//GEN-LAST:event_AO_OSAS_parallel_JSpinnerValue_stateChanged

    private void AO_OSAS_parallel_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_OSAS_parallel_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_OSAS_parallel_box,AO_OSAS_parallel_JSpinnerValue);
    }//GEN-LAST:event_AO_OSAS_parallel_box_ActionPerformed
    private void AO_OSAS_s_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_OSAS_s_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_OSAS_s_box,AO_OSAS_s_JSpinnerValue);
    }//GEN-LAST:event_AO_OSAS_s_JSpinnerValue_stateChanged

    private void AO_OSAS_s_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_OSAS_s_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_OSAS_q_box.getName()) && 
            properties.isSet(AO_OSAS_qq_box.getName())
        ){
            properties.remove(AO_OSAS_q_box.getName());
            AO_OSAS_q_box.setSelected(false);
            AO_OSAS_q_JSpinnerValue.setEnabled(false);
            properties.remove(AO_OSAS_qq_box.getName());
            AO_OSAS_qq_box.setSelected(false);
            AO_OSAS_qq_JSpinnerValue.setEnabled(false);
        }

        Util.boxEventSpinner(properties,AO_OSAS_s_box,AO_OSAS_s_JSpinnerValue);
    }//GEN-LAST:event_AO_OSAS_s_box_ActionPerformed
    private void AO_OSAS_q_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_OSAS_q_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_OSAS_q_box,AO_OSAS_q_JSpinnerValue);
    }//GEN-LAST:event_AO_OSAS_q_JSpinnerValue_stateChanged

    private void AO_OSAS_q_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_OSAS_q_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_OSAS_s_box.getName()) && 
            properties.isSet(AO_OSAS_qq_box.getName())
        ){
            properties.remove(AO_OSAS_s_box.getName());
            AO_OSAS_s_box.setSelected(false);
            AO_OSAS_s_JSpinnerValue.setEnabled(false);
            properties.remove(AO_OSAS_qq_box.getName());
            AO_OSAS_qq_box.setSelected(false);
            AO_OSAS_qq_JSpinnerValue.setEnabled(false);
        }

        Util.boxEventSpinner(properties,AO_OSAS_q_box,AO_OSAS_q_JSpinnerValue);
    }//GEN-LAST:event_AO_OSAS_q_box_ActionPerformed
    private void AO_OSAS_qq_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_OSAS_qq_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_OSAS_qq_box,AO_OSAS_qq_JSpinnerValue);
    }//GEN-LAST:event_AO_OSAS_qq_JSpinnerValue_stateChanged

    private void AO_OSAS_qq_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_OSAS_qq_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_OSAS_s_box.getName()) && 
            properties.isSet(AO_OSAS_q_box.getName())
        ){
            properties.remove(AO_OSAS_s_box.getName());
            AO_OSAS_s_box.setSelected(false);
            AO_OSAS_s_JSpinnerValue.setEnabled(false);
            properties.remove(AO_OSAS_q_box.getName());
            AO_OSAS_q_box.setSelected(false);
            AO_OSAS_q_JSpinnerValue.setEnabled(false);
        }

        Util.boxEventSpinner(properties,AO_OSAS_qq_box,AO_OSAS_qq_JSpinnerValue);
    }//GEN-LAST:event_AO_OSAS_qq_box_ActionPerformed
    private void AO_SO_lib_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_SO_lib_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_SO_species_box.getName())
        ){
            properties.remove(AO_SO_species_box.getName());
            AO_SO_species_box.setSelected(false);
            AO_SO_species_JComboBoxValue.setEnabled(false);
        }

        Util.boxEventSpinner(properties,AO_SO_lib_box,null);
    }//GEN-LAST:event_AO_SO_lib_box_ActionPerformed
    private void AO_SO_species_JComboBoxValue_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_SO_species_JComboBoxValue_actionPerformed
        // TODO add your handling code here:
        Util.boxEventComboBox(properties,AO_SO_species_box,AO_SO_species_JComboBoxValue);
    }//GEN-LAST:event_AO_SO_species_JComboBoxValue_actionPerformed

    private void AO_SO_species_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_SO_species_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_SO_lib_box.getName())
        ){
            properties.remove(AO_SO_lib_box.getName());
            AO_SO_lib_box.setSelected(false);
        }

        Util.boxEventComboBox(properties,AO_SO_species_box,AO_SO_species_JComboBoxValue);
    }//GEN-LAST:event_AO_SO_species_box_ActionPerformed
    private void AO_MO_cutoff_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_MO_cutoff_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_MO_cutoff_box,AO_MO_cutoff_JSpinnerValue);
    }//GEN-LAST:event_AO_MO_cutoff_JSpinnerValue_stateChanged

    private void AO_MO_cutoff_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_MO_cutoff_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_MO_cutoff_box,AO_MO_cutoff_JSpinnerValue);
    }//GEN-LAST:event_AO_MO_cutoff_box_ActionPerformed
    private void AO_MO_nolow_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_MO_nolow_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_MO_low_box.getName())
        ){
            properties.remove(AO_MO_low_box.getName());
            AO_MO_low_box.setSelected(false);
        }

        Util.boxEventSpinner(properties,AO_MO_nolow_box,null);
    }//GEN-LAST:event_AO_MO_nolow_box_ActionPerformed
    private void AO_MO_low_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_MO_low_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_MO_nolow_box.getName())
        ){
            properties.remove(AO_MO_nolow_box.getName());
            AO_MO_nolow_box.setSelected(false);
        }

        Util.boxEventSpinner(properties,AO_MO_low_box,null);
    }//GEN-LAST:event_AO_MO_low_box_ActionPerformed
    private void AO_MO_noint_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_MO_noint_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_MO_int_box.getName())
        ){
            properties.remove(AO_MO_int_box.getName());
            AO_MO_int_box.setSelected(false);
        }

        Util.boxEventSpinner(properties,AO_MO_noint_box,null);
    }//GEN-LAST:event_AO_MO_noint_box_ActionPerformed
    private void AO_MO_int_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_MO_int_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_MO_noint_box.getName())
        ){
            properties.remove(AO_MO_noint_box.getName());
            AO_MO_noint_box.setSelected(false);
        }

        Util.boxEventSpinner(properties,AO_MO_int_box,null);
    }//GEN-LAST:event_AO_MO_int_box_ActionPerformed
    private void AO_MO_norna_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_MO_norna_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_MO_norna_box,null);
    }//GEN-LAST:event_AO_MO_norna_box_ActionPerformed
    private void AO_MO_alu_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_MO_alu_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_MO_alu_box,null);
    }//GEN-LAST:event_AO_MO_alu_box_ActionPerformed
    private void AO_MO_div_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_MO_div_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_MO_div_box,AO_MO_div_JSpinnerValue);
    }//GEN-LAST:event_AO_MO_div_JSpinnerValue_stateChanged

    private void AO_MO_div_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_MO_div_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_MO_div_box,AO_MO_div_JSpinnerValue);
    }//GEN-LAST:event_AO_MO_div_box_ActionPerformed
    private void AO_CO_is_Only_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_CO_is_Only_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_CO_is_Clip_box.getName()) && 
            properties.isSet(AO_CO_no_Is_box.getName())
        ){
            properties.remove(AO_CO_is_Clip_box.getName());
            AO_CO_is_Clip_box.setSelected(false);
            properties.remove(AO_CO_no_Is_box.getName());
            AO_CO_no_Is_box.setSelected(false);
        }

        Util.boxEventSpinner(properties,AO_CO_is_Only_box,null);
    }//GEN-LAST:event_AO_CO_is_Only_box_ActionPerformed
    private void AO_CO_is_Clip_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_CO_is_Clip_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_CO_is_Only_box.getName()) && 
            properties.isSet(AO_CO_no_Is_box.getName())
        ){
            properties.remove(AO_CO_is_Only_box.getName());
            AO_CO_is_Only_box.setSelected(false);
            properties.remove(AO_CO_no_Is_box.getName());
            AO_CO_no_Is_box.setSelected(false);
        }

        Util.boxEventSpinner(properties,AO_CO_is_Clip_box,null);
    }//GEN-LAST:event_AO_CO_is_Clip_box_ActionPerformed
    private void AO_CO_no_Is_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_CO_no_Is_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_CO_is_Clip_box.getName()) && 
            properties.isSet(AO_CO_is_Only_box.getName())
        ){
            properties.remove(AO_CO_is_Clip_box.getName());
            AO_CO_is_Clip_box.setSelected(false);
            properties.remove(AO_CO_is_Only_box.getName());
            AO_CO_is_Only_box.setSelected(false);
        }

        Util.boxEventSpinner(properties,AO_CO_no_Is_box,null);
    }//GEN-LAST:event_AO_CO_no_Is_box_ActionPerformed
    private void AO_RO_gc_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_RO_gc_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_RO_gc_box,AO_RO_gc_JSpinnerValue);
    }//GEN-LAST:event_AO_RO_gc_JSpinnerValue_stateChanged

    private void AO_RO_gc_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_RO_gc_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_RO_gc_box,AO_RO_gc_JSpinnerValue);
    }//GEN-LAST:event_AO_RO_gc_box_ActionPerformed
    private void AO_RO_gccalc_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_RO_gccalc_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_RO_gccalc_box,null);
    }//GEN-LAST:event_AO_RO_gccalc_box_ActionPerformed
    private void AO_RO_frag_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_RO_frag_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_RO_frag_box,AO_RO_frag_JSpinnerValue);
    }//GEN-LAST:event_AO_RO_frag_JSpinnerValue_stateChanged

    private void AO_RO_frag_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_RO_frag_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_RO_frag_box,AO_RO_frag_JSpinnerValue);
    }//GEN-LAST:event_AO_RO_frag_box_ActionPerformed
    private void AO_RO_nocut_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_RO_nocut_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_RO_nocut_box,null);
    }//GEN-LAST:event_AO_RO_nocut_box_ActionPerformed
    private void AO_RO_noisy_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_RO_noisy_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_RO_noisy_box,null);
    }//GEN-LAST:event_AO_RO_noisy_box_ActionPerformed
    private void AO_RO_nopost_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_RO_nopost_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_RO_nopost_box,null);
    }//GEN-LAST:event_AO_RO_nopost_box_ActionPerformed
    /*******************************************************************
     * Perpare List Dictionaries
     ******************************************************************/

    /**
     * Perpare List of Dictionaries
     * @param properties
     */

    public void perpareListDictionaries(workflow_properties properties){
        Util.dictsReset(listDictsMenu0,DictMenuCBS0,DictMenuCBT0,DictMenuCBC0,DictMenuRBS0,DictMenuRBT0);
    }

    /*******************************************************************
     * Perpare Dictionaries
     ******************************************************************/

    /**
     * Perpare Dictionaries by adding commands
     * @param properties
     */

    public void perpareDictionaries(workflow_properties properties){
        DictMenuCBC0.put(AO_OSAS_engine_box,AO_OSAS_engine_JComboBoxValue);
        DictMenuCBS0.put(AO_OSAS_parallel_box,AO_OSAS_parallel_JSpinnerValue);
        DictMenuCBS0.put(AO_OSAS_s_box,AO_OSAS_s_JSpinnerValue);
        DictMenuCBS0.put(AO_OSAS_q_box,AO_OSAS_q_JSpinnerValue);
        DictMenuCBS0.put(AO_OSAS_qq_box,AO_OSAS_qq_JSpinnerValue);
        DictMenuCBS0.put(AO_SO_lib_box,null);
        DictMenuCBC0.put(AO_SO_species_box,AO_SO_species_JComboBoxValue);
        DictMenuCBS0.put(AO_MO_cutoff_box,AO_MO_cutoff_JSpinnerValue);
        DictMenuCBS0.put(AO_MO_nolow_box,null);
        DictMenuCBS0.put(AO_MO_low_box,null);
        DictMenuCBS0.put(AO_MO_noint_box,null);
        DictMenuCBS0.put(AO_MO_int_box,null);
        DictMenuCBS0.put(AO_MO_norna_box,null);
        DictMenuCBS0.put(AO_MO_alu_box,null);
        DictMenuCBS0.put(AO_MO_div_box,AO_MO_div_JSpinnerValue);
        DictMenuCBS0.put(AO_CO_is_Only_box,null);
        DictMenuCBS0.put(AO_CO_is_Clip_box,null);
        DictMenuCBS0.put(AO_CO_no_Is_box,null);
        DictMenuCBS0.put(AO_RO_gc_box,AO_RO_gc_JSpinnerValue);
        DictMenuCBS0.put(AO_RO_gccalc_box,null);
        DictMenuCBS0.put(AO_RO_frag_box,AO_RO_frag_JSpinnerValue);
        DictMenuCBS0.put(AO_RO_nocut_box,null);
        DictMenuCBS0.put(AO_RO_noisy_box,null);
        DictMenuCBS0.put(AO_RO_nopost_box,null);
    }


    /*******************************************************************
     * Set the configuration properties for this object
     ******************************************************************/

    @Override
    public void display(workflow_properties properties){
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // Set position
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
                (screenSize.height-d.height)/2);
        
        // Set the program properties
        this.setProperties(properties);
        
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }

    /*******************************************************************
     * Sets for Properties
     ******************************************************************/

    /**
     * Set Properties
     * @param properties
     */

    public void setProperties(workflow_properties properties){
        this.properties=properties;
        setTitle(properties.getName());
        //if (this.properties.isSet("Description")) this.Notice.setText(properties.get("Description"));
        
        // Prepare dictionaries
        this.perpareListDictionaries(properties);
        this.perpareDictionaries(properties);
        // Properties Default Options
        this.defaultPgrmValues(properties);
        // Update Saved Properties => usp
        Util.updateSavedProperties(properties,listDictsMenu0,name_jTextField);
        // Set the menu
        this.menuFields(properties);
    }

    public void setProperties(String filename, String path){
        workflow_properties tmp=new workflow_properties();
        tmp.load(filename, path);
        this.properties=tmp;
        setTitle(properties.getName());
    }

    /*******************************************************************
     * Set With default program values present in properties file
     ******************************************************************/
    private void defaultPgrmValues(workflow_properties properties){
        boolean b = true;
        if (!(properties.isSet(Default_Options.getName()))
        && !(properties.isSet(Advanced_Options.getName()))
        ){
            b = false;
        }
        
        Util.getDefaultPgrmValues(properties,b);
    }
    
    /*******************************************************************
     * Set Menu fields
     ******************************************************************/

    private void menuFields(workflow_properties properties){
        if (properties.isSet(Default_Options.getName())){
            Default_Options.setSelected(true);
            Util.enabled_Advanced_Options(properties,false,listDictsMenu0);
        }
        else if (properties.isSet(Advanced_Options.getName())){
            Advanced_Options.setSelected(true);
            Util.enabled_Advanced_Options(properties,true,listDictsMenu0);
        }
    }


    /*******************************************************************
     * Save Image
     ******************************************************************/

    public void saveImage(String filename){
        BufferedImage bi;
        try{
            bi = new Robot().createScreenCapture(this.getBounds());
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
         } catch (Exception ex) {
            Config.log("Unable to save "+filename+" dialog image");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AO_CO_JLabel;
    private javax.swing.JCheckBox AO_CO_is_Clip_box;
    private javax.swing.JCheckBox AO_CO_is_Only_box;
    private javax.swing.JCheckBox AO_CO_no_Is_box;
    private javax.swing.JLabel AO_MO_JLabel;
    private javax.swing.JCheckBox AO_MO_alu_box;
    private javax.swing.JSpinner AO_MO_cutoff_JSpinnerValue;
    private javax.swing.JCheckBox AO_MO_cutoff_box;
    private javax.swing.JSpinner AO_MO_div_JSpinnerValue;
    private javax.swing.JCheckBox AO_MO_div_box;
    private javax.swing.JCheckBox AO_MO_int_box;
    private javax.swing.JCheckBox AO_MO_low_box;
    private javax.swing.JCheckBox AO_MO_noint_box;
    private javax.swing.JCheckBox AO_MO_nolow_box;
    private javax.swing.JCheckBox AO_MO_norna_box;
    private javax.swing.JLabel AO_OSAS_JLabel;
    private javax.swing.JComboBox AO_OSAS_engine_JComboBoxValue;
    private javax.swing.JCheckBox AO_OSAS_engine_box;
    private javax.swing.JSpinner AO_OSAS_parallel_JSpinnerValue;
    private javax.swing.JCheckBox AO_OSAS_parallel_box;
    private javax.swing.JSpinner AO_OSAS_q_JSpinnerValue;
    private javax.swing.JCheckBox AO_OSAS_q_box;
    private javax.swing.JSpinner AO_OSAS_qq_JSpinnerValue;
    private javax.swing.JCheckBox AO_OSAS_qq_box;
    private javax.swing.JSpinner AO_OSAS_s_JSpinnerValue;
    private javax.swing.JCheckBox AO_OSAS_s_box;
    private javax.swing.JLabel AO_RO_JLabel;
    private javax.swing.JSpinner AO_RO_frag_JSpinnerValue;
    private javax.swing.JCheckBox AO_RO_frag_box;
    private javax.swing.JSpinner AO_RO_gc_JSpinnerValue;
    private javax.swing.JCheckBox AO_RO_gc_box;
    private javax.swing.JCheckBox AO_RO_gccalc_box;
    private javax.swing.JCheckBox AO_RO_nocut_box;
    private javax.swing.JCheckBox AO_RO_noisy_box;
    private javax.swing.JCheckBox AO_RO_nopost_box;
    private javax.swing.JLabel AO_SO_JLabel;
    private javax.swing.JCheckBox AO_SO_lib_box;
    private javax.swing.JComboBox AO_SO_species_JComboBoxValue;
    private javax.swing.JCheckBox AO_SO_species_box;
    private javax.swing.JPanel AO_jPanel;
    private javax.swing.JRadioButton Advanced_Options;
    private javax.swing.JRadioButton Default_Options;
    private javax.swing.ButtonGroup Menu_Buttons;
    private javax.swing.JTabbedPane RepeatMasker_tab;
    private javax.swing.JButton close_jButton;
    private javax.swing.JPanel general_jPanel1;
    private javax.swing.JButton how_jButton;
    private javax.swing.JScrollPane main_jScroll;
    private javax.swing.JLabel name_jLabel;
    private javax.swing.JTextField name_jTextField;
    private javax.swing.JTabbedPane options_tab_panel;
    private javax.swing.JButton reset_jButton;
    private javax.swing.JButton run_jButton;
    private javax.swing.JButton stop_jButton;
    // End of variables declaration//GEN-END:variables
    }

