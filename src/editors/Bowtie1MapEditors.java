//System.out.println("update");
//System.out.println(properties.get("CM_A_i_function"));
//System.out.println("remove box");

/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

package editors;

import configuration.Config;
import configuration.Util;
import editor.EditorInterface;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.nio.file.Path;
import java.util.Vector;
import java.util.List;
import java.util.ArrayList;
import java.util.Hashtable;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import program.*;
import workflows.armadillo_workflow;
import workflows.workflow_properties;
import workflows.workflow_properties_dictionnary;

/**
 *
 * @author Jérémy Goimard
 * @date Aout 2015
 *
 * /!\ DONT FORGET TO ADD A NAME in the design for all /!\
 *
 * the choice was made to use the value name because of the updated content function
 *
 */

public class Bowtie1MapEditors extends javax.swing.JDialog implements EditorInterface  {
    
    /**
     * Creates new form Bowtie1MapEditors
     */
    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected="";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow parent_workflow;
    
    public final String defaultNameString=" Name";
    static final boolean default_map=true;
    
    /////////////////////////////////////////////////////////////////////////
    /// Default Options
    
    public Bowtie1MapEditors(java.awt.Frame parent, armadillo_workflow parent_workflow) {
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        M_Buttons = new javax.swing.ButtonGroup();
        IDG_source_buttons = new javax.swing.ButtonGroup();
        CM_O_TypeQuals_Buttons = new javax.swing.ButtonGroup();
        M_PE_type_buttons = new javax.swing.ButtonGroup();
        M_PE_stream_buttons = new javax.swing.ButtonGroup();
        CM_P_Buttons = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        Bowtie1MapEditor = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        name_jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        reset_jButton3 = new javax.swing.JButton();
        stop_jButton4 = new javax.swing.JButton();
        run_jButton5 = new javax.swing.JButton();
        ClosejButton6 = new javax.swing.JButton();
        TypeOfLib_panel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        M_SE_button = new javax.swing.JRadioButton();
        M_PE_button = new javax.swing.JRadioButton();
        M_PE_Panel = new javax.swing.JPanel();
        M_PE_tryhard_box = new javax.swing.JCheckBox();
        M_PE_pairtries_box = new javax.swing.JCheckBox();
        M_PE_pairtries_value = new javax.swing.JSpinner();
        M_PE_I_value = new javax.swing.JSpinner();
        M_PE_X_value = new javax.swing.JSpinner();
        Stream_Orientation_Panel = new javax.swing.JPanel();
        M_PE_fr_button = new javax.swing.JRadioButton();
        M_PE_rf_button = new javax.swing.JRadioButton();
        M_PE_ff_button = new javax.swing.JRadioButton();
        M_PE_I_box = new javax.swing.JCheckBox();
        M_PE_X_box = new javax.swing.JCheckBox();
        IDGSource_Panel = new javax.swing.JPanel();
        IDG_workflow_button = new javax.swing.JRadioButton();
        IDG_directory_button = new javax.swing.JRadioButton();
        IDG_main_panel = new javax.swing.JPanel();
        IDG_selected_ComboBox = new javax.swing.JComboBox();
        IDG_r_text = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        IDG_Update_button = new javax.swing.JButton();
        IDG_change_button = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        IDG_largeIndex_box = new javax.swing.JCheckBox();
        Output_Panel = new javax.swing.JPanel();
        O_unPATH_box = new javax.swing.JCheckBox();
        O_alPATH_box = new javax.swing.JCheckBox();
        O_quiet_box = new javax.swing.JCheckBox();
        O_time_box = new javax.swing.JCheckBox();
        O_offbase_box = new javax.swing.JCheckBox();
        O_offbase_value = new javax.swing.JSpinner();
        O_refidx_box = new javax.swing.JCheckBox();
        O_fullref_box = new javax.swing.JCheckBox();
        O_suppress_box = new javax.swing.JCheckBox();
        O_suppress_text = new javax.swing.JTextField();
        O_SAM_sam_box = new javax.swing.JCheckBox();
        O_SAM_panel = new javax.swing.JPanel();
        O_SAM_samRG_box = new javax.swing.JCheckBox();
        O_SAM_samNosq_box = new javax.swing.JCheckBox();
        O_SAM_mapq_box = new javax.swing.JCheckBox();
        O_SAM_samNohead_box = new javax.swing.JCheckBox();
        O_SAM_samRG_text = new javax.swing.JTextField();
        O_SAM_mapq_value = new javax.swing.JSpinner();
        M_default_button = new javax.swing.JRadioButton();
        M_CM_button = new javax.swing.JRadioButton();
        CM_TabPanel = new javax.swing.JTabbedPane();
        CM_Input_Panel = new javax.swing.JPanel();
        CM_I_phred64Quals_box = new javax.swing.JCheckBox();
        CM_I_phred33Quals_box = new javax.swing.JCheckBox();
        CM_I_solexaQuals_box = new javax.swing.JCheckBox();
        CM_I_intQuals_box = new javax.swing.JCheckBox();
        CM_I_solexa1DOT3Quals_box = new javax.swing.JCheckBox();
        CM_I_s_value = new javax.swing.JSpinner();
        CM_I_u_value = new javax.swing.JSpinner();
        CM_I_5_value = new javax.swing.JSpinner();
        CM_I_3_value = new javax.swing.JSpinner();
        CM_I_TOI_panel = new javax.swing.JPanel();
        CM_I_c_box = new javax.swing.JCheckBox();
        CM_I_r_box = new javax.swing.JCheckBox();
        CM_I_f_box = new javax.swing.JCheckBox();
        CM_I_qseq_box = new javax.swing.JCheckBox();
        CM_I_q_box = new javax.swing.JCheckBox();
        CM_I_s_box = new javax.swing.JCheckBox();
        CM_I_u_box = new javax.swing.JCheckBox();
        CM_I_5_box = new javax.swing.JCheckBox();
        CM_I_3_box = new javax.swing.JCheckBox();
        CM_Align_Panel = new javax.swing.JPanel();
        CM_A_maxbts_box = new javax.swing.JCheckBox();
        CM_A_nofw_box = new javax.swing.JCheckBox();
        CM_A_norc_box = new javax.swing.JCheckBox();
        CM_A_nomaqround_box = new javax.swing.JCheckBox();
        CM_A_seedmms_box = new javax.swing.JCheckBox();
        CM_A_seedmms_value = new javax.swing.JSpinner();
        CM_A_v_box = new javax.swing.JCheckBox();
        CM_A_v_value = new javax.swing.JSpinner();
        CM_A_chunkmbs_box = new javax.swing.JCheckBox();
        CM_A_chunkmbs_value = new javax.swing.JSpinner();
        CM_A_seedlen_box = new javax.swing.JCheckBox();
        CM_A_seedlen_value = new javax.swing.JSpinner();
        CM_A_maqerr_box = new javax.swing.JCheckBox();
        CM_A_maqerr_value = new javax.swing.JSpinner();
        CM_Colorspace_Panel = new javax.swing.JPanel();
        CM_C_snpphred_value = new javax.swing.JSpinner();
        CM_C_snpfrac_value = new javax.swing.JSpinner();
        CM_C_snpphred_box = new javax.swing.JCheckBox();
        CM_C_snpfrac_box = new javax.swing.JCheckBox();
        CM_C_colCseq_box = new javax.swing.JCheckBox();
        CM_C_colCqual_box = new javax.swing.JCheckBox();
        CM_C_colKeepends_box = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        CM_Repor_Panel = new javax.swing.JPanel();
        CM_R_k_value = new javax.swing.JSpinner();
        CM_R_maxPATH_box = new javax.swing.JCheckBox();
        CM_R_m_box = new javax.swing.JCheckBox();
        CM_R_m_value = new javax.swing.JSpinner();
        CM_R_best_box = new javax.swing.JCheckBox();
        CM_R_k_box = new javax.swing.JCheckBox();
        CM_R_all_box = new javax.swing.JCheckBox();
        CM_R_BEST_OtherOptions_Panel = new javax.swing.JPanel();
        CM_R_MMAJ_value = new javax.swing.JSpinner();
        CM_R_MMAJ_box = new javax.swing.JCheckBox();
        CM_R_strata_box = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        CM_Performance_Panel = new javax.swing.JPanel();
        CM_P_o_label = new javax.swing.JLabel();
        CM_P_o_text = new javax.swing.JTextField();
        CM_P_shmem_box = new javax.swing.JCheckBox();
        CM_P_mm_box = new javax.swing.JCheckBox();
        CM_P_p_value = new javax.swing.JSpinner();
        CM_P_p_box = new javax.swing.JCheckBox();
        CM_Other_Panel = new javax.swing.JPanel();
        CM_OO_seed_value = new javax.swing.JSpinner();
        CM_OO_seed_box = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("?");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Bowtie1MapEditor.setPreferredSize(new java.awt.Dimension(809, 662));
        Bowtie1MapEditor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                Bowtie1MapEditorComponentShown(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(830, 521));

        jLabel1.setText("Name");

        name_jTextField1.setText("Bowtie1 Mapping");
        name_jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_jTextField1ActionPerformed(evt);
            }
        });

        jButton2.setText("Rename");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        reset_jButton3.setText("Reset default value");
        reset_jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_jButton3ActionPerformed(evt);
            }
        });

        stop_jButton4.setText("Stop");
        stop_jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop_jButton4ActionPerformed(evt);
            }
        });

        run_jButton5.setText("Run");
        run_jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_jButton5ActionPerformed(evt);
            }
        });

        ClosejButton6.setText("Close");
        ClosejButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClosejButton6ActionPerformed(evt);
            }
        });

        TypeOfLib_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Type of librairy", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 1, 15))); // NOI18N
        TypeOfLib_panel.setPreferredSize(new java.awt.Dimension(426, 210));

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel5.setText("Type");

        M_PE_type_buttons.add(M_SE_button);
        M_SE_button.setSelected(true);
        M_SE_button.setText("Single-end");
        M_SE_button.setName("M_SE_button"); // NOI18N
        M_SE_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_SE_buttonActionPerformed(evt);
            }
        });

        M_PE_type_buttons.add(M_PE_button);
        M_PE_button.setText("Paired-end");
        M_PE_button.setMaximumSize(new java.awt.Dimension(185, 24));
        M_PE_button.setMinimumSize(new java.awt.Dimension(185, 24));
        M_PE_button.setName("M_PE_button"); // NOI18N
        M_PE_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_buttonActionPerformed(evt);
            }
        });

        M_PE_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Paired-end Options"));
        M_PE_Panel.setName("M_PE_Panel"); // NOI18N

        M_PE_tryhard_box.setText("-y/--tryhard");
        M_PE_tryhard_box.setName("M_PE_tryhard_box"); // NOI18N
        M_PE_tryhard_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_tryhard_boxActionPerformed(evt);
            }
        });

        M_PE_pairtries_box.setText("--pairtries");
        M_PE_pairtries_box.setName("M_PE_pairtries_box"); // NOI18N
        M_PE_pairtries_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_pairtries_boxActionPerformed(evt);
            }
        });

        M_PE_pairtries_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100), Integer.valueOf(0), null, Integer.valueOf(10)));
        M_PE_pairtries_value.setName("M_PE_pairtries_value"); // NOI18N
        M_PE_pairtries_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                M_PE_pairtries_spinner_value(evt);
            }
        });

        M_PE_I_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        M_PE_I_value.setName("M_PE_I_value"); // NOI18N
        M_PE_I_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                M_PE_I_spinner_value(evt);
            }
        });

        M_PE_X_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(500), Integer.valueOf(0), null, Integer.valueOf(1)));
        M_PE_X_value.setName("M_PE_X_value"); // NOI18N
        M_PE_X_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                M_PE_X_spinner_value(evt);
            }
        });

        Stream_Orientation_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("upstream/downstream mate orientations"));

        M_PE_stream_buttons.add(M_PE_fr_button);
        M_PE_fr_button.setSelected(true);
        M_PE_fr_button.setText("--fr");
        M_PE_fr_button.setName("M_PE_fr_button"); // NOI18N
        M_PE_fr_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_fr_buttonActionPerformed(evt);
            }
        });

        M_PE_stream_buttons.add(M_PE_rf_button);
        M_PE_rf_button.setText("--rf");
        M_PE_rf_button.setName("M_PE_rf_button"); // NOI18N
        M_PE_rf_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_rf_buttonActionPerformed(evt);
            }
        });

        M_PE_stream_buttons.add(M_PE_ff_button);
        M_PE_ff_button.setText("--ff");
        M_PE_ff_button.setName("M_PE_ff_button"); // NOI18N
        M_PE_ff_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_ff_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Stream_Orientation_PanelLayout = new javax.swing.GroupLayout(Stream_Orientation_Panel);
        Stream_Orientation_Panel.setLayout(Stream_Orientation_PanelLayout);
        Stream_Orientation_PanelLayout.setHorizontalGroup(
            Stream_Orientation_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Stream_Orientation_PanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(M_PE_fr_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(M_PE_rf_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(M_PE_ff_button)
                .addContainerGap(127, Short.MAX_VALUE))
        );
        Stream_Orientation_PanelLayout.setVerticalGroup(
            Stream_Orientation_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Stream_Orientation_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(M_PE_fr_button)
                .addComponent(M_PE_rf_button)
                .addComponent(M_PE_ff_button))
        );

        M_PE_I_box.setText("-I/--minins");
        M_PE_I_box.setName("M_PE_I_box"); // NOI18N
        M_PE_I_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_I_boxActionPerformed(evt);
            }
        });

        M_PE_X_box.setText("-X/--maxins");
        M_PE_X_box.setName("M_PE_X_box"); // NOI18N
        M_PE_X_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_X_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout M_PE_PanelLayout = new javax.swing.GroupLayout(M_PE_Panel);
        M_PE_Panel.setLayout(M_PE_PanelLayout);
        M_PE_PanelLayout.setHorizontalGroup(
            M_PE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(M_PE_tryhard_box)
            .addGroup(M_PE_PanelLayout.createSequentialGroup()
                .addComponent(M_PE_I_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_PE_I_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(M_PE_X_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_PE_X_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(M_PE_PanelLayout.createSequentialGroup()
                .addComponent(M_PE_pairtries_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(M_PE_pairtries_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(Stream_Orientation_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        M_PE_PanelLayout.setVerticalGroup(
            M_PE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(M_PE_PanelLayout.createSequentialGroup()
                .addGroup(M_PE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_PE_I_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M_PE_X_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M_PE_I_box)
                    .addComponent(M_PE_X_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Stream_Orientation_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_PE_tryhard_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(M_PE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_PE_pairtries_box)
                    .addComponent(M_PE_pairtries_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout TypeOfLib_panelLayout = new javax.swing.GroupLayout(TypeOfLib_panel);
        TypeOfLib_panel.setLayout(TypeOfLib_panelLayout);
        TypeOfLib_panelLayout.setHorizontalGroup(
            TypeOfLib_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TypeOfLib_panelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_SE_button)
                .addGap(18, 18, 18)
                .addComponent(M_PE_button, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(M_PE_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        TypeOfLib_panelLayout.setVerticalGroup(
            TypeOfLib_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TypeOfLib_panelLayout.createSequentialGroup()
                .addGroup(TypeOfLib_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_SE_button)
                    .addComponent(M_PE_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_PE_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        IDGSource_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Indexed Genome Source", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 1, 15))); // NOI18N
        IDGSource_Panel.setPreferredSize(new java.awt.Dimension(376, 232));

        IDG_source_buttons.add(IDG_workflow_button);
        IDG_workflow_button.setText("Workflow");
        IDG_workflow_button.setName("IDG_workflow_button"); // NOI18N
        IDG_workflow_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_workflow_buttonActionPerformed(evt);
            }
        });

        IDG_source_buttons.add(IDG_directory_button);
        IDG_directory_button.setText("Directory");
        IDG_directory_button.setName("IDG_directory_button"); // NOI18N
        IDG_directory_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_directory_buttonActionPerformed(evt);
            }
        });

        IDG_main_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Directory Indexed Genome Options"));
        IDG_main_panel.setName("IDG_main_panel"); // NOI18N
        IDG_main_panel.setPreferredSize(new java.awt.Dimension(354, 153));

        IDG_selected_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose_an_indexed_Genome" }));
        IDG_selected_ComboBox.setName("IDG_selected_ComboBox"); // NOI18N
        IDG_selected_ComboBox.setPreferredSize(new java.awt.Dimension(320, 27));
        IDG_selected_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_selected_ComboBoxActionPerformed(evt);
            }
        });

        IDG_r_text.setName("IDG_r_text"); // NOI18N
        IDG_r_text.setPreferredSize(new java.awt.Dimension(320, 27));
        IDG_r_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_r_textActionPerformed(evt);
            }
        });

        jLabel2.setText("Indexed Genome Repertory :");

        jLabel3.setText("Select an indexed genome");

        IDG_Update_button.setText("Update");
        IDG_Update_button.setName("IDG_Update_button"); // NOI18N
        IDG_Update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_Update_buttonActionPerformed(evt);
            }
        });

        IDG_change_button.setText("Change");
        IDG_change_button.setName("IDG_change_button"); // NOI18N
        IDG_change_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_change_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout IDG_main_panelLayout = new javax.swing.GroupLayout(IDG_main_panel);
        IDG_main_panel.setLayout(IDG_main_panelLayout);
        IDG_main_panelLayout.setHorizontalGroup(
            IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IDG_main_panelLayout.createSequentialGroup()
                .addGroup(IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(IDG_r_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(IDG_main_panelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(IDG_change_button))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IDG_main_panelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(IDG_Update_button))
                    .addComponent(IDG_selected_ComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        IDG_main_panelLayout.setVerticalGroup(
            IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IDG_main_panelLayout.createSequentialGroup()
                .addGroup(IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(IDG_change_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDG_r_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(IDG_Update_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDG_selected_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel4.setText("from");

        IDG_largeIndex_box.setText("--large-index");
        IDG_largeIndex_box.setName("IDG_largeIndex_box"); // NOI18N

        javax.swing.GroupLayout IDGSource_PanelLayout = new javax.swing.GroupLayout(IDGSource_Panel);
        IDGSource_Panel.setLayout(IDGSource_PanelLayout);
        IDGSource_PanelLayout.setHorizontalGroup(
            IDGSource_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IDGSource_PanelLayout.createSequentialGroup()
                .addComponent(IDG_main_panel, 352, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 39, Short.MAX_VALUE))
            .addGroup(IDGSource_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IDGSource_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IDGSource_PanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(IDG_workflow_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IDG_directory_button))
                    .addComponent(IDG_largeIndex_box))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        IDGSource_PanelLayout.setVerticalGroup(
            IDGSource_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IDGSource_PanelLayout.createSequentialGroup()
                .addGroup(IDGSource_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IDG_workflow_button)
                    .addComponent(IDG_directory_button)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDG_main_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDG_largeIndex_box)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Output_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Output Options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 1, 15))); // NOI18N
        Output_Panel.setName("Output_Panel"); // NOI18N

        O_unPATH_box.setText("--un");
        O_unPATH_box.setName("O_unPATH_box"); // NOI18N
        O_unPATH_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_unPATH_boxActionPerformed(evt);
            }
        });

        O_alPATH_box.setText("--al");
        O_alPATH_box.setName("O_alPATH_box"); // NOI18N
        O_alPATH_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_alPATH_boxActionPerformed(evt);
            }
        });

        O_quiet_box.setText("--quiet");
        O_quiet_box.setName("O_quiet_box"); // NOI18N
        O_quiet_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_quiet_boxActionPerformed(evt);
            }
        });

        O_time_box.setText("-t/--time");
        O_time_box.setName("O_time_box"); // NOI18N
        O_time_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_time_boxActionPerformed(evt);
            }
        });

        O_offbase_box.setText("-B/--offbase");
        O_offbase_box.setName("O_offbase_box"); // NOI18N
        O_offbase_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_offbase_boxActionPerformed(evt);
            }
        });

        O_offbase_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        O_offbase_value.setName("O_offbase_value"); // NOI18N
        O_offbase_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                O_offbase_spinner_value(evt);
            }
        });

        O_refidx_box.setText("--refidx");
        O_refidx_box.setName("O_refidx_box"); // NOI18N
        O_refidx_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_refidx_boxActionPerformed(evt);
            }
        });

        O_fullref_box.setText("--fullref");
        O_fullref_box.setName("O_fullref_box"); // NOI18N
        O_fullref_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_fullref_boxActionPerformed(evt);
            }
        });

        O_suppress_box.setText("--suppress");
        O_suppress_box.setName("O_suppress_box"); // NOI18N
        O_suppress_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_suppress_boxActionPerformed(evt);
            }
        });

        O_suppress_text.setText("<COLS>");
        O_suppress_text.setName("O_suppress_text"); // NOI18N
        O_suppress_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                O_suppress_textFocusLost(evt);
            }
        });

        O_SAM_sam_box.setText("-S/--sam");
        O_SAM_sam_box.setName("CM_SAM_noUnal_box"); // NOI18N
        O_SAM_sam_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_SAM_sam_boxActionPerformed(evt);
            }
        });

        O_SAM_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("SAM options"));
        O_SAM_panel.setPreferredSize(new java.awt.Dimension(344, 124));

        O_SAM_samRG_box.setText("--sam-RG");
        O_SAM_samRG_box.setName("O_SAM_samRG_box"); // NOI18N
        O_SAM_samRG_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_SAM_samRG_boxActionPerformed(evt);
            }
        });

        O_SAM_samNosq_box.setText("--sam-nosq");
        O_SAM_samNosq_box.setName("O_SAM_samNosq_box"); // NOI18N
        O_SAM_samNosq_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_SAM_samNosq_boxActionPerformed(evt);
            }
        });

        O_SAM_mapq_box.setText("--mapq");
        O_SAM_mapq_box.setName("O_SAM_mapq_box"); // NOI18N
        O_SAM_mapq_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_SAM_mapq_boxActionPerformed(evt);
            }
        });

        O_SAM_samNohead_box.setText("--sam-nohead");
        O_SAM_samNohead_box.setName("O_SAM_samNohead_box"); // NOI18N
        O_SAM_samNohead_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_SAM_samNohead_boxActionPerformed(evt);
            }
        });

        O_SAM_samRG_text.setName("O_SAM_samRG_text"); // NOI18N
        O_SAM_samRG_text.setPreferredSize(new java.awt.Dimension(212, 27));
        O_SAM_samRG_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                O_SAM_samRG_textFocusLost(evt);
            }
        });

        O_SAM_mapq_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(255), Integer.valueOf(0), null, Integer.valueOf(1)));
        O_SAM_mapq_value.setName("O_SAM_mapq_value"); // NOI18N
        O_SAM_mapq_value.setPreferredSize(new java.awt.Dimension(100, 28));
        O_SAM_mapq_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                O_SAM_mapq_valueStateChanged(evt);
            }
        });

        javax.swing.GroupLayout O_SAM_panelLayout = new javax.swing.GroupLayout(O_SAM_panel);
        O_SAM_panel.setLayout(O_SAM_panelLayout);
        O_SAM_panelLayout.setHorizontalGroup(
            O_SAM_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(O_SAM_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(O_SAM_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(O_SAM_panelLayout.createSequentialGroup()
                        .addComponent(O_SAM_mapq_box)
                        .addGap(18, 18, 18)
                        .addComponent(O_SAM_mapq_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(O_SAM_panelLayout.createSequentialGroup()
                        .addComponent(O_SAM_samNosq_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(O_SAM_samNohead_box))
                    .addGroup(O_SAM_panelLayout.createSequentialGroup()
                        .addComponent(O_SAM_samRG_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(O_SAM_samRG_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        O_SAM_panelLayout.setVerticalGroup(
            O_SAM_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(O_SAM_panelLayout.createSequentialGroup()
                .addGroup(O_SAM_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O_SAM_mapq_box)
                    .addComponent(O_SAM_mapq_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(O_SAM_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O_SAM_samRG_box)
                    .addComponent(O_SAM_samRG_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(O_SAM_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O_SAM_samNosq_box)
                    .addComponent(O_SAM_samNohead_box)))
        );

        javax.swing.GroupLayout Output_PanelLayout = new javax.swing.GroupLayout(Output_Panel);
        Output_Panel.setLayout(Output_PanelLayout);
        Output_PanelLayout.setHorizontalGroup(
            Output_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Output_PanelLayout.createSequentialGroup()
                .addGroup(Output_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Output_PanelLayout.createSequentialGroup()
                        .addComponent(O_refidx_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(O_fullref_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(O_suppress_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(O_suppress_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(O_SAM_sam_box)
                    .addGroup(Output_PanelLayout.createSequentialGroup()
                        .addGroup(Output_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Output_PanelLayout.createSequentialGroup()
                                .addComponent(O_unPATH_box)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(O_alPATH_box))
                            .addComponent(O_offbase_box, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Output_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(O_offbase_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Output_PanelLayout.createSequentialGroup()
                                .addComponent(O_time_box)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(O_quiet_box))))
                    .addComponent(O_SAM_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        Output_PanelLayout.setVerticalGroup(
            Output_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Output_PanelLayout.createSequentialGroup()
                .addGroup(Output_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O_unPATH_box)
                    .addComponent(O_alPATH_box)
                    .addComponent(O_quiet_box)
                    .addComponent(O_time_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Output_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O_offbase_box)
                    .addComponent(O_offbase_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Output_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O_refidx_box)
                    .addComponent(O_fullref_box)
                    .addComponent(O_suppress_box)
                    .addComponent(O_suppress_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_SAM_sam_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_SAM_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
        );

        M_Buttons.add(M_default_button);
        M_default_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_default_button.setSelected(true);
        M_default_button.setText("Use default options");
        M_default_button.setName("M_default_button"); // NOI18N
        M_default_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_default_buttonActionPerformed(evt);
            }
        });

        M_Buttons.add(M_CM_button);
        M_CM_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_CM_button.setText("Advanced Mapping");
        M_CM_button.setName("M_CM_button"); // NOI18N
        M_CM_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_CM_buttonActionPerformed(evt);
            }
        });

        CM_TabPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Advanced Mapping Options"));
        CM_TabPanel.setEnabled(false);
        CM_TabPanel.setName("CM_TabPanel"); // NOI18N

        CM_Input_Panel.setName("CM_Input_Panel"); // NOI18N

        CM_O_TypeQuals_Buttons.add(CM_I_phred64Quals_box);
        CM_I_phred64Quals_box.setText("--phred64-quals");
        CM_I_phred64Quals_box.setName("CM_I_phred64Quals_box"); // NOI18N
        CM_I_phred64Quals_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_phred64Quals_boxActionPerformed(evt);
            }
        });

        CM_O_TypeQuals_Buttons.add(CM_I_phred33Quals_box);
        CM_I_phred33Quals_box.setText("--phred33-quals");
        CM_I_phred33Quals_box.setName("CM_I_phred33Quals_box"); // NOI18N
        CM_I_phred33Quals_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_phred33Quals_boxActionPerformed(evt);
            }
        });

        CM_O_TypeQuals_Buttons.add(CM_I_solexaQuals_box);
        CM_I_solexaQuals_box.setText("--solexa-quals");
        CM_I_solexaQuals_box.setName("CM_I_solexaQuals_box"); // NOI18N
        CM_I_solexaQuals_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_solexaQuals_boxActionPerformed(evt);
            }
        });

        CM_O_TypeQuals_Buttons.add(CM_I_intQuals_box);
        CM_I_intQuals_box.setText("--int-quals");
        CM_I_intQuals_box.setName("CM_I_intQuals_box"); // NOI18N
        CM_I_intQuals_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_intQuals_boxActionPerformed(evt);
            }
        });

        CM_O_TypeQuals_Buttons.add(CM_I_solexa1DOT3Quals_box);
        CM_I_solexa1DOT3Quals_box.setText("--solexa1.3-quals");
        CM_I_solexa1DOT3Quals_box.setName("CM_I_solexaQuals_box"); // NOI18N
        CM_I_solexa1DOT3Quals_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_solexa1DOT3Quals_boxActionPerformed(evt);
            }
        });

        CM_I_s_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        CM_I_s_value.setName("CM_I_s_value"); // NOI18N
        CM_I_s_value.setPreferredSize(new java.awt.Dimension(115, 20));
        CM_I_s_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_I_s_spinner_value(evt);
            }
        });

        CM_I_u_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2147483647), Integer.valueOf(0), null, Integer.valueOf(1)));
        CM_I_u_value.setName("CM_I_u_value"); // NOI18N
        CM_I_u_value.setPreferredSize(new java.awt.Dimension(115, 20));
        CM_I_u_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_I_u_spinner_value(evt);
            }
        });

        CM_I_5_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        CM_I_5_value.setName("CM_I_5_value"); // NOI18N
        CM_I_5_value.setPreferredSize(new java.awt.Dimension(115, 20));
        CM_I_5_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_I_5_spinner_value(evt);
            }
        });

        CM_I_3_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        CM_I_3_value.setName("CM_I_3_value"); // NOI18N
        CM_I_3_value.setPreferredSize(new java.awt.Dimension(115, 20));
        CM_I_3_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_I_3_spinner_value(evt);
            }
        });

        CM_I_TOI_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Type of inputs (only q is available and set by default)"));

        CM_I_c_box.setText("-c");
        CM_I_c_box.setName("CM_I_c_box"); // NOI18N
        CM_I_c_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_c_boxActionPerformed(evt);
            }
        });

        CM_I_r_box.setText("-r");
        CM_I_r_box.setName("CM_I_r_box"); // NOI18N
        CM_I_r_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_r_boxActionPerformed(evt);
            }
        });

        CM_I_f_box.setText("-f");
        CM_I_f_box.setName("CM_I_f_box"); // NOI18N
        CM_I_f_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_f_boxActionPerformed(evt);
            }
        });

        CM_I_qseq_box.setText("--qseq");
        CM_I_qseq_box.setName("CM_I_qseq_box"); // NOI18N
        CM_I_qseq_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_qseq_boxActionPerformed(evt);
            }
        });

        CM_I_q_box.setText("-q");
        CM_I_q_box.setName("CM_I_q_box"); // NOI18N
        CM_I_q_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_q_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_I_TOI_panelLayout = new javax.swing.GroupLayout(CM_I_TOI_panel);
        CM_I_TOI_panel.setLayout(CM_I_TOI_panelLayout);
        CM_I_TOI_panelLayout.setHorizontalGroup(
            CM_I_TOI_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CM_I_TOI_panelLayout.createSequentialGroup()
                .addComponent(CM_I_q_box)
                .addGap(18, 18, 18)
                .addComponent(CM_I_qseq_box)
                .addGap(18, 18, 18)
                .addComponent(CM_I_f_box)
                .addGap(18, 18, 18)
                .addComponent(CM_I_r_box)
                .addGap(18, 18, 18)
                .addComponent(CM_I_c_box)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        CM_I_TOI_panelLayout.setVerticalGroup(
            CM_I_TOI_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_I_TOI_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(CM_I_q_box)
                .addComponent(CM_I_qseq_box))
            .addGroup(CM_I_TOI_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(CM_I_f_box)
                .addComponent(CM_I_c_box)
                .addComponent(CM_I_r_box))
        );

        CM_I_c_box.getAccessibleContext().setAccessibleDescription("The read sequences are given on command line. I.e. <m1>, <m2> and <singles> are comma-separated lists of reads rather than lists of read files. There is no way to specify read names or qualities, so -c also implies --ignore-quals.");
        CM_I_r_box.getAccessibleContext().setAccessibleDescription("Reads (specified with <m1>, <m2>, <s>) are files with one input sequence per line, without any other information (no read names, no qualities). When -r is set, the result is as if --ignore-quals is also set.");
        CM_I_f_box.getAccessibleContext().setAccessibleName("");
        CM_I_f_box.getAccessibleContext().setAccessibleDescription("Reads (specified with <m1>, <m2>, <s>) are FASTA files. FASTA files usually have extension .fa, .fasta, .mfa, .fna or similar. FASTA files do not have a way of specifying quality values, so when -f is set, the result is as if --ignore-quals is also set.");
        CM_I_qseq_box.getAccessibleContext().setAccessibleDescription("Reads (specified with <m1>, <m2>, <s>) are QSEQ files. QSEQ files usually end in _qseq.txt. See also: --solexa-quals and --int-quals.");
        CM_I_q_box.getAccessibleContext().setAccessibleDescription("Reads (specified with <m1>, <m2>, <s>) are FASTQ files. FASTQ files usually have extension .fq or .fastq. FASTQ is the default format. See also: --solexa-quals and --int-quals.");

        CM_I_s_box.setText("-s/--skip");
        CM_I_s_box.setName("CM_I_s_box"); // NOI18N
        CM_I_s_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_s_boxActionPerformed(evt);
            }
        });

        CM_I_u_box.setText("-u/--qupto");
        CM_I_u_box.setName("CM_I_u_box"); // NOI18N
        CM_I_u_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_u_boxActionPerformed(evt);
            }
        });

        CM_I_5_box.setText("-5/--trim5");
        CM_I_5_box.setName("CM_I_5_box"); // NOI18N
        CM_I_5_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_5_boxActionPerformed(evt);
            }
        });

        CM_I_3_box.setText("-3/--trim3");
        CM_I_3_box.setName("CM_I_3_box"); // NOI18N
        CM_I_3_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_3_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_Input_PanelLayout = new javax.swing.GroupLayout(CM_Input_Panel);
        CM_Input_Panel.setLayout(CM_Input_PanelLayout);
        CM_Input_PanelLayout.setHorizontalGroup(
            CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CM_Input_PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CM_Input_PanelLayout.createSequentialGroup()
                        .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CM_I_solexaQuals_box)
                            .addComponent(CM_I_phred33Quals_box))
                        .addGap(18, 18, 18)
                        .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CM_I_phred64Quals_box)
                            .addComponent(CM_I_solexa1DOT3Quals_box)))
                    .addComponent(CM_I_TOI_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_I_intQuals_box)
                    .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(CM_Input_PanelLayout.createSequentialGroup()
                            .addComponent(CM_I_3_box)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CM_I_3_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CM_Input_PanelLayout.createSequentialGroup()
                            .addComponent(CM_I_5_box)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CM_I_5_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CM_Input_PanelLayout.createSequentialGroup()
                            .addComponent(CM_I_s_box)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CM_I_s_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CM_Input_PanelLayout.createSequentialGroup()
                            .addComponent(CM_I_u_box)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(CM_I_u_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(70, 70, 70))
        );
        CM_Input_PanelLayout.setVerticalGroup(
            CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Input_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CM_I_TOI_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_I_s_box)
                    .addComponent(CM_I_s_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_I_u_box)
                    .addComponent(CM_I_u_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_I_5_box)
                    .addComponent(CM_I_5_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_I_3_box)
                    .addComponent(CM_I_3_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_I_phred33Quals_box)
                    .addComponent(CM_I_phred64Quals_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_I_solexaQuals_box)
                    .addComponent(CM_I_solexa1DOT3Quals_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CM_I_intQuals_box)
                .addContainerGap())
        );

        CM_I_phred64Quals_box.getAccessibleContext().setAccessibleDescription("Input qualities are ASCII chars equal to the Phred quality plus 64. This is also called the \"Phred+64\" encoding.");
        CM_I_phred33Quals_box.getAccessibleContext().setAccessibleDescription("Input qualities are ASCII chars equal to the Phred quality plus 33. This is also called the \"Phred+33\" encoding, which is used by the very latest Illumina pipelines.");
        CM_I_solexaQuals_box.getAccessibleContext().setAccessibleDescription("Convert input qualities from Solexa (which can be negative) to Phred (which can't). This scheme was used in older Illumina GA Pipeline versions (prior to 1.3). Default: off.");
        CM_I_intQuals_box.getAccessibleContext().setAccessibleDescription("Quality values are represented in the read input file as space-separated ASCII integers, e.g., 40 40 30 40..., rather than ASCII characters, e.g., II?I.... Integers are treated as being on the Phred quality scale unless --solexa-quals is also specified. Default: off.");

        CM_TabPanel.addTab("Input", CM_Input_Panel);

        CM_Align_Panel.setName("CM_Align_Panel"); // NOI18N

        CM_A_maxbts_box.setText("--maxbts");
        CM_A_maxbts_box.setName("CM_A_maxbts_box"); // NOI18N
        CM_A_maxbts_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_maxbts_boxActionPerformed(evt);
            }
        });

        CM_A_nofw_box.setText("--nofw");
        CM_A_nofw_box.setName("CM_A_nofw_box"); // NOI18N
        CM_A_nofw_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_nofw_boxActionPerformed(evt);
            }
        });

        CM_A_norc_box.setText("--norc");
        CM_A_norc_box.setName("CM_A_norc_box"); // NOI18N
        CM_A_norc_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_norc_boxActionPerformed(evt);
            }
        });

        CM_A_nomaqround_box.setText("--nomaqround");
        CM_A_nomaqround_box.setName("CM_A_nomaqround_box"); // NOI18N
        CM_A_nomaqround_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_nomaqround_boxActionPerformed(evt);
            }
        });

        CM_A_seedmms_box.setText("-n/--seedmms");
        CM_A_seedmms_box.setName("CM_A_seedmms_box"); // NOI18N
        CM_A_seedmms_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_seedmms_boxActionPerformed(evt);
            }
        });

        CM_A_seedmms_value.setModel(new javax.swing.SpinnerNumberModel(2, 0, 3, 1));
        CM_A_seedmms_value.setName("CM_A_seedmms_value"); // NOI18N
        CM_A_seedmms_value.setPreferredSize(new java.awt.Dimension(100, 28));
        CM_A_seedmms_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_A_seedmms_spinner_value(evt);
            }
        });

        CM_A_v_box.setText("-v");
        CM_A_v_box.setName("CM_A_v_box"); // NOI18N

        CM_A_v_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        CM_A_v_value.setMinimumSize(new java.awt.Dimension(100, 28));
        CM_A_v_value.setName("CM_A_v_value"); // NOI18N
        CM_A_v_value.setPreferredSize(new java.awt.Dimension(100, 28));
        CM_A_v_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_A_v_spinner_value(evt);
            }
        });

        CM_A_chunkmbs_box.setText("--chunkmbs");
        CM_A_chunkmbs_box.setName("CM_A_chunkmbs_box"); // NOI18N

        CM_A_chunkmbs_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(64), Integer.valueOf(0), null, Integer.valueOf(1)));
        CM_A_chunkmbs_value.setName("CM_A_chunkmbs_value"); // NOI18N
        CM_A_chunkmbs_value.setPreferredSize(new java.awt.Dimension(100, 28));
        CM_A_chunkmbs_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_A_chunkmbs_spinner_value(evt);
            }
        });

        CM_A_seedlen_box.setText("-l/--seedlen");
        CM_A_seedlen_box.setName("CM_A_seedlen_box"); // NOI18N
        CM_A_seedlen_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_seedlen_boxActionPerformed(evt);
            }
        });

        CM_A_seedlen_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(28), Integer.valueOf(5), null, Integer.valueOf(1)));
        CM_A_seedlen_value.setName("CM_A_seedlen_value"); // NOI18N
        CM_A_seedlen_value.setPreferredSize(new java.awt.Dimension(100, 28));
        CM_A_seedlen_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_A_seedlen_spinner_value(evt);
            }
        });

        CM_A_maqerr_box.setText("-e/--maqerr");
        CM_A_maqerr_box.setName("CM_A_maqerr_box"); // NOI18N
        CM_A_maqerr_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_maqerr_boxActionPerformed(evt);
            }
        });

        CM_A_maqerr_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(70), Integer.valueOf(0), null, Integer.valueOf(1)));
        CM_A_maqerr_value.setName("CM_A_maqerr_value"); // NOI18N
        CM_A_maqerr_value.setPreferredSize(new java.awt.Dimension(100, 28));
        CM_A_maqerr_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_A_maqerr_spinner_value(evt);
            }
        });

        javax.swing.GroupLayout CM_Align_PanelLayout = new javax.swing.GroupLayout(CM_Align_Panel);
        CM_Align_Panel.setLayout(CM_Align_PanelLayout);
        CM_Align_PanelLayout.setHorizontalGroup(
            CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CM_A_v_box)
                            .addComponent(CM_A_chunkmbs_box)
                            .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                                .addComponent(CM_A_seedmms_box)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CM_A_seedlen_box)
                                    .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                                        .addGap(132, 132, 132)
                                        .addComponent(CM_A_seedlen_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(CM_A_seedmms_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CM_A_maxbts_box)))))
                    .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(CM_A_maqerr_box)
                        .addGap(22, 22, 22)
                        .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CM_A_chunkmbs_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                                .addComponent(CM_A_maqerr_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(CM_A_nomaqround_box))
                            .addComponent(CM_A_v_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(CM_A_nofw_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_A_norc_box)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CM_Align_PanelLayout.setVerticalGroup(
            CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_maqerr_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_A_maqerr_box)
                    .addComponent(CM_A_nomaqround_box))
                .addGap(5, 5, 5)
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_chunkmbs_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_A_chunkmbs_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_v_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_A_v_box))
                .addGap(9, 9, 9)
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_seedmms_box)
                    .addComponent(CM_A_seedmms_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_seedlen_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_A_seedlen_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CM_A_maxbts_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_nofw_box)
                    .addComponent(CM_A_norc_box)))
        );

        CM_A_maxbts_box.getAccessibleContext().setAccessibleDescription("When calculating a mismatch penalty, always consider the quality value at the mismatched position to be the highest possible, regardless of the actual value. I.e. input is treated as though all quality values are high. This is also the default behavior when the input doesn't specify quality values (e.g. in -f, -r, or -c modes).");
        CM_A_nofw_box.getAccessibleContext().setAccessibleDescription("If --nofw is specified, bowtie2 will not attempt to align unpaired reads to the forward (Watson) reference strand. If --norc is specified, bowtie2 will not attempt to align unpaired reads against the reverse-complement (Crick) reference strand. In paired-end mode, --nofw and --norc pertain to the fragments; i.e. specifying --nofw causes bowtie2 to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand. Default: both strands enabled.");
        CM_A_nomaqround_box.getAccessibleContext().setAccessibleDescription("By default, Bowtie 2 will attempt to find either an exact or a 1-mismatch end-to-end alignment for the read before trying the multiseed heuristic. Such alignments can be found very quickly, and many short read alignments have exact or near-exact end-to-end alignments. However, this can lead to unexpected alignments when the user also sets options governing the multiseed heuristic, like -L and -N. For instance, if the user specifies -N 0 and -L equal to the length of the read, the user will be surprised to find 1-mismatch alignments reported. This option prevents Bowtie 2 from searching for 1-mismatch end-to-end alignments before using the multiseed heuristic, which leads to the expected behavior when combined with options such as -L and -N. This comes at the expense of speed.");

        CM_TabPanel.addTab("Alignment", CM_Align_Panel);

        CM_Colorspace_Panel.setName("CM_Colorspace_Panel"); // NOI18N

        CM_C_snpphred_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(30), Integer.valueOf(0), null, Integer.valueOf(1)));
        CM_C_snpphred_value.setToolTipText("");
        CM_C_snpphred_value.setName("CM_C_snpphred_value"); // NOI18N
        CM_C_snpphred_value.setPreferredSize(new java.awt.Dimension(100, 28));
        CM_C_snpphred_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_C_snpphred_spinner_value(evt);
            }
        });

        CM_C_snpfrac_value.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.001d), Double.valueOf(0.0d), null, Double.valueOf(0.01d)));
        CM_C_snpfrac_value.setName("CM_C_snpfrac_value"); // NOI18N
        CM_C_snpfrac_value.setPreferredSize(new java.awt.Dimension(100, 28));
        CM_C_snpfrac_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_S_snpfrac_spinner_value(evt);
            }
        });

        CM_C_snpphred_box.setText("--snpphred");
        CM_C_snpphred_box.setName("CM_C_snpphred_box"); // NOI18N

        CM_C_snpfrac_box.setText("--snpfrac");
        CM_C_snpfrac_box.setName("CM_C_snpfrac_box"); // NOI18N
        CM_C_snpfrac_box.setPreferredSize(new java.awt.Dimension(105, 24));

        CM_C_colCseq_box.setText("--col-cseq");
        CM_C_colCseq_box.setName("CM_C_colCseq_box"); // NOI18N
        CM_C_colCseq_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_C_colCseq_boxActionPerformed(evt);
            }
        });

        CM_C_colCqual_box.setText("--col-cqual");
        CM_C_colCqual_box.setName("CM_C_colCqual_box"); // NOI18N
        CM_C_colCqual_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_C_colCqual_boxActionPerformed(evt);
            }
        });

        CM_C_colKeepends_box.setText("--col-keepends");
        CM_C_colKeepends_box.setName("CM_C_colKeepends_box"); // NOI18N

        jLabel8.setText("Two options that disabled -S/--sam output");

        javax.swing.GroupLayout CM_Colorspace_PanelLayout = new javax.swing.GroupLayout(CM_Colorspace_Panel);
        CM_Colorspace_Panel.setLayout(CM_Colorspace_PanelLayout);
        CM_Colorspace_PanelLayout.setHorizontalGroup(
            CM_Colorspace_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Colorspace_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Colorspace_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CM_Colorspace_PanelLayout.createSequentialGroup()
                        .addGroup(CM_Colorspace_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(CM_C_snpfrac_box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CM_C_snpphred_box))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CM_Colorspace_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CM_C_snpphred_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CM_C_snpfrac_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel8)
                    .addGroup(CM_Colorspace_PanelLayout.createSequentialGroup()
                        .addComponent(CM_C_colCseq_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_C_colCqual_box))
                    .addComponent(CM_C_colKeepends_box))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        CM_Colorspace_PanelLayout.setVerticalGroup(
            CM_Colorspace_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Colorspace_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Colorspace_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_C_snpphred_box)
                    .addComponent(CM_C_snpphred_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Colorspace_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_C_snpfrac_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_C_snpfrac_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CM_C_colKeepends_box)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Colorspace_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_C_colCseq_box)
                    .addComponent(CM_C_colCqual_box))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        CM_TabPanel.addTab("Colorspace", CM_Colorspace_Panel);

        CM_Repor_Panel.setName("CM_Repor_Panel"); // NOI18N

        CM_R_k_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
        CM_R_k_value.setName("CM_R_k_value"); // NOI18N
        CM_R_k_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_R_k_spinner_value(evt);
            }
        });

        CM_R_maxPATH_box.setText("--max");
        CM_R_maxPATH_box.setName("CM_R_maxPATH_box"); // NOI18N
        CM_R_maxPATH_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_R_maxPATH_boxActionPerformed(evt);
            }
        });

        CM_R_m_box.setText("-m");
        CM_R_m_box.setName("CM_R_m_box"); // NOI18N
        CM_R_m_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_R_m_boxActionPerformed(evt);
            }
        });

        CM_R_m_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(-1), Integer.valueOf(-1), null, Integer.valueOf(1)));
        CM_R_m_value.setName("CM_R_m_value"); // NOI18N
        CM_R_m_value.setPreferredSize(new java.awt.Dimension(100, 28));
        CM_R_m_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_R_m_spinner_value(evt);
            }
        });

        CM_R_best_box.setText("--best");
        CM_R_best_box.setName("CM_R_best_box"); // NOI18N
        CM_R_best_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_R_best_boxActionPerformed(evt);
            }
        });

        CM_R_k_box.setText("-k");
        CM_R_k_box.setName("CM_R_k_box"); // NOI18N

        CM_R_all_box.setText("-a/--all");
        CM_R_all_box.setName("CM_R_all_box"); // NOI18N
        CM_R_all_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_R_all_boxActionPerformed(evt);
            }
        });

        CM_R_BEST_OtherOptions_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("If best is selected"));

        CM_R_MMAJ_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
        CM_R_MMAJ_value.setName("CM_R_MMAJ_value"); // NOI18N
        CM_R_MMAJ_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_R_M_spinner_value(evt);
            }
        });

        CM_R_MMAJ_box.setText("-M");
        CM_R_MMAJ_box.setName("CM_R_MMAJ_box"); // NOI18N
        CM_R_MMAJ_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_R_MMAJ_boxActionPerformed(evt);
            }
        });

        CM_R_strata_box.setText("--strata");
        CM_R_strata_box.setName("CM_R_strata_box"); // NOI18N
        CM_R_strata_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_R_strata_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_R_BEST_OtherOptions_PanelLayout = new javax.swing.GroupLayout(CM_R_BEST_OtherOptions_Panel);
        CM_R_BEST_OtherOptions_Panel.setLayout(CM_R_BEST_OtherOptions_PanelLayout);
        CM_R_BEST_OtherOptions_PanelLayout.setHorizontalGroup(
            CM_R_BEST_OtherOptions_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_R_BEST_OtherOptions_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_R_BEST_OtherOptions_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CM_R_BEST_OtherOptions_PanelLayout.createSequentialGroup()
                        .addComponent(CM_R_MMAJ_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_R_MMAJ_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CM_R_strata_box))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CM_R_BEST_OtherOptions_PanelLayout.setVerticalGroup(
            CM_R_BEST_OtherOptions_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_R_BEST_OtherOptions_PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CM_R_BEST_OtherOptions_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_R_MMAJ_box)
                    .addComponent(CM_R_MMAJ_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CM_R_strata_box))
        );

        jLabel6.setText("if -m selected :");

        jLabel7.setText("available if -n or -v or -l or -e, see Alignment");

        javax.swing.GroupLayout CM_Repor_PanelLayout = new javax.swing.GroupLayout(CM_Repor_Panel);
        CM_Repor_Panel.setLayout(CM_Repor_PanelLayout);
        CM_Repor_PanelLayout.setHorizontalGroup(
            CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Repor_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CM_Repor_PanelLayout.createSequentialGroup()
                        .addGroup(CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CM_Repor_PanelLayout.createSequentialGroup()
                                .addComponent(CM_R_best_box)
                                .addGap(18, 18, 18)
                                .addComponent(CM_R_BEST_OtherOptions_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CM_Repor_PanelLayout.createSequentialGroup()
                                .addComponent(CM_R_k_box)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CM_R_k_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(CM_Repor_PanelLayout.createSequentialGroup()
                        .addComponent(CM_R_m_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_R_m_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CM_R_maxPATH_box)
                        .addGap(53, 53, 53))
                    .addGroup(CM_Repor_PanelLayout.createSequentialGroup()
                        .addComponent(CM_R_all_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        CM_Repor_PanelLayout.setVerticalGroup(
            CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Repor_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_R_k_box)
                    .addComponent(CM_R_k_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_R_maxPATH_box)
                    .addComponent(CM_R_m_box)
                    .addComponent(CM_R_m_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CM_R_best_box)
                    .addComponent(CM_R_BEST_OtherOptions_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_R_all_box)
                    .addComponent(jLabel7))
                .addGap(33, 33, 33))
        );

        CM_TabPanel.addTab("Reporting", CM_Repor_Panel);

        CM_Performance_Panel.setName("CM_Performance_Panel"); // NOI18N

        CM_P_o_label.setText("-o/--offrate");
        CM_P_o_label.setName("CM_P_o_label"); // NOI18N

        CM_P_o_text.setEditable(false);
        CM_P_o_text.setText("NOT SET");
        CM_P_o_text.setEnabled(false);
        CM_P_o_text.setName("CM_P_o_text"); // NOI18N
        CM_P_o_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CM_P_o_textFocusLost(evt);
            }
        });
        CM_P_o_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_P_o_textActionPerformed(evt);
            }
        });

        CM_P_Buttons.add(CM_P_shmem_box);
        CM_P_shmem_box.setText("--shmem");
        CM_P_shmem_box.setName("CM_P_shmem_box"); // NOI18N
        CM_P_shmem_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_P_shmem_boxActionPerformed(evt);
            }
        });

        CM_P_Buttons.add(CM_P_mm_box);
        CM_P_mm_box.setText("--mm");
        CM_P_mm_box.setName("CM_P_mm_box"); // NOI18N
        CM_P_mm_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_P_mm_boxActionPerformed(evt);
            }
        });

        CM_P_p_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        CM_P_p_value.setName("CM_P_p_value"); // NOI18N
        CM_P_p_value.setPreferredSize(new java.awt.Dimension(115, 20));
        CM_P_p_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_P_p_spinner_value(evt);
            }
        });

        CM_P_Buttons.add(CM_P_p_box);
        CM_P_p_box.setText("-p/--threads");
        CM_P_p_box.setName("CM_P_p_box"); // NOI18N
        CM_P_p_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_P_p_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_Performance_PanelLayout = new javax.swing.GroupLayout(CM_Performance_Panel);
        CM_Performance_Panel.setLayout(CM_Performance_PanelLayout);
        CM_Performance_PanelLayout.setHorizontalGroup(
            CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Performance_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CM_P_mm_box)
                    .addGroup(CM_Performance_PanelLayout.createSequentialGroup()
                        .addGroup(CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CM_P_o_label)
                            .addComponent(CM_P_p_box))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CM_P_p_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CM_P_o_text)))
                    .addComponent(CM_P_shmem_box))
                .addContainerGap(164, Short.MAX_VALUE))
        );
        CM_Performance_PanelLayout.setVerticalGroup(
            CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Performance_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_P_o_label)
                    .addComponent(CM_P_o_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_P_p_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_P_p_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CM_P_shmem_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CM_P_mm_box)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        CM_TabPanel.addTab("Performances", CM_Performance_Panel);

        CM_Other_Panel.setName("CM_Other_Panel"); // NOI18N

        CM_OO_seed_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        CM_OO_seed_value.setName("CM_OO_seed_value"); // NOI18N
        CM_OO_seed_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_OO_seed_spinner_value(evt);
            }
        });

        CM_OO_seed_box.setText("--seed");
        CM_OO_seed_box.setName("CM_OO_seed_box"); // NOI18N
        CM_OO_seed_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_OO_seed_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_Other_PanelLayout = new javax.swing.GroupLayout(CM_Other_Panel);
        CM_Other_Panel.setLayout(CM_Other_PanelLayout);
        CM_Other_PanelLayout.setHorizontalGroup(
            CM_Other_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Other_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CM_OO_seed_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CM_OO_seed_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(222, Short.MAX_VALUE))
        );
        CM_Other_PanelLayout.setVerticalGroup(
            CM_Other_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Other_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Other_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_OO_seed_box)
                    .addComponent(CM_OO_seed_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(221, Short.MAX_VALUE))
        );

        CM_TabPanel.addTab("Other options", CM_Other_Panel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TypeOfLib_panel, 423, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(M_default_button)
                                        .addGap(18, 18, 18)
                                        .addComponent(M_CM_button))
                                    .addComponent(CM_TabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(IDGSource_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Output_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(reset_jButton3)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(run_jButton5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stop_jButton4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ClosejButton6))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(IDGSource_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TypeOfLib_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 232, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Output_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset_jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(run_jButton5)
                            .addComponent(stop_jButton4)
                            .addComponent(ClosejButton6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(M_default_button)
                            .addComponent(M_CM_button))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_TabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Bowtie1MapEditor.addTab("Bowtie1 Mapping", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(836, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(Bowtie1MapEditor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Bowtie1MapEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Bowtie1MapEditor.getAccessibleContext().setAccessibleName("Bowtie1_Map");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void Bowtie1MapEditorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_Bowtie1MapEditorComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_Bowtie1MapEditorComponentShown
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void ClosejButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClosejButton6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_ClosejButton6ActionPerformed
    
    private void run_jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_jButton5ActionPerformed
        // TODO add your handling code here:
        if (this.properties.isSet("ClassName")) {
            this.parent_workflow.workflow.updateDependance();
            programs prog=new programs(parent_workflow.workbox.getCurrentWorkflows());
            prog.Run(properties);
        }
    }//GEN-LAST:event_run_jButton5ActionPerformed
    
    private void stop_jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop_jButton4ActionPerformed
        // TODO add your handling code here:
        properties.put("Status", Config.status_nothing);
        properties.killThread();
    }//GEN-LAST:event_stop_jButton4ActionPerformed
    
    private void reset_jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_jButton3ActionPerformed
        // TODO add your handling code here:
        properties.load();             //--reload current properties from file
        this.setProperties(properties);//--Update current field
        this.display(properties);
    }//GEN-LAST:event_reset_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        properties.put("Name", this.name_jTextField1.getText());
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void name_jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_jTextField1ActionPerformed
    
    private void M_default_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_default_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_default_button);
    }//GEN-LAST:event_M_default_buttonActionPerformed
    
    private void M_CM_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_CM_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_CM_button);
        //addCMMProperties(properties);
    }//GEN-LAST:event_M_CM_buttonActionPerformed
    
    private void CM_P_mm_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_P_mm_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_P_mm_box,null);
        cleanPerformanceOptions(CM_P_mm_box.getName());
    }//GEN-LAST:event_CM_P_mm_boxActionPerformed
    
    private void CM_OO_seed_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_OO_seed_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties, CM_OO_seed_box, CM_OO_seed_value);
    }//GEN-LAST:event_CM_OO_seed_spinner_value
    
    private void CM_I_s_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_I_s_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties, CM_I_s_box, CM_I_s_value);
    }//GEN-LAST:event_CM_I_s_spinner_value
    
    private void CM_I_u_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_I_u_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties, CM_I_u_box, CM_I_u_value);
    }//GEN-LAST:event_CM_I_u_spinner_value
    
    private void CM_I_5_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_I_5_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties, CM_I_5_box, CM_I_5_value);
    }//GEN-LAST:event_CM_I_5_spinner_value
    
    private void CM_I_3_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_I_3_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties, CM_I_3_box, CM_I_3_value);
    }//GEN-LAST:event_CM_I_3_spinner_value
    
    private void CM_A_seedmms_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_A_seedmms_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_seedmms_box,CM_A_seedmms_value);
        enabledCM_R_all_box();
    }//GEN-LAST:event_CM_A_seedmms_spinner_value
    
    private void CM_A_chunkmbs_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_A_chunkmbs_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_chunkmbs_box,CM_A_chunkmbs_value);
    }//GEN-LAST:event_CM_A_chunkmbs_spinner_value
    
    private void CM_A_v_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_A_v_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_v_box,CM_A_v_value);
        enabledCM_R_all_box();
    }//GEN-LAST:event_CM_A_v_spinner_value
    
    private void CM_A_seedlen_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_A_seedlen_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_seedlen_box,CM_A_seedlen_value);
    }//GEN-LAST:event_CM_A_seedlen_spinner_value
    
    private void CM_C_snpphred_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_C_snpphred_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_C_snpphred_box,CM_C_snpphred_value);
    }//GEN-LAST:event_CM_C_snpphred_spinner_value
    
    private void CM_S_snpfrac_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_S_snpfrac_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_C_snpfrac_box,CM_C_snpfrac_value);
    }//GEN-LAST:event_CM_S_snpfrac_spinner_value
    
    private void CM_R_k_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_R_k_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_R_k_box,CM_R_k_value);
    }//GEN-LAST:event_CM_R_k_spinner_value
    
    private void CM_A_maxbts_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_maxbts_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_maxbts_box,null);
        if (Integer.parseInt(properties.get(CM_A_seedmms_box.getName()))<2) {
            CM_A_maxbts_box.setEnabled(false);
            CM_A_maxbts_box.setSelected(false);
            properties.remove(CM_A_maxbts_box.getName());
        }
    }//GEN-LAST:event_CM_A_maxbts_boxActionPerformed
    
    private void CM_A_nomaqround_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_nomaqround_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_nomaqround_box,null);
    }//GEN-LAST:event_CM_A_nomaqround_boxActionPerformed
    
    private void CM_A_nofw_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_nofw_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_nofw_box,null);
    }//GEN-LAST:event_CM_A_nofw_boxActionPerformed
    
    private void CM_I_q_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_q_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_qseq_box,null);
    }//GEN-LAST:event_CM_I_q_boxActionPerformed
    
    private void CM_I_qseq_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_qseq_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_qseq_box,null);
    }//GEN-LAST:event_CM_I_qseq_boxActionPerformed
    
    private void CM_I_solexaQuals_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_solexaQuals_boxActionPerformed
        // TODO add your handling code here:
        cleanQualBox();
        Util.boxEventSpinner(properties,CM_I_solexaQuals_box,null);
    }//GEN-LAST:event_CM_I_solexaQuals_boxActionPerformed
    
    private void CM_I_intQuals_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_intQuals_boxActionPerformed
        // TODO add your handling code here:
        cleanQualBox();
        Util.boxEventSpinner(properties,CM_I_intQuals_box,null);
    }//GEN-LAST:event_CM_I_intQuals_boxActionPerformed
    
    private void CM_I_f_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_f_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_f_box,null);
    }//GEN-LAST:event_CM_I_f_boxActionPerformed
    
    private void CM_I_r_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_r_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_r_box,null);
    }//GEN-LAST:event_CM_I_r_boxActionPerformed
    
    private void CM_I_c_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_c_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_c_box,null);
    }//GEN-LAST:event_CM_I_c_boxActionPerformed
    
    private void CM_I_phred33Quals_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_phred33Quals_boxActionPerformed
        // TODO add your handling code here:
        cleanQualBox();
        Util.boxEventSpinner(properties,CM_I_phred33Quals_box,null);
    }//GEN-LAST:event_CM_I_phred33Quals_boxActionPerformed
    
    private void CM_I_phred64Quals_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_phred64Quals_boxActionPerformed
        // TODO add your handling code here:
        cleanQualBox();
        Util.boxEventSpinner(properties,CM_I_phred64Quals_box,null);
    }//GEN-LAST:event_CM_I_phred64Quals_boxActionPerformed
    
    private void M_SE_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_SE_buttonActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,M_SE_button,null);
        if (properties.isSet(M_SE_button.getName())) {
            properties.remove(M_PE_button.getName());
        }
        peButtonFields(false);
    }//GEN-LAST:event_M_SE_buttonActionPerformed
    
    private void M_PE_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_buttonActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,M_PE_button,null);
        
        if (properties.isSet(M_PE_button.getName())) {
            peButtonFields(true);
            properties.remove(M_SE_button.getName());
            if ( !this.properties.isSet(M_PE_rf_button.getName()) &&
                    !this.properties.isSet(M_PE_ff_button.getName())
                    ){
                this.M_PE_fr_button.setSelected(true);
                properties.put(M_PE_fr_button.getName(),M_PE_fr_button.getName());
            }
            Util.boxEventSpinner(properties, M_PE_X_box, M_PE_X_value);
            Util.boxEventSpinner(properties, M_PE_I_box, M_PE_I_value);
        }

    }//GEN-LAST:event_M_PE_buttonActionPerformed
    
    private void M_PE_I_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_M_PE_I_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties, M_PE_I_box, M_PE_I_value);
    }//GEN-LAST:event_M_PE_I_spinner_value
    
    private void M_PE_X_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_M_PE_X_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties, M_PE_X_box, M_PE_X_value);
    }//GEN-LAST:event_M_PE_X_spinner_value
    
    private void M_PE_fr_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_fr_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(M_PE_ff_button.getName())) properties.remove(M_PE_ff_button.getName());
        if (properties.isSet(M_PE_rf_button.getName())) properties.remove(M_PE_rf_button.getName());
        Util.buttonEventSpinner(properties,M_PE_fr_button,null);
    }//GEN-LAST:event_M_PE_fr_buttonActionPerformed
    
    private void M_PE_rf_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_rf_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(M_PE_fr_button.getName())) properties.remove(M_PE_fr_button.getName());
        if (properties.isSet(M_PE_ff_button.getName())) properties.remove(M_PE_ff_button.getName());
        Util.buttonEventSpinner(properties,M_PE_rf_button,null);
    }//GEN-LAST:event_M_PE_rf_buttonActionPerformed
    
    private void M_PE_ff_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_ff_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(M_PE_fr_button.getName())) properties.remove(M_PE_fr_button.getName());
        if (properties.isSet(M_PE_rf_button.getName())) properties.remove(M_PE_rf_button.getName());
        Util.buttonEventSpinner(properties,M_PE_ff_button,null);
    }//GEN-LAST:event_M_PE_ff_buttonActionPerformed
    
    private void M_PE_tryhard_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_tryhard_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_tryhard_box,null);
    }//GEN-LAST:event_M_PE_tryhard_boxActionPerformed
    
    private void M_PE_pairtries_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_pairtries_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_pairtries_box,null);
    }//GEN-LAST:event_M_PE_pairtries_boxActionPerformed
    
    private void O_unPATH_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_unPATH_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_unPATH_box,null);
    }//GEN-LAST:event_O_unPATH_boxActionPerformed
    
    private void O_alPATH_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_alPATH_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_alPATH_box,null);
    }//GEN-LAST:event_O_alPATH_boxActionPerformed
    
    private void O_quiet_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_quiet_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_quiet_box,null);
    }//GEN-LAST:event_O_quiet_boxActionPerformed
    
    private void CM_P_p_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_P_p_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_P_p_box,CM_P_p_value);
    }//GEN-LAST:event_CM_P_p_spinner_value
    
    private void CM_P_shmem_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_P_shmem_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_P_shmem_box,null);
        cleanPerformanceOptions(CM_P_shmem_box.getName());
    }//GEN-LAST:event_CM_P_shmem_boxActionPerformed
    
    private void CM_P_o_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_P_o_textActionPerformed
        // TODO add your handling code here:
        //eventText(CM_P_o_text);
    }//GEN-LAST:event_CM_P_o_textActionPerformed
    
    private void CM_P_o_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CM_P_o_textFocusLost
        // TODO add your handling code here:
        //textUpdate(CM_P_o_text);
    }//GEN-LAST:event_CM_P_o_textFocusLost

    private void IDG_change_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_change_buttonActionPerformed
        // TODO add your handling code here:
        JFileChooser d;
        
        if (this.IDG_r_text.getText().isEmpty()) {
            d=new JFileChooser(config.getExplorerPath());
        } else {
            d=new JFileChooser(this.IDG_r_text.getText());
        }
        
        d.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        d.setAcceptAllFileFilterUsed(false);
        d.setMultiSelectionEnabled(false);
        int result = d.showOpenDialog(this);
        
        if (result==JFileChooser.APPROVE_OPTION) {
            File dir = d.getSelectedFile();
            
            // Set the text
            String path = dir.getAbsolutePath();
            IDG_r_text.setText(path);
            properties.put(IDG_r_text.getName(),path);
            
            // Set the combobox
            setIDGCombobox(path);
        }
    }//GEN-LAST:event_IDG_change_buttonActionPerformed
    
    private void IDG_Update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_Update_buttonActionPerformed
        // TODO add your handling code here:
        if (!IDG_r_text.getText().equals("")){
            setIDGCombobox(IDG_r_text.getText());
            IDG_selected_ComboBox.setSelectedIndex(0);
        }
    }//GEN-LAST:event_IDG_Update_buttonActionPerformed
    
    private void setIDGCombobox (String path) {
        Util.CreateDir(path);
        File dir = new File(path);
        IDG_selected_ComboBox.removeAllItems();
        IDG_selected_ComboBox.addItem("Choose_an_indexed_Genome");
        Hashtable<String,String> h = new Hashtable<String,String>();
        String s = "";
        String l = "_long";
        boolean b = false;
        for (File f:dir.listFiles()) {
            if (f.getName().matches(".*\\.\\d\\.ebwtl$")) b = true;
            if (f.getName().matches(".*\\.\\d\\.ebwtl?$")){
                s = f.getName().replaceAll("\\.\\d\\.ebwtl?","");
                s = s.replaceAll("\\.rev$","");
                if (b) s+=l;
                if (!h.containsKey(s)){
                    h.put(s,"");
                    IDG_selected_ComboBox.addItem(s);
                }
            }
        }
    }

    private void IDG_r_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_r_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDG_r_textActionPerformed

    private void IDG_selected_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_selected_ComboBoxActionPerformed
        // TODO add your handling code here:
        if (IDG_selected_ComboBox.getItemCount()>0) {
            int i    = IDG_selected_ComboBox.getSelectedIndex();
            properties.put(IDG_selected_ComboBox.getName(),Integer.toString(i));
        }
    }//GEN-LAST:event_IDG_selected_ComboBoxActionPerformed

    private void IDG_workflow_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_workflow_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(IDG_directory_button.getName())) {
            properties.remove(IDG_directory_button.getName());
        }
        Util.buttonEventSpinner(properties,IDG_workflow_button,null);
        IDG_main_panel.setVisible(false);
    }//GEN-LAST:event_IDG_workflow_buttonActionPerformed

    private void IDG_directory_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_directory_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(IDG_workflow_button.getName())) {
            properties.remove(IDG_workflow_button.getName());
        }
        Util.buttonEventSpinner(properties,IDG_directory_button,null);
        IDG_main_panel.setVisible(true);
    }//GEN-LAST:event_IDG_directory_buttonActionPerformed

    private void CM_A_norc_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_norc_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_norc_box,null);
    }//GEN-LAST:event_CM_A_norc_boxActionPerformed

    private void CM_I_solexa1DOT3Quals_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_solexa1DOT3Quals_boxActionPerformed
        // TODO add your handling code here:
        cleanQualBox();
        Util.boxEventSpinner(properties,CM_I_solexa1DOT3Quals_box,null);
    }//GEN-LAST:event_CM_I_solexa1DOT3Quals_boxActionPerformed

    private void CM_P_p_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_P_p_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_P_p_box,null);
        cleanPerformanceOptions(CM_P_p_box.getName());
    }//GEN-LAST:event_CM_P_p_boxActionPerformed

    private void O_offbase_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_offbase_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_offbase_box,O_offbase_value);
    }//GEN-LAST:event_O_offbase_boxActionPerformed

    private void O_offbase_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_O_offbase_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_offbase_box,O_offbase_value);
    }//GEN-LAST:event_O_offbase_spinner_value

    private void CM_R_maxPATH_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_R_maxPATH_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_R_maxPATH_box,null);
    }//GEN-LAST:event_CM_R_maxPATH_boxActionPerformed

    private void O_refidx_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_refidx_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_refidx_box,null);
    }//GEN-LAST:event_O_refidx_boxActionPerformed

    private void O_fullref_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_fullref_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_fullref_box,null);
    }//GEN-LAST:event_O_fullref_boxActionPerformed

    private void O_suppress_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_suppress_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_suppress_box,O_suppress_text);
        removeSamOption(true);
    }//GEN-LAST:event_O_suppress_boxActionPerformed

    private void O_SAM_sam_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_SAM_sam_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_SAM_sam_box,null);
        removeSamOption(false);
    }//GEN-LAST:event_O_SAM_sam_boxActionPerformed

    private void O_SAM_samRG_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_SAM_samRG_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_SAM_samRG_box,O_SAM_samRG_text);
        if (properties.isSet(O_SAM_samRG_box.getName())) O_SAM_samRG_text.setEnabled(true);
        else O_SAM_samRG_text.setEnabled(false);
    }//GEN-LAST:event_O_SAM_samRG_boxActionPerformed

    private void O_SAM_samNosq_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_SAM_samNosq_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_SAM_samNosq_box,null);
    }//GEN-LAST:event_O_SAM_samNosq_boxActionPerformed

    private void O_SAM_mapq_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_SAM_mapq_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_SAM_mapq_box,O_SAM_mapq_value);
        if (properties.isSet(O_SAM_mapq_box.getName())) O_SAM_mapq_value.setEnabled(true);
        else O_SAM_mapq_value.setEnabled(false);
    }//GEN-LAST:event_O_SAM_mapq_boxActionPerformed

    private void O_SAM_samNohead_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_SAM_samNohead_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_SAM_samNohead_box,null);
    }//GEN-LAST:event_O_SAM_samNohead_boxActionPerformed

    private void O_time_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_time_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_time_box,null);
    }//GEN-LAST:event_O_time_boxActionPerformed

    private void CM_R_m_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_R_m_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_R_m_box,CM_R_m_value);
        if (properties.isSet(CM_R_m_box.getName())) {
            CM_R_maxPATH_box.setEnabled(true);
        } else {
            properties.remove(CM_R_maxPATH_box.getName());
            CM_R_maxPATH_box.setSelected(false);
            CM_R_maxPATH_box.setEnabled(false);
        }
        
    }//GEN-LAST:event_CM_R_m_boxActionPerformed

    private void CM_R_m_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_R_m_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_R_m_box,CM_R_m_value);
    }//GEN-LAST:event_CM_R_m_spinner_value

    private void CM_R_best_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_R_best_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_R_best_box,null);
        if (!properties.isSet(CM_R_best_box.getName())){
            properties.remove(CM_R_strata_box.getName());
            CM_R_strata_box.setSelected(false);
            properties.remove(CM_R_MMAJ_box.getName());
            CM_R_MMAJ_box.setSelected(false);
        }
    }//GEN-LAST:event_CM_R_best_boxActionPerformed

    private void CM_R_strata_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_R_strata_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_R_strata_box,null);
    }//GEN-LAST:event_CM_R_strata_boxActionPerformed

    private void CM_R_MMAJ_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_R_MMAJ_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_R_MMAJ_box,CM_R_MMAJ_value);
    }//GEN-LAST:event_CM_R_MMAJ_boxActionPerformed

    private void CM_R_M_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_R_M_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_R_MMAJ_box,CM_R_MMAJ_value);
    }//GEN-LAST:event_CM_R_M_spinner_value

    private void CM_A_maqerr_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_A_maqerr_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_maqerr_box,CM_A_maqerr_value);
    }//GEN-LAST:event_CM_A_maqerr_spinner_value

    private void M_PE_pairtries_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_M_PE_pairtries_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_pairtries_box,M_PE_pairtries_value);
    }//GEN-LAST:event_M_PE_pairtries_spinner_value

    private void CM_C_colCqual_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_C_colCqual_boxActionPerformed
        // TODO add your handling code here:
        removeSamOption(true);
        Util.boxEventSpinner(properties,CM_C_colCqual_box,null);
    }//GEN-LAST:event_CM_C_colCqual_boxActionPerformed

    private void CM_C_colCseq_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_C_colCseq_boxActionPerformed
        // TODO add your handling code here:
        removeSamOption(true);
        Util.boxEventSpinner(properties,CM_C_colCseq_box,null);
    }//GEN-LAST:event_CM_C_colCseq_boxActionPerformed

    private void O_SAM_samRG_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_SAM_samRG_textFocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_SAM_samRG_box,O_SAM_samRG_text);
    }//GEN-LAST:event_O_SAM_samRG_textFocusLost

    private void CM_A_seedmms_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_seedmms_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_seedmms_box,CM_A_seedmms_value);
        // CM_A_maxbts_box Options
        if (Integer.parseInt(properties.get(CM_A_seedmms_box.getName()))>=2)
            CM_A_maxbts_box.setEnabled(true);
        else {
            CM_A_maxbts_box.setEnabled(false);
            properties.remove(CM_A_maxbts_box.getName());
        }
        // CM_A_seedmms_box Options and Remove -v
        if (properties.isSet(CM_A_seedmms_box.getName())) {
            CM_A_seedlen_box.setEnabled(true);
            properties.remove(CM_A_v_box);
        } else {
            CM_A_seedlen_box.setEnabled(false);
            properties.remove(CM_A_seedlen_box.getName());
        }
    }//GEN-LAST:event_CM_A_seedmms_boxActionPerformed

    private void CM_A_seedlen_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_seedlen_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_seedlen_box,CM_A_seedlen_value);
    }//GEN-LAST:event_CM_A_seedlen_boxActionPerformed

    private void CM_A_maqerr_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_maqerr_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_maqerr_box,CM_A_maqerr_value);
        enabledCM_R_all_box();
    }//GEN-LAST:event_CM_A_maqerr_boxActionPerformed

    private void CM_R_all_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_R_all_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_R_all_box,null);
    }//GEN-LAST:event_CM_R_all_boxActionPerformed

    private void O_suppress_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_suppress_textFocusLost
        // TODO add your handling code here:
        String s = O_suppress_text.getText();
        if (!s.matches("(\\d,?)*")) O_suppress_text.setText("COL like 1,3,4");
        if (s.matches(".*,$")) {
            int i = s.lastIndexOf(",");
            O_suppress_text.setText(s.substring(0,i));
        }
        Util.boxEventText(properties,O_suppress_box,O_suppress_text);
        removeSamOption(true);
    }//GEN-LAST:event_O_suppress_textFocusLost

    private void O_SAM_mapq_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_O_SAM_mapq_valueStateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_SAM_mapq_box,O_SAM_mapq_value);
    }//GEN-LAST:event_O_SAM_mapq_valueStateChanged

    private void M_PE_X_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_X_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_X_box,M_PE_X_value);
    }//GEN-LAST:event_M_PE_X_boxActionPerformed

    private void M_PE_I_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_I_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_I_box,M_PE_I_value);
    }//GEN-LAST:event_M_PE_I_boxActionPerformed

    private void CM_I_s_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_s_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_s_box,CM_I_s_value);
    }//GEN-LAST:event_CM_I_s_boxActionPerformed

    private void CM_I_u_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_u_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_u_box,CM_I_u_value);
    }//GEN-LAST:event_CM_I_u_boxActionPerformed

    private void CM_OO_seed_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_OO_seed_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_OO_seed_box,CM_OO_seed_value);
    }//GEN-LAST:event_CM_OO_seed_boxActionPerformed

    private void CM_I_5_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_5_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_5_box,CM_I_5_value);
    }//GEN-LAST:event_CM_I_5_boxActionPerformed

    private void CM_I_3_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_3_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_3_box,CM_I_3_value);
    }//GEN-LAST:event_CM_I_3_boxActionPerformed
    
    /**
     * Clean Variables in properties
     * /!\ DONT FORGET TO ADD A NAME in the design for all /!\
     * @param Save_Values
     */
    private void cleanQualBox () {
        String[] qualB = {
            CM_I_phred64Quals_box.getName(),
            CM_I_solexa1DOT3Quals_box.getName(),
            CM_I_phred33Quals_box.getName(),
            CM_I_solexaQuals_box.getName(),
            CM_I_intQuals_box.getName()
        };
        for (String b:qualB) if (properties.isSet(b)) properties.remove(b);
    }
    
    private void removeSamOption (boolean b){
        if (b) {
            properties.remove(O_SAM_sam_box.getName());
            O_SAM_sam_box.setSelected(false);
            samPanelFields(false);
            properties.remove(O_SAM_mapq_box.getName());
            properties.remove(O_SAM_samNosq_box.getName());
            properties.remove(O_SAM_samNohead_box.getName());
            properties.remove(O_SAM_samRG_box.getName());
            O_SAM_mapq_box.setSelected(false);
            O_SAM_samNosq_box.setSelected(false);
            O_SAM_samNohead_box.setSelected(false);
            O_SAM_samRG_box.setSelected(false);
            O_SAM_samRG_text.setEnabled(false);
        } else {
            samPanelFields(true);
            properties.remove(CM_C_colCqual_box.getName());
            CM_C_colCseq_box.setSelected(false);
            properties.remove(CM_C_colCseq_box.getName());
            CM_C_colCqual_box.setSelected(false);
            properties.remove(O_suppress_box.getName());
            O_suppress_box.setSelected(false);
        }
    }
    
    private void cleanPerformanceOptions(String b) {
        String[] pOp = {
            CM_P_p_box.getName(),
            CM_P_shmem_box.getName(),
            CM_P_mm_box.getName()
        };
        for (String o:pOp)
            if (!b.equals(o)) properties.remove(o);
    }
    
    private void enabledCM_R_all_box () {
        String[] sTab = {
            CM_A_v_box.getName(),
            CM_A_seedmms_box.getName(),
            CM_A_maqerr_box.getName()
        };
        boolean b = false;
        for (String s:sTab)
            if (properties.isSet(s)) b=true;
        
        if (b) CM_R_all_box.setEnabled(true);
        else CM_R_all_box.setEnabled(false);
    }
    
    
    /**
     * Save Values
     * @param Save_Values
     */
    //For Menu
    private void menuEvent(javax.swing.JRadioButton b){
        if (b==M_CM_button) {
            this.properties.put(b.getName(),b.isSelected());
            if (properties.isSet(M_default_button.getName()))
                this.properties.remove(M_default_button.getName());
        } else if (b==M_default_button) {
            this.properties.put(b.getName(),b.isSelected());
            if (properties.isSet(M_CM_button.getName()))
                this.properties.remove(M_CM_button.getName());
        }
        menuFields();
    }
    
    /*
    ***************************************************************************
    * Enable or disable fields of Options
    ***************************************************************************
    */
    
    private void menuFields(){
        if (properties.isSet(M_PE_button.getName())) {
            M_PE_Panel.setVisible(true);
            peButtonFields(true);
        } else {
            M_PE_Panel.setVisible(false);
            peButtonFields(false);
        }
        
        if (properties.isSet(IDG_directory_button.getName())) {
            IDG_main_panel.setVisible(true);
        } else IDG_main_panel.setVisible(false);
        
        if (properties.isSet(M_CM_button.getName())){
            this.M_CM_button.setSelected(true);
            this.CM_TabPanel.setSelectedIndex(0);
            this.customMappingFields(true);
        } else {
            this.customMappingFields(false);
        }
    }
    
    private void samPanelFields (boolean enabled) {
        O_SAM_panel.setEnabled(enabled);
        O_SAM_mapq_box.setEnabled(enabled);
        if (properties.isSet(O_SAM_mapq_box.getName()) && O_SAM_mapq_box.isEnabled())
             O_SAM_mapq_value.setEnabled(true);
        else O_SAM_mapq_value.setEnabled(false);
        O_SAM_samNosq_box.setEnabled(enabled);
        O_SAM_samNohead_box.setEnabled(enabled);
        O_SAM_samRG_box.setEnabled(enabled);
    }
    
    private void customMappingFields(boolean e){
        this.CM_TabPanel.setEnabled(e);
        this.CM_Other_Panel.setEnabled(e);
        this.CM_Performance_Panel.setEnabled(e);
        this.CM_Input_Panel.setEnabled(e);
        this.CM_Align_Panel.setEnabled(e);
        this.CM_Colorspace_Panel.setEnabled(e);
        
        this.CM_A_chunkmbs_box.setEnabled(e);
        if (properties.isSet(CM_A_chunkmbs_box.getName()) && e==true)
            this.CM_A_chunkmbs_value.setEnabled(true);
        else this.CM_A_chunkmbs_value.setEnabled(false);
        this.CM_A_maqerr_box.setEnabled(e);
        if (properties.isSet(CM_A_maqerr_box.getName()) && e==true)
            this.CM_A_maqerr_value.setEnabled(true);
        else this.CM_A_maqerr_value.setEnabled(false);
        this.CM_A_maxbts_box.setEnabled(e);
        this.CM_A_nofw_box.setEnabled(e);
        this.CM_A_nomaqround_box.setEnabled(e);
        this.CM_A_norc_box.setEnabled(e);
        this.CM_A_seedlen_box.setEnabled(e);
        if (properties.isSet(CM_A_seedlen_box.getName()) && e==true)
            this.CM_A_seedlen_value.setEnabled(true);
        else this.CM_A_seedlen_value.setEnabled(false);
        this.CM_A_seedmms_box.setEnabled(e);
        if (properties.isSet(CM_A_seedmms_box.getName()) && e==true)
            this.CM_A_seedmms_value.setEnabled(true);
        else this.CM_A_seedmms_value.setEnabled(false);
        this.CM_A_v_box.setEnabled(e);
        if (properties.isSet(CM_A_v_box.getName()) && e==true)
            this.CM_A_v_value.setEnabled(true);
        else this.CM_A_v_value.setEnabled(false);
        this.CM_C_colCqual_box.setEnabled(e);
        this.CM_C_colCseq_box.setEnabled(e);
        this.CM_C_colKeepends_box.setEnabled(e);
        this.CM_C_snpfrac_box.setEnabled(e);
        if (properties.isSet(CM_C_snpfrac_box.getName()) && e==true)
            this.CM_C_snpfrac_value.setEnabled(true);
        else this.CM_C_snpfrac_value.setEnabled(false);
        this.CM_C_snpphred_box.setEnabled(e);
        if (properties.isSet(CM_C_snpphred_box.getName()) && e==true)
            this.CM_C_snpphred_value.setEnabled(true);
        else this.CM_C_snpphred_value.setEnabled(false);
        this.CM_I_3_box.setEnabled(e);
        if (properties.isSet(CM_I_3_box.getName()) && e==true)
            this.CM_I_3_value.setEnabled(true);
        else this.CM_I_3_value.setEnabled(false);
        this.CM_I_5_box.setEnabled(e);
        if (properties.isSet(CM_I_5_box.getName()) && e==true)
            this.CM_I_5_value.setEnabled(true);
        else this.CM_I_5_value.setEnabled(false);
        this.CM_I_c_box.setEnabled(e);
        this.CM_I_f_box.setEnabled(e);
        this.CM_I_intQuals_box.setEnabled(e);
        this.CM_I_phred33Quals_box.setEnabled(e);
        this.CM_I_phred64Quals_box.setEnabled(e);
        this.CM_I_q_box.setEnabled(e);
        this.CM_I_qseq_box.setEnabled(e);
        this.CM_I_r_box.setEnabled(e);
        this.CM_I_s_box.setEnabled(e);
        if (properties.isSet(CM_I_s_box.getName()) && e==true)
            this.CM_I_s_value.setEnabled(true);
        else this.CM_I_s_value.setEnabled(false);
        this.CM_I_solexa1DOT3Quals_box.setEnabled(e);
        this.CM_I_solexaQuals_box.setEnabled(e);
        this.CM_I_u_box.setEnabled(e);
        if (this.properties.isSet(CM_I_u_box.getName()) && e==true)
            this.CM_I_u_value.setEnabled(true);
        else this.CM_I_u_value.setEnabled(false);
        this.CM_OO_seed_box.setEnabled(e);
        if (properties.isSet(CM_OO_seed_box.getName()) && e==true)
            this.CM_OO_seed_value.setEnabled(true);
        else this.CM_OO_seed_value.setEnabled(false);
        this.CM_P_mm_box.setEnabled(e);
        this.CM_P_p_box.setEnabled(e);
        if (properties.isSet(CM_P_p_box.getName()) && e==true)
            this.CM_P_p_value.setEnabled(true);
        else this.CM_P_p_value.setEnabled(false);
        this.CM_P_shmem_box.setEnabled(e);
        this.CM_R_MMAJ_box.setEnabled(e);
        if (properties.isSet(CM_R_MMAJ_box.getName()) && e==true)
            this.CM_R_MMAJ_value.setEnabled(true);
        else this.CM_R_MMAJ_value.setEnabled(false);
        this.CM_R_all_box.setEnabled(e);
        this.CM_R_best_box.setEnabled(e);
        this.CM_R_k_box.setEnabled(e);
        if (properties.isSet(CM_R_k_box.getName()) && e==true)
            this.CM_R_k_value.setEnabled(true);
        else this.CM_R_k_value.setEnabled(false);
        this.CM_R_m_box.setEnabled(e);
        if (properties.isSet(CM_R_m_box.getName()) && e==true)
            this.CM_R_m_value.setEnabled(true);
        else this.CM_R_m_value.setEnabled(false);
        this.CM_R_maxPATH_box.setEnabled(e);
        this.CM_R_strata_box.setEnabled(e);
        enabledCM_R_all_box();
    }
    
    private void peButtonFields(boolean enabled){
        this.M_PE_Panel.setVisible(enabled);
        this.M_PE_fr_button.setEnabled(enabled);
        this.M_PE_rf_button.setEnabled(enabled);
        this.M_PE_ff_button.setEnabled(enabled);
        this.M_PE_tryhard_box.setEnabled(enabled);
        this.M_PE_pairtries_box.setEnabled(enabled);
        this.M_PE_I_value.setEnabled(enabled);
        this.M_PE_X_value.setEnabled(enabled);
    }
    
    /*
    ***************************************************************************
    * Update Saved Properties => usp_functions
    ***************************************************************************
    */
    
    private void updateSavedProperties(workflow_properties properties) {
        // Menu Options
        this.usp_GenomeDirFields(properties);
        this.usp_PairedEndFields(properties);
        this.usp_OutputFields(properties);
        this.usp_CMFields_ValuesANDText(properties);
        this.usp_CMFields_BoxANDButtons(properties);
        this.usp_MapOptions(properties);
    }
    
    private void usp_GenomeDirFields (workflow_properties properties) {
        //Genome Directory Options
        if (properties.isSet(IDG_directory_button.getName())) {
            this.IDG_directory_button.setSelected(true);
            this.IDG_main_panel.setVisible(true);
        } else if (properties.isSet(IDG_workflow_button.getName())) {
            this.IDG_workflow_button.setSelected(true);
            this.IDG_main_panel.setVisible(false);
        }
        if (properties.isSet(IDG_largeIndex_box.getName())) {
            this.IDG_largeIndex_box.setSelected(true);
        }
        if (properties.isSet(IDG_r_text.getName())) {
            this.IDG_r_text.setText(properties.get(IDG_r_text));
            
        }
    }
    
    private void usp_PairedEndFields(workflow_properties properties) {
        //Paired-end options
        if (this.properties.isSet(M_SE_button.getName())){
            this.M_SE_button.setSelected(true);
            this.peButtonFields(false);
        } else if (this.properties.isSet(M_PE_button.getName())){
            this.M_PE_button.setSelected(true);
            this.peButtonFields(true);
        }
        if (this.properties.isSet(M_PE_fr_button.getName())) {
            this.M_PE_fr_button.setSelected(true);
        } else if (this.properties.isSet(M_PE_rf_button.getName())){
            this.M_PE_rf_button.setSelected(true);
        } else if (this.properties.isSet(M_PE_ff_button.getName())){
            this.M_PE_ff_button.setSelected(true);
        }
        if (this.properties.isSet(M_PE_tryhard_box.getName())){
            this.M_PE_tryhard_box.setSelected(true);
        }
        if (this.properties.isSet(M_PE_X_value.getName())){
            this.M_PE_X_value.setValue(Integer.parseInt(this.properties.get(M_PE_X_value.getName())));
        }
        if (this.properties.isSet(M_PE_I_value.getName())){
            this.M_PE_I_value.setValue(Integer.parseInt(this.properties.get(M_PE_I_value.getName())));
        }
        
    }
    
    private void usp_OutputFields (workflow_properties properties) {
        //Output Options
        if (properties.isSet(O_SAM_sam_box)){
            O_SAM_sam_box.setSelected(true);
            if (properties.isSet(O_SAM_mapq_box.getName()))       O_SAM_mapq_box.setSelected(true);
            if (properties.isSet(O_SAM_samNosq_box.getName()))    O_SAM_samNosq_box.setSelected(true);
            if (properties.isSet(O_SAM_samNohead_box.getName()))  O_SAM_samNohead_box.setSelected(true);
            if (properties.isSet(O_SAM_samRG_box.getName()))      O_SAM_samRG_box.setSelected(true);
            samPanelFields(true);
        } else {
            O_SAM_mapq_box.setSelected(false);
            O_SAM_samNosq_box.setSelected(false);
            O_SAM_samNohead_box.setSelected(false);
            O_SAM_samRG_box.setSelected(false);
            properties.remove(O_SAM_mapq_box.getName());
            properties.remove(O_SAM_samNosq_box.getName());
            properties.remove(O_SAM_samNohead_box.getName());
            properties.remove(O_SAM_samRG_box.getName());
            samPanelFields(false);
        }
        
        if (properties.isSet(O_alPATH_box.getName()))         O_alPATH_box.setSelected(true);
        if (properties.isSet(O_fullref_box.getName()))        O_fullref_box.setSelected(true);
        if (properties.isSet(O_quiet_box.getName()))          O_quiet_box.setSelected(true);
        if (properties.isSet(O_refidx_box.getName()))         O_refidx_box.setSelected(true);
        if (properties.isSet(O_time_box.getName()))           O_time_box.setSelected(true);
        if (properties.isSet(O_unPATH_box.getName()))         O_unPATH_box.setSelected(true);
        
        if (properties.isSet(O_SAM_samRG_box)){
            O_SAM_samRG_box.setSelected(true);
            O_SAM_samRG_text.setEnabled(true);
        } else O_SAM_samRG_text.setEnabled(false);
        
        if (properties.isSet(O_SAM_samRG_text)) {
            O_SAM_samRG_text.setText(properties.get(O_SAM_samRG_text.getName()));
        }
        
        if (properties.isSet(O_suppress_box)){
            O_suppress_box.setSelected(true);
            O_suppress_text.setEnabled(true);
        } else O_suppress_text.setEnabled(false);
        
        if (properties.isSet(O_suppress_text)) {
            O_suppress_text.setText(properties.get(O_suppress_box.getName()));
        }
        
        if (properties.isSet(O_offbase_box)) {
            O_offbase_box.setSelected(true);
            O_offbase_value.setEnabled(true);
        } else O_offbase_value.setEnabled(false);
        
        if (properties.isSet(O_offbase_value)) {
            O_offbase_value.setValue(Integer.parseInt(properties.get(O_offbase_box.getName())));
        }
        
    }
    
    private void usp_MapOptions(workflow_properties properties) {
        // Mapping properties saved
        if (properties.isSet(M_CM_button.getName())) {
            M_CM_button.setSelected(true);
        } else {
            M_default_button.setSelected(true);
            properties.put(M_default_button.getName(),M_default_button.isSelected());
        }
    }
    
    private void usp_CMFields_ValuesANDText(workflow_properties properties) {
        if (this.properties.isSet(CM_A_chunkmbs_value.getName())){
            this.CM_A_chunkmbs_value.setValue(Integer.parseInt(this.properties.get(CM_A_chunkmbs_value.getName())));
            this.CM_A_chunkmbs_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_A_maqerr_value.getName())){
            this.CM_A_maqerr_value.setValue(Integer.parseInt(this.properties.get(CM_A_maqerr_value.getName())));
            this.CM_A_maqerr_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_A_seedlen_value.getName())){
            this.CM_A_seedlen_value.setValue(Integer.parseInt(this.properties.get(CM_A_seedlen_value.getName())));
            this.CM_A_seedlen_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_A_seedmms_value.getName())){
            this.CM_A_seedmms_value.setValue(Integer.parseInt(this.properties.get(CM_A_seedmms_value.getName())));
            this.CM_A_seedmms_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_A_v_value.getName())){
            this.CM_A_v_value.setValue(Integer.parseInt(this.properties.get(CM_A_v_value.getName())));
            this.CM_A_v_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_C_snpfrac_value.getName())){
            this.CM_C_snpfrac_value.setValue(Double.parseDouble(this.properties.get(CM_C_snpfrac_value.getName())));
            this.CM_C_snpfrac_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_C_snpphred_value.getName())){
            this.CM_C_snpphred_value.setValue(Integer.parseInt(this.properties.get(CM_C_snpphred_value.getName())));
            this.CM_C_snpphred_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_I_3_value.getName())){
            this.CM_I_3_value.setValue(Integer.parseInt(this.properties.get(CM_I_3_value.getName())));
            this.CM_I_3_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_I_5_value.getName())){
            this.CM_I_5_value.setValue(Integer.parseInt(this.properties.get(CM_I_5_value.getName())));
            this.CM_I_5_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_I_s_value.getName())){
            this.CM_I_s_value.setValue(Integer.parseInt(this.properties.get(CM_I_s_value.getName())));
            this.CM_I_s_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_I_u_value.getName())){
            this.CM_I_u_value.setValue(Integer.parseInt(this.properties.get(CM_I_u_value.getName())));
            this.CM_I_u_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_OO_seed_value.getName())){
            this.CM_OO_seed_value.setValue(Integer.parseInt(this.properties.get(CM_OO_seed_value.getName())));
            this.CM_OO_seed_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_P_p_value.getName())){
            this.CM_P_p_value.setValue(Integer.parseInt(this.properties.get(CM_P_p_value.getName())));
            this.CM_P_p_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_R_MMAJ_value.getName())){
            this.CM_R_MMAJ_value.setValue(Integer.parseInt(this.properties.get(CM_R_MMAJ_value.getName())));
            this.CM_R_MMAJ_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_R_k_value.getName())){
            this.CM_R_k_value.setValue(Integer.parseInt(this.properties.get(CM_R_k_value.getName())));
            this.CM_R_k_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_R_m_value.getName())){
            this.CM_R_m_value.setValue(Integer.parseInt(this.properties.get(CM_R_m_value.getName())));
            this.CM_R_m_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_P_o_text.getName())){
            this.CM_P_o_text.setText(this.properties.get(CM_P_o_text.getName()));
            this.CM_P_o_text.setEnabled(false);
        }
    }
    
    private void usp_CMFields_BoxANDButtons(workflow_properties properties) {
        if (this.properties.isSet(CM_A_chunkmbs_box.getName())){
            this.CM_A_chunkmbs_box.setSelected(true);
            this.CM_A_chunkmbs_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_A_maqerr_box.getName())){
            this.CM_A_maqerr_box.setSelected(true);
            this.CM_A_maqerr_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_A_maxbts_box.getName())){
            this.CM_A_maxbts_box.setSelected(true);
        }
        if (this.properties.isSet(CM_A_nofw_box.getName())){
            this.CM_A_nofw_box.setSelected(true);
        }
        if (this.properties.isSet(CM_A_nomaqround_box.getName())){
            this.CM_A_nomaqround_box.setSelected(true);
        }
        if (this.properties.isSet(CM_A_norc_box.getName())){
            this.CM_A_norc_box.setSelected(true);
        }
        if (this.properties.isSet(CM_A_seedlen_box.getName())){
            this.CM_A_seedlen_box.setSelected(true);
            this.CM_A_seedlen_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_A_seedmms_box.getName())){
            this.CM_A_seedmms_box.setSelected(true);
            this.CM_A_seedmms_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_A_v_box.getName())){
            this.CM_A_v_box.setSelected(true);
            this.CM_A_v_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_C_colCqual_box.getName())){
            this.CM_C_colCqual_box.setSelected(true);
        }
        if (this.properties.isSet(CM_C_colCseq_box.getName())){
            this.CM_C_colCseq_box.setSelected(true);
        }
        if (this.properties.isSet(CM_C_colKeepends_box.getName())){
            this.CM_C_colKeepends_box.setSelected(true);
        }
        if (this.properties.isSet(CM_C_snpfrac_box.getName())){
            this.CM_C_snpfrac_box.setSelected(true);
            this.CM_C_snpfrac_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_C_snpphred_box.getName())){
            this.CM_C_snpphred_box.setSelected(true);
            this.CM_C_snpphred_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_I_3_box.getName())){
            this.CM_I_3_box.setSelected(true);
            this.CM_I_3_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_I_5_box.getName())){
            this.CM_I_5_box.setSelected(true);
            this.CM_I_5_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_I_c_box.getName())){
            this.CM_I_c_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_f_box.getName())){
            this.CM_I_f_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_intQuals_box.getName())){
            this.CM_I_intQuals_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_phred33Quals_box.getName())){
            this.CM_I_phred33Quals_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_phred64Quals_box.getName())){
            this.CM_I_phred64Quals_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_q_box.getName())){
            this.CM_I_q_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_qseq_box.getName())){
            this.CM_I_qseq_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_r_box.getName())){
            this.CM_I_r_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_s_box.getName())){
            this.CM_I_s_box.setSelected(true);
            this.CM_I_s_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_I_solexa1DOT3Quals_box.getName())){
            this.CM_I_solexa1DOT3Quals_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_solexaQuals_box.getName())){
            this.CM_I_solexaQuals_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_u_box.getName())){
            this.CM_I_u_box.setSelected(true);
            this.CM_I_u_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_OO_seed_box.getName())){
            this.CM_OO_seed_box.setSelected(true);
            this.CM_OO_seed_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_P_mm_box.getName())){
            this.CM_P_mm_box.setSelected(true);
        }
        if (this.properties.isSet(CM_P_p_box.getName())){
            this.CM_P_p_box.setSelected(true);
            this.CM_P_p_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_P_shmem_box.getName())){
            this.CM_P_shmem_box.setSelected(true);
        }
        if (this.properties.isSet(CM_R_MMAJ_box.getName())){
            this.CM_R_MMAJ_box.setSelected(true);
            this.CM_R_MMAJ_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_R_all_box.getName())){
            this.CM_R_all_box.setSelected(true);
        }
        if (this.properties.isSet(CM_R_best_box.getName())){
            this.CM_R_best_box.setSelected(true);
        }
        if (this.properties.isSet(CM_R_k_box.getName())){
            this.CM_R_k_box.setSelected(true);
            this.CM_R_k_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_R_m_box.getName())){
            this.CM_R_m_box.setSelected(true);
            this.CM_R_m_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_R_maxPATH_box.getName())){
            this.CM_R_maxPATH_box.setSelected(true);
        }
        if (this.properties.isSet(CM_R_strata_box.getName())){
            this.CM_R_strata_box.setSelected(true);
        }
    }
    
    /**
     * Set the configuration properties for this object
     */
    
    public void display(workflow_properties properties) {
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // Set position
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
                (screenSize.height-d.height)/2);
        
        // Set the program properties
        this.setProperties(properties);
        
        // Update Saved Properties => usp
        this.updateSavedProperties(properties);
        
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }
    
    /**
     * Set Properties
     */
    
    public void setProperties(workflow_properties properties) {
        this.properties=properties;
        setTitle(properties.getName());
        //if (this.properties.isSet("Description")) this.Notice.setText(properties.get("Description"));
        
        // Properties Default Options
        this.defaultPgrmValues(properties);
        
        // Set the menu
        this.menuFields();
    }
    
    public void setProperties(String filename, String path) {
        workflow_properties tmp=new workflow_properties();
        tmp.load(filename, path);
        this.properties=tmp;
        setTitle(properties.getName());
    }
    
    /**
     * Set With default program values present in properties file
     */
    
    private void defaultPgrmValues(workflow_properties properties) {
        if ( !this.properties.isSet(M_CM_button.getName()) ||
             !this.properties.isSet(M_default_button.getName())) {
            Util.getDefaultPgrmValues(properties,false);
        }
    }
    
    public void saveImage(String filename) {
        BufferedImage bi;
        try {
            bi = new Robot().createScreenCapture(this.getBounds());
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
        } catch (Exception ex) {
            Config.log("Unable to save "+filename+" dialog image");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Bowtie1MapEditor;
    private javax.swing.JCheckBox CM_A_chunkmbs_box;
    private javax.swing.JSpinner CM_A_chunkmbs_value;
    private javax.swing.JCheckBox CM_A_maqerr_box;
    private javax.swing.JSpinner CM_A_maqerr_value;
    private javax.swing.JCheckBox CM_A_maxbts_box;
    private javax.swing.JCheckBox CM_A_nofw_box;
    private javax.swing.JCheckBox CM_A_nomaqround_box;
    private javax.swing.JCheckBox CM_A_norc_box;
    private javax.swing.JCheckBox CM_A_seedlen_box;
    private javax.swing.JSpinner CM_A_seedlen_value;
    private javax.swing.JCheckBox CM_A_seedmms_box;
    private javax.swing.JSpinner CM_A_seedmms_value;
    private javax.swing.JCheckBox CM_A_v_box;
    private javax.swing.JSpinner CM_A_v_value;
    private javax.swing.JPanel CM_Align_Panel;
    private javax.swing.JCheckBox CM_C_colCqual_box;
    private javax.swing.JCheckBox CM_C_colCseq_box;
    private javax.swing.JCheckBox CM_C_colKeepends_box;
    private javax.swing.JCheckBox CM_C_snpfrac_box;
    private javax.swing.JSpinner CM_C_snpfrac_value;
    private javax.swing.JCheckBox CM_C_snpphred_box;
    private javax.swing.JSpinner CM_C_snpphred_value;
    private javax.swing.JPanel CM_Colorspace_Panel;
    private javax.swing.JCheckBox CM_I_3_box;
    private javax.swing.JSpinner CM_I_3_value;
    private javax.swing.JCheckBox CM_I_5_box;
    private javax.swing.JSpinner CM_I_5_value;
    private javax.swing.JPanel CM_I_TOI_panel;
    private javax.swing.JCheckBox CM_I_c_box;
    private javax.swing.JCheckBox CM_I_f_box;
    private javax.swing.JCheckBox CM_I_intQuals_box;
    private javax.swing.JCheckBox CM_I_phred33Quals_box;
    private javax.swing.JCheckBox CM_I_phred64Quals_box;
    private javax.swing.JCheckBox CM_I_q_box;
    private javax.swing.JCheckBox CM_I_qseq_box;
    private javax.swing.JCheckBox CM_I_r_box;
    private javax.swing.JCheckBox CM_I_s_box;
    private javax.swing.JSpinner CM_I_s_value;
    private javax.swing.JCheckBox CM_I_solexa1DOT3Quals_box;
    private javax.swing.JCheckBox CM_I_solexaQuals_box;
    private javax.swing.JCheckBox CM_I_u_box;
    private javax.swing.JSpinner CM_I_u_value;
    private javax.swing.JPanel CM_Input_Panel;
    private javax.swing.JCheckBox CM_OO_seed_box;
    private javax.swing.JSpinner CM_OO_seed_value;
    private javax.swing.ButtonGroup CM_O_TypeQuals_Buttons;
    private javax.swing.JPanel CM_Other_Panel;
    private javax.swing.ButtonGroup CM_P_Buttons;
    private javax.swing.JCheckBox CM_P_mm_box;
    private javax.swing.JLabel CM_P_o_label;
    private javax.swing.JTextField CM_P_o_text;
    private javax.swing.JCheckBox CM_P_p_box;
    private javax.swing.JSpinner CM_P_p_value;
    private javax.swing.JCheckBox CM_P_shmem_box;
    private javax.swing.JPanel CM_Performance_Panel;
    private javax.swing.JPanel CM_R_BEST_OtherOptions_Panel;
    private javax.swing.JCheckBox CM_R_MMAJ_box;
    private javax.swing.JSpinner CM_R_MMAJ_value;
    private javax.swing.JCheckBox CM_R_all_box;
    private javax.swing.JCheckBox CM_R_best_box;
    private javax.swing.JCheckBox CM_R_k_box;
    private javax.swing.JSpinner CM_R_k_value;
    private javax.swing.JCheckBox CM_R_m_box;
    private javax.swing.JSpinner CM_R_m_value;
    private javax.swing.JCheckBox CM_R_maxPATH_box;
    private javax.swing.JCheckBox CM_R_strata_box;
    private javax.swing.JPanel CM_Repor_Panel;
    private javax.swing.JTabbedPane CM_TabPanel;
    private javax.swing.JButton ClosejButton6;
    private javax.swing.JPanel IDGSource_Panel;
    private javax.swing.JButton IDG_Update_button;
    private javax.swing.JButton IDG_change_button;
    private javax.swing.JRadioButton IDG_directory_button;
    private javax.swing.JCheckBox IDG_largeIndex_box;
    private javax.swing.JPanel IDG_main_panel;
    private javax.swing.JTextField IDG_r_text;
    private javax.swing.JComboBox IDG_selected_ComboBox;
    private javax.swing.ButtonGroup IDG_source_buttons;
    private javax.swing.JRadioButton IDG_workflow_button;
    private javax.swing.ButtonGroup M_Buttons;
    private javax.swing.JRadioButton M_CM_button;
    private javax.swing.JCheckBox M_PE_I_box;
    private javax.swing.JSpinner M_PE_I_value;
    private javax.swing.JPanel M_PE_Panel;
    private javax.swing.JCheckBox M_PE_X_box;
    private javax.swing.JSpinner M_PE_X_value;
    private javax.swing.JRadioButton M_PE_button;
    private javax.swing.JRadioButton M_PE_ff_button;
    private javax.swing.JRadioButton M_PE_fr_button;
    private javax.swing.JCheckBox M_PE_pairtries_box;
    private javax.swing.JSpinner M_PE_pairtries_value;
    private javax.swing.JRadioButton M_PE_rf_button;
    private javax.swing.ButtonGroup M_PE_stream_buttons;
    private javax.swing.JCheckBox M_PE_tryhard_box;
    private javax.swing.ButtonGroup M_PE_type_buttons;
    private javax.swing.JRadioButton M_SE_button;
    private javax.swing.JRadioButton M_default_button;
    private javax.swing.JCheckBox O_SAM_mapq_box;
    private javax.swing.JSpinner O_SAM_mapq_value;
    private javax.swing.JPanel O_SAM_panel;
    private javax.swing.JCheckBox O_SAM_samNohead_box;
    private javax.swing.JCheckBox O_SAM_samNosq_box;
    private javax.swing.JCheckBox O_SAM_samRG_box;
    private javax.swing.JTextField O_SAM_samRG_text;
    private javax.swing.JCheckBox O_SAM_sam_box;
    private javax.swing.JCheckBox O_alPATH_box;
    private javax.swing.JCheckBox O_fullref_box;
    private javax.swing.JCheckBox O_offbase_box;
    private javax.swing.JSpinner O_offbase_value;
    private javax.swing.JCheckBox O_quiet_box;
    private javax.swing.JCheckBox O_refidx_box;
    private javax.swing.JCheckBox O_suppress_box;
    private javax.swing.JTextField O_suppress_text;
    private javax.swing.JCheckBox O_time_box;
    private javax.swing.JCheckBox O_unPATH_box;
    private javax.swing.JPanel Output_Panel;
    private javax.swing.JPanel Stream_Orientation_Panel;
    private javax.swing.JPanel TypeOfLib_panel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField name_jTextField1;
    private javax.swing.JButton reset_jButton3;
    private javax.swing.JButton run_jButton5;
    private javax.swing.JButton stop_jButton4;
    // End of variables declaration//GEN-END:variables
}
