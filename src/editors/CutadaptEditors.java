/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

package editors;

import configuration.Config;
import configuration.Util;
import editor.EditorInterface;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.nio.file.Path;
import java.util.Vector;
import java.util.List;
import java.util.ArrayList;
import java.util.Hashtable;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import program.*;
import workflows.armadillo_workflow;
import workflows.workflow_properties;
import workflows.workflow_properties_dictionnary;

/**
 *
 * @author Jérémy Goimard
 * @date Sept 2015
 *
 * If a button, box is used with spinner or text field,
 * the choice was made to use the value name because of the updated content function
 *
 * QUESTIONS STILL OPEN WITH -b // FIXED IN CHECK Requierments
 *
 */

public class CutadaptEditors extends javax.swing.JDialog implements EditorInterface  {
    
    /**
     * Creates new form MaqEditors
     */
    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected="";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow parent_workflow;
    
    public final String defaultNameString=" Name";
    static final boolean default_map=true;
    
    /////////////////////////////////////////////////////////////////////////
    /// Default Options
    
    public CutadaptEditors(java.awt.Frame parent, armadillo_workflow parent_workflow) {
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        CutadaptEditor = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        name_jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        reset_jButton3 = new javax.swing.JButton();
        stop_jButton4 = new javax.swing.JButton();
        run_jButton5 = new javax.swing.JButton();
        ClosejButton6 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        BasicOptions_panel = new javax.swing.JPanel();
        BO_a_box = new javax.swing.JCheckBox();
        BO_ANCH_a_box = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        BO_a_text = new javax.swing.JTextField();
        BO_g_box = new javax.swing.JCheckBox();
        BO_ANCH_g_box = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        BO_g_text = new javax.swing.JTextField();
        BO_anywhere_box = new javax.swing.JCheckBox();
        BO_anywhere_text = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        BO_e_box = new javax.swing.JCheckBox();
        BO_e_value = new javax.swing.JSpinner();
        BO_noIndels_box = new javax.swing.JCheckBox();
        BO_overlap_box = new javax.swing.JCheckBox();
        BO_overlap_value = new javax.swing.JSpinner();
        BO_times_box = new javax.swing.JCheckBox();
        BO_times_value = new javax.swing.JSpinner();
        BO_matchReadWildcards_box = new javax.swing.JCheckBox();
        BO_N_box = new javax.swing.JCheckBox();
        ReadsModifications_panel = new javax.swing.JPanel();
        RM_trimN_box = new javax.swing.JCheckBox();
        RM_cut_box = new javax.swing.JCheckBox();
        RM_cut_value = new javax.swing.JSpinner();
        RM_trimQualities_box = new javax.swing.JCheckBox();
        RM_qualityCutoff_text = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        RM_qualityBase33_box = new javax.swing.JCheckBox();
        RM_qualityBase64_box = new javax.swing.JCheckBox();
        RM_prefix_box = new javax.swing.JCheckBox();
        RM_suffix_box = new javax.swing.JCheckBox();
        RM_stripSuffix_box = new javax.swing.JCheckBox();
        RM_colorspace_box = new javax.swing.JCheckBox();
        RM_COLORSPACE_Options_panel = new javax.swing.JPanel();
        RM_C_doubleEncode_box = new javax.swing.JCheckBox();
        RM_C_bwa_box = new javax.swing.JCheckBox();
        RM_C_trimPrimer_box = new javax.swing.JCheckBox();
        RM_C_stripF3_box = new javax.swing.JCheckBox();
        RM_lengthTag_box = new javax.swing.JCheckBox();
        RM_lengthTag_text = new javax.swing.JTextField();
        RM_noZeroCap_box = new javax.swing.JCheckBox();
        RM_zeroCap_box = new javax.swing.JCheckBox();
        RM_prefix_text = new javax.swing.JTextField();
        RM_suffix_text = new javax.swing.JTextField();
        RM_stripSuffix_text = new javax.swing.JTextField();
        Filtering_panel = new javax.swing.JPanel();
        F_noTrim_box = new javax.swing.JCheckBox();
        F_discardUntrimmed_box = new javax.swing.JCheckBox();
        F_discard_box = new javax.swing.JCheckBox();
        F_minimumLength_box = new javax.swing.JCheckBox();
        F_minimumLength_value = new javax.swing.JSpinner();
        F_maximumLength_box = new javax.swing.JCheckBox();
        F_maximumLength_value = new javax.swing.JSpinner();
        F_maxN_box = new javax.swing.JCheckBox();
        F_maskAdapter_box = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        F_maxN_text = new javax.swing.JTextField();
        Output_panel = new javax.swing.JPanel();
        O_tooShortOutput_box = new javax.swing.JCheckBox();
        O_tooLongOutput_box = new javax.swing.JCheckBox();
        O_untrimmedOutput_box = new javax.swing.JCheckBox();
        O_infoFile_box = new javax.swing.JCheckBox();
        O_restFile_box = new javax.swing.JCheckBox();
        O_wildcardFile_box = new javax.swing.JCheckBox();
        O_quiet_box = new javax.swing.JCheckBox();
        O_name_box = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("?");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        CutadaptEditor.setPreferredSize(new java.awt.Dimension(427, 596));
        CutadaptEditor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                CutadaptEditorComponentShown(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(428, 521));

        jPanel2.setPreferredSize(new java.awt.Dimension(414, 244));

        jButton2.setText("Rename");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        name_jTextField1.setText("Cutadapt");
        name_jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        reset_jButton3.setText("Reset default value");
        reset_jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_jButton3ActionPerformed(evt);
            }
        });

        stop_jButton4.setText("Stop");
        stop_jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop_jButton4ActionPerformed(evt);
            }
        });

        run_jButton5.setText("Run");
        run_jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_jButton5ActionPerformed(evt);
            }
        });

        ClosejButton6.setText("Close");
        ClosejButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClosejButton6ActionPerformed(evt);
            }
        });

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(386, 479));

        BO_a_box.setText("--adapter/-a");
        BO_a_box.setName("BO_a_box"); // NOI18N
        BO_a_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_a_boxActionPerformed(evt);
            }
        });

        BO_ANCH_a_box.setText("anchored -a");
        BO_ANCH_a_box.setName("BO_ANCH_a_box"); // NOI18N
        BO_ANCH_a_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_ANCH_a_boxActionPerformed(evt);
            }
        });

        jLabel2.setText("a sequence");

        BO_a_text.setName("BO_a_text"); // NOI18N
        BO_a_text.setPreferredSize(new java.awt.Dimension(192, 27));
        BO_a_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                BO_a_textFocusLost(evt);
            }
        });
        BO_a_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_a_textActionPerformed(evt);
            }
        });

        BO_g_box.setText("--front/-g");
        BO_g_box.setName("BO_g_box"); // NOI18N
        BO_g_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_g_boxActionPerformed(evt);
            }
        });

        BO_ANCH_g_box.setText("anchored -g");
        BO_ANCH_g_box.setName("BO_ANCH_g_box"); // NOI18N
        BO_ANCH_g_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_ANCH_g_boxActionPerformed(evt);
            }
        });

        jLabel3.setText("g sequence");

        BO_g_text.setName("BO_g_text"); // NOI18N
        BO_g_text.setPreferredSize(new java.awt.Dimension(192, 27));
        BO_g_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                BO_g_textFocusLost(evt);
            }
        });
        BO_g_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_g_textActionPerformed(evt);
            }
        });

        BO_anywhere_box.setText("--anywhere/-b");
        BO_anywhere_box.setName("BO_anywhere_box"); // NOI18N
        BO_anywhere_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_anywhere_boxActionPerformed(evt);
            }
        });

        BO_anywhere_text.setName("BO_anywhere_text"); // NOI18N
        BO_anywhere_text.setPreferredSize(new java.awt.Dimension(192, 27));
        BO_anywhere_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                BO_anywhere_textFocusLost(evt);
            }
        });
        BO_anywhere_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_anywhere_textActionPerformed(evt);
            }
        });

        jLabel9.setText("b sequence");

        BO_e_box.setText("-e");
        BO_e_box.setName("BO_e_box"); // NOI18N
        BO_e_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_e_boxActionPerformed(evt);
            }
        });

        BO_e_value.setModel(new javax.swing.SpinnerNumberModel(0.1d, 0.0d, 1.0d, 0.1d));
        BO_e_value.setName("BO_e_value"); // NOI18N
        BO_e_value.setPreferredSize(new java.awt.Dimension(118, 28));
        BO_e_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BO_e_valueStateChanged(evt);
            }
        });

        BO_noIndels_box.setText("--no-indels");
        BO_noIndels_box.setName("BO_noIndels_box"); // NOI18N
        BO_noIndels_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_noIndels_boxActionPerformed(evt);
            }
        });

        BO_overlap_box.setText("--overlap/-O");
        BO_overlap_box.setName("BO_overlap_box"); // NOI18N
        BO_overlap_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_overlap_boxActionPerformed(evt);
            }
        });

        BO_overlap_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(3), null, Integer.valueOf(1)));
        BO_overlap_value.setName("BO_overlap_value"); // NOI18N
        BO_overlap_value.setPreferredSize(new java.awt.Dimension(118, 28));
        BO_overlap_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BO_overlap_valueStateChanged(evt);
            }
        });

        BO_times_box.setText("--times/-n");
        BO_times_box.setName("BO_times_box"); // NOI18N
        BO_times_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_times_boxActionPerformed(evt);
            }
        });

        BO_times_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        BO_times_value.setName("BO_times_value"); // NOI18N
        BO_times_value.setPreferredSize(new java.awt.Dimension(118, 28));
        BO_times_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BO_times_valueStateChanged(evt);
            }
        });

        BO_matchReadWildcards_box.setText("--match-read-wildcards");
        BO_matchReadWildcards_box.setName("BO_matchReadWildcards_box"); // NOI18N
        BO_matchReadWildcards_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_matchReadWildcards_boxActionPerformed(evt);
            }
        });

        BO_N_box.setText("--no-match-adapter-wildcards/-N");
        BO_N_box.setName("BO_N_box"); // NOI18N
        BO_N_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BO_N_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BasicOptions_panelLayout = new javax.swing.GroupLayout(BasicOptions_panel);
        BasicOptions_panel.setLayout(BasicOptions_panelLayout);
        BasicOptions_panelLayout.setHorizontalGroup(
            BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BasicOptions_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BasicOptions_panelLayout.createSequentialGroup()
                        .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BO_matchReadWildcards_box)
                            .addComponent(BO_N_box)
                            .addGroup(BasicOptions_panelLayout.createSequentialGroup()
                                .addComponent(BO_a_box)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BO_ANCH_a_box))
                            .addComponent(BO_anywhere_box)
                            .addGroup(BasicOptions_panelLayout.createSequentialGroup()
                                .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BO_overlap_box)
                                    .addComponent(BO_times_box))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BO_times_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BO_overlap_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(BasicOptions_panelLayout.createSequentialGroup()
                        .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BasicOptions_panelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BO_a_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BasicOptions_panelLayout.createSequentialGroup()
                                .addComponent(BO_g_box)
                                .addGap(6, 6, 6)
                                .addComponent(BO_ANCH_g_box))
                            .addGroup(BasicOptions_panelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BO_g_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BasicOptions_panelLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BO_anywhere_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BO_noIndels_box)
                            .addGroup(BasicOptions_panelLayout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(BO_e_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BO_e_box))
                        .addGap(0, 81, Short.MAX_VALUE))))
        );
        BasicOptions_panelLayout.setVerticalGroup(
            BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BasicOptions_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BO_a_box)
                    .addComponent(BO_ANCH_a_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(BO_a_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BO_g_box)
                    .addComponent(BO_ANCH_g_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(BO_g_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BO_anywhere_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BO_anywhere_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BO_e_box)
                    .addComponent(BO_e_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BO_noIndels_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BO_overlap_box)
                    .addComponent(BO_overlap_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BasicOptions_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BO_times_box)
                    .addComponent(BO_times_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BO_matchReadWildcards_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BO_N_box)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        BO_e_box.getAccessibleContext().setAccessibleDescription("error tolerance is adjusted by specifying a maximum error rate 0.1 by default");
        BO_noIndels_box.getAccessibleContext().setAccessibleDescription("disallow insertions and deletions entirely");
        BO_overlap_box.getAccessibleContext().setAccessibleDescription("minimum overlap length Default 3");
        BO_times_value.getAccessibleContext().setAccessibleDescription("--times or -n\tsearch for all the given adapter sequences repeatedly, min 1, --times=2 or -n 2");

        jTabbedPane1.addTab("    Basic Options   ", BasicOptions_panel);

        RM_trimN_box.setText("--trim-n");
        RM_trimN_box.setName("RM_trimN_box"); // NOI18N
        RM_trimN_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_trimN_boxActionPerformed(evt);
            }
        });

        RM_cut_box.setText("--cut/-u");
        RM_cut_box.setName("RM_cut_box"); // NOI18N
        RM_cut_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_cut_boxActionPerformed(evt);
            }
        });

        RM_cut_value.setModel(new javax.swing.SpinnerNumberModel());
        RM_cut_value.setName("RM_cut_value"); // NOI18N
        RM_cut_value.setPreferredSize(new java.awt.Dimension(100, 28));
        RM_cut_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                RM_cut_valueStateChanged(evt);
            }
        });

        RM_trimQualities_box.setText("--quality-cutoff/-q");
        RM_trimQualities_box.setName("RM_trimQualities_box"); // NOI18N
        RM_trimQualities_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_trimQualities_boxActionPerformed(evt);
            }
        });

        RM_qualityCutoff_text.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        RM_qualityCutoff_text.setText("15,0");
        RM_qualityCutoff_text.setName("RM_qualityCutoff_text"); // NOI18N
        RM_qualityCutoff_text.setPreferredSize(new java.awt.Dimension(100, 27));
        RM_qualityCutoff_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RM_qualityCutoff_textFocusLost(evt);
            }
        });
        RM_qualityCutoff_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_qualityCutoff_textActionPerformed(evt);
            }
        });

        jLabel5.setText("phred --quality-base=");

        RM_qualityBase33_box.setText("33");
        RM_qualityBase33_box.setName("RM_qualityBase33_box"); // NOI18N
        RM_qualityBase33_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_qualityBase33_boxActionPerformed(evt);
            }
        });

        RM_qualityBase64_box.setText("64");
        RM_qualityBase64_box.setName("RM_qualityBase64_box"); // NOI18N
        RM_qualityBase64_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_qualityBase64_boxActionPerformed(evt);
            }
        });

        RM_prefix_box.setText("--prefix/-x");
        RM_prefix_box.setName("RM_prefix_box"); // NOI18N
        RM_prefix_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_prefix_boxActionPerformed(evt);
            }
        });

        RM_suffix_box.setText("--suffix/-y");
        RM_suffix_box.setName("RM_suffix_box"); // NOI18N
        RM_suffix_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_suffix_boxActionPerformed(evt);
            }
        });

        RM_stripSuffix_box.setText("--strip-suffix");
        RM_stripSuffix_box.setName("RM_stripSuffix_box"); // NOI18N
        RM_stripSuffix_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_stripSuffix_boxActionPerformed(evt);
            }
        });

        RM_colorspace_box.setText("--colorspace/-c");
        RM_colorspace_box.setName("RM_colorspace_box"); // NOI18N
        RM_colorspace_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_colorspace_boxActionPerformed(evt);
            }
        });

        RM_COLORSPACE_Options_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Colorspace Options"));

        RM_C_doubleEncode_box.setText("--double-encode/-d");
        RM_C_doubleEncode_box.setName("RM_C_doubleEncode_box"); // NOI18N
        RM_C_doubleEncode_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_C_doubleEncode_boxActionPerformed(evt);
            }
        });

        RM_C_bwa_box.setText("--bwa/--maq");
        RM_C_bwa_box.setName("RM_C_bwa_box"); // NOI18N
        RM_C_bwa_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_C_bwa_boxActionPerformed(evt);
            }
        });

        RM_C_trimPrimer_box.setText("--trim-primer/-t");
        RM_C_trimPrimer_box.setName("RM_C_trimPrimer_box"); // NOI18N
        RM_C_trimPrimer_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_C_trimPrimer_boxActionPerformed(evt);
            }
        });

        RM_C_stripF3_box.setText("--strip-f3");
        RM_C_stripF3_box.setName("RM_C_stripF3_box"); // NOI18N
        RM_C_stripF3_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_C_stripF3_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RM_COLORSPACE_Options_panelLayout = new javax.swing.GroupLayout(RM_COLORSPACE_Options_panel);
        RM_COLORSPACE_Options_panel.setLayout(RM_COLORSPACE_Options_panelLayout);
        RM_COLORSPACE_Options_panelLayout.setHorizontalGroup(
            RM_COLORSPACE_Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RM_COLORSPACE_Options_panelLayout.createSequentialGroup()
                .addGroup(RM_COLORSPACE_Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RM_C_doubleEncode_box)
                    .addComponent(RM_C_trimPrimer_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RM_COLORSPACE_Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RM_C_bwa_box)
                    .addComponent(RM_C_stripF3_box)))
        );
        RM_COLORSPACE_Options_panelLayout.setVerticalGroup(
            RM_COLORSPACE_Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RM_COLORSPACE_Options_panelLayout.createSequentialGroup()
                .addGroup(RM_COLORSPACE_Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RM_C_doubleEncode_box)
                    .addComponent(RM_C_bwa_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RM_COLORSPACE_Options_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RM_C_trimPrimer_box)
                    .addComponent(RM_C_stripF3_box)))
        );

        RM_lengthTag_box.setText("--length-tag");
        RM_lengthTag_box.setName("RM_lengthTag_box"); // NOI18N
        RM_lengthTag_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_lengthTag_boxActionPerformed(evt);
            }
        });

        RM_lengthTag_text.setText("length=123");
        RM_lengthTag_text.setName("RM_lengthTag_text"); // NOI18N
        RM_lengthTag_text.setPreferredSize(new java.awt.Dimension(130, 27));
        RM_lengthTag_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RM_lengthTag_textFocusLost(evt);
            }
        });

        RM_noZeroCap_box.setText("--no-zero-cap (BOWTIE)");
        RM_noZeroCap_box.setName("RM_noZeroCap_box"); // NOI18N
        RM_noZeroCap_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_noZeroCap_boxActionPerformed(evt);
            }
        });

        RM_zeroCap_box.setText("--zero-cap/-z");
        RM_zeroCap_box.setName("RM_zeroCap_box"); // NOI18N
        RM_zeroCap_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RM_zeroCap_boxActionPerformed(evt);
            }
        });

        RM_prefix_text.setName("RM_prefix_text"); // NOI18N
        RM_prefix_text.setPreferredSize(new java.awt.Dimension(130, 27));
        RM_prefix_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RM_prefix_textFocusLost(evt);
            }
        });

        RM_suffix_text.setName("RM_suffix_text"); // NOI18N
        RM_suffix_text.setPreferredSize(new java.awt.Dimension(130, 27));
        RM_suffix_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RM_suffix_textFocusLost(evt);
            }
        });

        RM_stripSuffix_text.setName("RM_stripSuffix_text"); // NOI18N
        RM_stripSuffix_text.setPreferredSize(new java.awt.Dimension(130, 27));
        RM_stripSuffix_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RM_stripSuffix_textFocusLost(evt);
            }
        });

        javax.swing.GroupLayout ReadsModifications_panelLayout = new javax.swing.GroupLayout(ReadsModifications_panel);
        ReadsModifications_panel.setLayout(ReadsModifications_panelLayout);
        ReadsModifications_panelLayout.setHorizontalGroup(
            ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReadsModifications_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RM_colorspace_box)
                    .addGroup(ReadsModifications_panelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RM_qualityBase33_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RM_qualityBase64_box))
                    .addComponent(RM_trimN_box)
                    .addGroup(ReadsModifications_panelLayout.createSequentialGroup()
                        .addComponent(RM_lengthTag_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RM_lengthTag_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(RM_noZeroCap_box)
                    .addComponent(RM_COLORSPACE_Options_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RM_zeroCap_box)
                    .addGroup(ReadsModifications_panelLayout.createSequentialGroup()
                        .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RM_stripSuffix_box)
                            .addComponent(RM_suffix_box)
                            .addComponent(RM_prefix_box))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RM_prefix_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RM_suffix_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RM_stripSuffix_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ReadsModifications_panelLayout.createSequentialGroup()
                        .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RM_trimQualities_box)
                            .addComponent(RM_cut_box))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RM_cut_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RM_qualityCutoff_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        ReadsModifications_panelLayout.setVerticalGroup(
            ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReadsModifications_panelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RM_cut_box)
                    .addComponent(RM_cut_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RM_trimQualities_box)
                    .addComponent(RM_qualityCutoff_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(RM_qualityBase33_box)
                    .addComponent(RM_qualityBase64_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RM_trimN_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReadsModifications_panelLayout.createSequentialGroup()
                        .addComponent(RM_prefix_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RM_suffix_box)
                            .addComponent(RM_suffix_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RM_stripSuffix_box)
                            .addComponent(RM_stripSuffix_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RM_colorspace_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RM_COLORSPACE_Options_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ReadsModifications_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RM_lengthTag_box)
                            .addComponent(RM_lengthTag_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RM_noZeroCap_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RM_zeroCap_box))
                    .addComponent(RM_prefix_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        RM_cut_box.getAccessibleContext().setAccessibleDescription("remove a fixed number of bases from the beginning or end of each read, and to remove low-quality bases (quality trimming) from the 3’ and 5’ ends");
        RM_trimQualities_box.getAccessibleContext().setAccessibleDescription("default 0,0 the first 0 is for 5' the second is for 3'");

        jTabbedPane1.addTab("Reads Modifications", ReadsModifications_panel);

        F_noTrim_box.setText("--no-trim");
        F_noTrim_box.setName("F_noTrim_box"); // NOI18N
        F_noTrim_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F_noTrim_boxActionPerformed(evt);
            }
        });

        F_discardUntrimmed_box.setText("--discard-untrimmed/--trimmed-only");
        F_discardUntrimmed_box.setName("F_discardUntrimmed_box"); // NOI18N
        F_discardUntrimmed_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F_discardUntrimmed_boxActionPerformed(evt);
            }
        });

        F_discard_box.setText("--discard-trimmed/--discard");
        F_discard_box.setName("F_discard_box"); // NOI18N
        F_discard_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F_discard_boxActionPerformed(evt);
            }
        });

        F_minimumLength_box.setText("--minimum-length/-m");
        F_minimumLength_box.setName("F_minimumLength_box"); // NOI18N
        F_minimumLength_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F_minimumLength_boxActionPerformed(evt);
            }
        });

        F_minimumLength_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        F_minimumLength_value.setName("F_minimumLength_value"); // NOI18N
        F_minimumLength_value.setPreferredSize(new java.awt.Dimension(118, 28));
        F_minimumLength_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                F_minimumLength_valueStateChanged(evt);
            }
        });

        F_maximumLength_box.setText("--maximum-length/-M");
        F_maximumLength_box.setName("F_maximumLength_box"); // NOI18N
        F_maximumLength_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F_maximumLength_boxActionPerformed(evt);
            }
        });

        F_maximumLength_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2147483647), Integer.valueOf(0), null, Integer.valueOf(1)));
        F_maximumLength_value.setName("F_maximumLength_value"); // NOI18N
        F_maximumLength_value.setPreferredSize(new java.awt.Dimension(118, 28));
        F_maximumLength_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                F_maximumLength_valueStateChanged(evt);
            }
        });

        F_maxN_box.setText("--max-n");
        F_maxN_box.setName("F_maxN_box"); // NOI18N
        F_maxN_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F_maxN_boxActionPerformed(evt);
            }
        });

        F_maskAdapter_box.setText("--mask-adapter");
        F_maskAdapter_box.setName("F_maskAdapter_box"); // NOI18N
        F_maskAdapter_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F_maskAdapter_boxActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(251, 0, 0));
        jLabel4.setText("Will enabled -O");

        F_maxN_text.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        F_maxN_text.setName("F_maxN_text"); // NOI18N
        F_maxN_text.setPreferredSize(new java.awt.Dimension(118, 27));
        F_maxN_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                F_maxN_textFocusLost(evt);
            }
        });

        javax.swing.GroupLayout Filtering_panelLayout = new javax.swing.GroupLayout(Filtering_panel);
        Filtering_panel.setLayout(Filtering_panelLayout);
        Filtering_panelLayout.setHorizontalGroup(
            Filtering_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Filtering_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Filtering_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(F_noTrim_box)
                    .addComponent(F_discardUntrimmed_box)
                    .addGroup(Filtering_panelLayout.createSequentialGroup()
                        .addComponent(F_discard_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(Filtering_panelLayout.createSequentialGroup()
                        .addComponent(F_minimumLength_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(F_minimumLength_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(F_maskAdapter_box)
                    .addGroup(Filtering_panelLayout.createSequentialGroup()
                        .addGroup(Filtering_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(F_maximumLength_box)
                            .addComponent(F_maxN_box))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Filtering_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(F_maximumLength_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(F_maxN_text, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        Filtering_panelLayout.setVerticalGroup(
            Filtering_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Filtering_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Filtering_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(F_discard_box)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(F_discardUntrimmed_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Filtering_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(F_minimumLength_box)
                    .addComponent(F_minimumLength_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Filtering_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(F_maximumLength_box)
                    .addComponent(F_maximumLength_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(F_noTrim_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Filtering_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(F_maxN_box)
                    .addComponent(F_maxN_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(F_maskAdapter_box)
                .addContainerGap(188, Short.MAX_VALUE))
        );

        F_noTrim_box.getAccessibleContext().setAccessibleDescription("no trim the input files at all");

        jTabbedPane1.addTab("Filtering", Filtering_panel);

        O_tooShortOutput_box.setText("--too-short-output");
        O_tooShortOutput_box.setName("O_tooShortOutput_box"); // NOI18N
        O_tooShortOutput_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_tooShortOutput_boxActionPerformed(evt);
            }
        });

        O_tooLongOutput_box.setText("--too-long-output");
        O_tooLongOutput_box.setName("O_tooLongOutput_box"); // NOI18N
        O_tooLongOutput_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_tooLongOutput_boxActionPerformed(evt);
            }
        });

        O_untrimmedOutput_box.setText("--untrimmed-output");
        O_untrimmedOutput_box.setName("O_untrimmedOutput_box"); // NOI18N
        O_untrimmedOutput_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_untrimmedOutput_boxActionPerformed(evt);
            }
        });

        O_infoFile_box.setText("--info-file");
        O_infoFile_box.setName("O_infoFile_box"); // NOI18N
        O_infoFile_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_infoFile_boxActionPerformed(evt);
            }
        });

        O_restFile_box.setText("--rest-file");
        O_restFile_box.setName("O_restFile_box"); // NOI18N
        O_restFile_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_restFile_boxActionPerformed(evt);
            }
        });

        O_wildcardFile_box.setText("--wildcard-file");
        O_wildcardFile_box.setName("O_wildcardFile_box"); // NOI18N
        O_wildcardFile_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_wildcardFile_boxActionPerformed(evt);
            }
        });

        O_quiet_box.setText("--quiet");
        O_quiet_box.setName("O_quiet_box"); // NOI18N
        O_quiet_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_quiet_boxActionPerformed(evt);
            }
        });

        O_name_box.setText("demultiplexing {name}");
        O_name_box.setName("O_name_box"); // NOI18N
        O_name_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_name_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Output_panelLayout = new javax.swing.GroupLayout(Output_panel);
        Output_panel.setLayout(Output_panelLayout);
        Output_panelLayout.setHorizontalGroup(
            Output_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Output_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Output_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(O_infoFile_box)
                    .addComponent(O_quiet_box)
                    .addComponent(O_tooShortOutput_box)
                    .addComponent(O_tooLongOutput_box)
                    .addComponent(O_untrimmedOutput_box)
                    .addComponent(O_restFile_box)
                    .addComponent(O_wildcardFile_box)
                    .addComponent(O_name_box))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        Output_panelLayout.setVerticalGroup(
            Output_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Output_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(O_quiet_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_infoFile_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_restFile_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_wildcardFile_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_tooShortOutput_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_tooLongOutput_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_untrimmedOutput_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_name_box)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Output", Output_panel);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(reset_jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(stop_jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(run_jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(ClosejButton6))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset_jButton3)
                    .addComponent(stop_jButton4)
                    .addComponent(run_jButton5)
                    .addComponent(ClosejButton6))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        CutadaptEditor.addTab("CutAdapt", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addComponent(CutadaptEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CutadaptEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        CutadaptEditor.getAccessibleContext().setAccessibleName("BwaEditors");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void CutadaptEditorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_CutadaptEditorComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_CutadaptEditorComponentShown
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void ClosejButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClosejButton6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_ClosejButton6ActionPerformed
    
    private void run_jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_jButton5ActionPerformed
        // TODO add your handling code here:
        if (this.properties.isSet("ClassName")) {
            this.parent_workflow.workflow.updateDependance();
            programs prog=new programs(parent_workflow.workbox.getCurrentWorkflows());
            prog.Run(properties);
        }
    }//GEN-LAST:event_run_jButton5ActionPerformed
    
    private void stop_jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop_jButton4ActionPerformed
        // TODO add your handling code here:
        properties.put("Status", Config.status_nothing);
        properties.killThread();
    }//GEN-LAST:event_stop_jButton4ActionPerformed
    
    private void reset_jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_jButton3ActionPerformed
        // TODO add your handling code here:
        properties.load();             //--reload current properties from file
        this.setProperties(properties);//--Update current field
        //this.display(properties); // Doesn't work
        this.setVisible(false);
    }//GEN-LAST:event_reset_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        properties.put("Name", this.name_jTextField1.getText());
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void name_jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_jTextField1ActionPerformed

    private void BO_a_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_a_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(BO_ANCH_a_box.getName())) {
            properties.remove(BO_ANCH_a_box.getName());
            BO_ANCH_a_box.setSelected(false);
        }
        cleanR1_5and3options();
        Util.boxEventText(properties,BO_a_box,BO_a_text);
    }//GEN-LAST:event_BO_a_boxActionPerformed

    private void BO_ANCH_a_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_ANCH_a_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(BO_a_box.getName())) {
            properties.remove(BO_a_box.getName());
            BO_a_box.setSelected(false);
        }
        cleanR1_5and3options();
        Util.boxEventText(properties,BO_ANCH_a_box,BO_a_text);
    }//GEN-LAST:event_BO_ANCH_a_boxActionPerformed

    private void BO_g_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_g_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(BO_ANCH_g_box.getName())) {
            properties.remove(BO_ANCH_g_box.getName());
            BO_ANCH_g_box.setSelected(false);
        }
        cleanR1_5and3options();
        Util.boxEventText(properties,BO_g_box,BO_g_text);
    }//GEN-LAST:event_BO_g_boxActionPerformed

    private void BO_ANCH_g_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_ANCH_g_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(BO_g_box.getName())) {
            properties.remove(BO_g_box.getName());
            BO_g_box.setSelected(false);
        }
        cleanR1_5and3options();
        Util.boxEventText(properties,BO_ANCH_g_box,BO_g_text);
    }//GEN-LAST:event_BO_ANCH_g_boxActionPerformed

    private void BO_anywhere_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_anywhere_boxActionPerformed
        // TODO add your handling code here:
        cleanR1_5or3options();
        Util.boxEventText(properties,BO_anywhere_box,BO_anywhere_text);
    }//GEN-LAST:event_BO_anywhere_boxActionPerformed

    private void BO_a_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_a_textActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(BO_ANCH_a_box.getName()))
            Util.boxEventText(properties,BO_ANCH_a_box,BO_a_text);
        if (properties.isSet(BO_a_box.getName()))
            Util.boxEventText(properties,BO_a_box,BO_a_text);
    }//GEN-LAST:event_BO_a_textActionPerformed

    private void BO_g_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_g_textActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(BO_ANCH_g_box.getName()))
            Util.boxEventText(properties,BO_ANCH_g_box,BO_g_text);
        if (properties.isSet(BO_g_box.getName()))
            Util.boxEventText(properties,BO_g_box,BO_g_text);
    }//GEN-LAST:event_BO_g_textActionPerformed

    private void BO_a_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BO_a_textFocusLost
        // TODO add your handling code here:
        if (properties.isSet(BO_ANCH_a_box.getName()))
            Util.boxEventText(properties,BO_ANCH_a_box,BO_a_text);
        if (properties.isSet(BO_a_box.getName()))
            Util.boxEventText(properties,BO_a_box,BO_a_text);
    }//GEN-LAST:event_BO_a_textFocusLost

    private void BO_g_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BO_g_textFocusLost
        // TODO add your handling code here:
        if (properties.isSet(BO_ANCH_g_box.getName()))
            Util.boxEventText(properties,BO_ANCH_g_box,BO_g_text);
        if (properties.isSet(BO_g_box.getName()))
            Util.boxEventText(properties,BO_g_box,BO_g_text);
    }//GEN-LAST:event_BO_g_textFocusLost

    private void BO_anywhere_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BO_anywhere_textFocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,BO_anywhere_box,BO_anywhere_text);
    }//GEN-LAST:event_BO_anywhere_textFocusLost

    private void BO_anywhere_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_anywhere_textActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,BO_anywhere_box,BO_anywhere_text);
    }//GEN-LAST:event_BO_anywhere_textActionPerformed

    private void RM_cut_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_cut_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RM_cut_box,RM_cut_value);
    }//GEN-LAST:event_RM_cut_boxActionPerformed

    private void RM_cut_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_RM_cut_valueStateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RM_cut_box,RM_cut_value);
    }//GEN-LAST:event_RM_cut_valueStateChanged

    private void O_infoFile_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_infoFile_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_infoFile_box,null);
    }//GEN-LAST:event_O_infoFile_boxActionPerformed

    private void O_restFile_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_restFile_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_restFile_box,null);
    }//GEN-LAST:event_O_restFile_boxActionPerformed

    private void O_wildcardFile_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_wildcardFile_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_wildcardFile_box,null);
    }//GEN-LAST:event_O_wildcardFile_boxActionPerformed

    private void F_discard_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F_discard_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,F_discard_box,null);
        if (properties.isSet(F_discard_box.getName())&&
                !properties.isSet(BO_overlap_box.getName())){
            Util.boxEventSpinner(properties,BO_overlap_box,BO_overlap_value);
            BO_overlap_box.setSelected(true);
        }
        if (properties.isSet(F_discard_box.getName())){
            properties.remove(F_discardUntrimmed_box.getName());
            F_discardUntrimmed_box.setSelected(false);
        }
    }//GEN-LAST:event_F_discard_boxActionPerformed

    private void BO_noIndels_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_noIndels_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,BO_noIndels_box,null);
    }//GEN-LAST:event_BO_noIndels_boxActionPerformed

    private void BO_e_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_e_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,BO_e_box,BO_e_value);
    }//GEN-LAST:event_BO_e_boxActionPerformed

    private void BO_e_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BO_e_valueStateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,BO_e_box,BO_e_value);
    }//GEN-LAST:event_BO_e_valueStateChanged

    private void BO_overlap_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_overlap_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,BO_overlap_box,BO_overlap_value);
    }//GEN-LAST:event_BO_overlap_boxActionPerformed

    private void BO_overlap_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BO_overlap_valueStateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,BO_overlap_box,BO_overlap_value);
    }//GEN-LAST:event_BO_overlap_valueStateChanged

    private void RM_trimQualities_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_trimQualities_boxActionPerformed
        // TODO add your handling code here:
        testValueInText(RM_qualityCutoff_text);
        Util.boxEventText(properties,RM_trimQualities_box,RM_qualityCutoff_text);
    }//GEN-LAST:event_RM_trimQualities_boxActionPerformed

    private void RM_qualityCutoff_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RM_qualityCutoff_textFocusLost
        // TODO add your handling code here:
        testValueInText(RM_qualityCutoff_text);
        Util.boxEventText(properties,RM_trimQualities_box,RM_qualityCutoff_text);
    }//GEN-LAST:event_RM_qualityCutoff_textFocusLost

    private void RM_qualityBase33_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_qualityBase33_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(RM_qualityBase64_box.getName())){
            properties.remove(RM_qualityBase64_box.getName());
            RM_qualityBase64_box.setSelected(false);
        }
        Util.boxEventSpinner(properties,RM_qualityBase33_box,null);
    }//GEN-LAST:event_RM_qualityBase33_boxActionPerformed

    private void RM_qualityBase64_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_qualityBase64_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(RM_qualityBase33_box.getName())){
            properties.remove(RM_qualityBase33_box.getName());
            RM_qualityBase33_box.setSelected(false);
        }
        Util.boxEventSpinner(properties,RM_qualityBase64_box,null);
    }//GEN-LAST:event_RM_qualityBase64_boxActionPerformed

    private void BO_times_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_times_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,BO_times_box,BO_times_value);
    }//GEN-LAST:event_BO_times_boxActionPerformed

    private void BO_times_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BO_times_valueStateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,BO_times_box,BO_times_value);
    }//GEN-LAST:event_BO_times_valueStateChanged

    private void F_noTrim_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F_noTrim_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,F_noTrim_box,null);
    }//GEN-LAST:event_F_noTrim_boxActionPerformed

    private void RM_trimN_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_trimN_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RM_trimN_box,null);
    }//GEN-LAST:event_RM_trimN_boxActionPerformed

    private void BO_N_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_N_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,BO_N_box,null);
    }//GEN-LAST:event_BO_N_boxActionPerformed

    private void BO_matchReadWildcards_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BO_matchReadWildcards_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,BO_matchReadWildcards_box,null);
    }//GEN-LAST:event_BO_matchReadWildcards_boxActionPerformed

    private void F_maxN_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F_maxN_boxActionPerformed
        // TODO add your handling code here:
        testValueInText(F_maxN_text);
        Util.boxEventText(properties,F_maxN_box,F_maxN_text);
    }//GEN-LAST:event_F_maxN_boxActionPerformed

    private void F_minimumLength_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F_minimumLength_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,F_minimumLength_box,F_minimumLength_value);
        if (properties.isSet(F_minimumLength_box.getName())){
            O_tooShortOutput_box.setEnabled(true);
        } else {
            O_tooShortOutput_box.setEnabled(false);
            properties.remove(O_tooShortOutput_box.getName());
        }
    }//GEN-LAST:event_F_minimumLength_boxActionPerformed

    private void F_minimumLength_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_F_minimumLength_valueStateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,F_minimumLength_box,F_minimumLength_value);
    }//GEN-LAST:event_F_minimumLength_valueStateChanged

    private void O_tooShortOutput_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_tooShortOutput_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_tooShortOutput_box,null);
    }//GEN-LAST:event_O_tooShortOutput_boxActionPerformed

    private void F_maximumLength_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F_maximumLength_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,F_maximumLength_box,F_maximumLength_value);
        if (properties.isSet(F_maximumLength_box.getName())){
            O_tooLongOutput_box.setEnabled(true);
        } else {
            O_tooLongOutput_box.setEnabled(false);
            properties.remove(O_tooLongOutput_box.getName());
        }
    }//GEN-LAST:event_F_maximumLength_boxActionPerformed

    private void F_maximumLength_valueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_F_maximumLength_valueStateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,F_maximumLength_box,F_maximumLength_value);
    }//GEN-LAST:event_F_maximumLength_valueStateChanged

    private void O_tooLongOutput_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_tooLongOutput_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_tooLongOutput_box,null);
    }//GEN-LAST:event_O_tooLongOutput_boxActionPerformed

    private void O_untrimmedOutput_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_untrimmedOutput_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_untrimmedOutput_box,null);
    }//GEN-LAST:event_O_untrimmedOutput_boxActionPerformed

    private void RM_colorspace_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_colorspace_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RM_colorspace_box,null);
        if (properties.isSet(RM_colorspace_box.getName()))
            enabledColorPanel(true);
        else enabledColorPanel(false);
    }//GEN-LAST:event_RM_colorspace_boxActionPerformed

    private void RM_C_stripF3_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_C_stripF3_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RM_C_stripF3_box,null);
    }//GEN-LAST:event_RM_C_stripF3_boxActionPerformed

    private void RM_C_bwa_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_C_bwa_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RM_C_bwa_box,null);
    }//GEN-LAST:event_RM_C_bwa_boxActionPerformed

    private void RM_noZeroCap_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_noZeroCap_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RM_noZeroCap_box,null);
        if (properties.isSet(RM_noZeroCap_box.getName())){
            properties.remove(RM_zeroCap_box.getName());
            RM_zeroCap_box.setSelected(false);
        } else if (properties.isSet(RM_colorspace_box.getName())&&
                !properties.isSet(RM_noZeroCap_box.getName())) {
            Util.boxEventSpinner(properties,RM_zeroCap_box,null);
            RM_zeroCap_box.setSelected(true);
        }
    }//GEN-LAST:event_RM_noZeroCap_boxActionPerformed

    private void RM_C_doubleEncode_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_C_doubleEncode_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RM_C_doubleEncode_box,null);
    }//GEN-LAST:event_RM_C_doubleEncode_boxActionPerformed

    private void RM_C_trimPrimer_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_C_trimPrimer_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RM_C_trimPrimer_box,null);
    }//GEN-LAST:event_RM_C_trimPrimer_boxActionPerformed

    private void F_discardUntrimmed_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F_discardUntrimmed_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,F_discardUntrimmed_box,null);
        if (properties.isSet(F_discardUntrimmed_box.getName())){
            properties.remove(F_discard_box.getName());
            F_discard_box.setSelected(false);
        }
    }//GEN-LAST:event_F_discardUntrimmed_boxActionPerformed

    private void F_maskAdapter_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F_maskAdapter_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,F_maskAdapter_box,null);
    }//GEN-LAST:event_F_maskAdapter_boxActionPerformed

    private void RM_prefix_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RM_prefix_textFocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,RM_prefix_box,RM_prefix_text);
    }//GEN-LAST:event_RM_prefix_textFocusLost

    private void RM_prefix_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_prefix_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,RM_prefix_box,RM_prefix_text);
    }//GEN-LAST:event_RM_prefix_boxActionPerformed

    private void RM_suffix_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_suffix_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,RM_suffix_box,RM_suffix_text);
    }//GEN-LAST:event_RM_suffix_boxActionPerformed

    private void RM_suffix_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RM_suffix_textFocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,RM_suffix_box,RM_suffix_text);
    }//GEN-LAST:event_RM_suffix_textFocusLost

    private void RM_stripSuffix_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_stripSuffix_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,RM_stripSuffix_box,RM_stripSuffix_text);
    }//GEN-LAST:event_RM_stripSuffix_boxActionPerformed

    private void RM_stripSuffix_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RM_stripSuffix_textFocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,RM_stripSuffix_box,RM_stripSuffix_text);
    }//GEN-LAST:event_RM_stripSuffix_textFocusLost

    private void RM_lengthTag_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_lengthTag_boxActionPerformed
        // TODO add your handling code here:
        testlengthTagText(RM_lengthTag_text);
        Util.boxEventText(properties,RM_lengthTag_box,RM_lengthTag_text);
    }//GEN-LAST:event_RM_lengthTag_boxActionPerformed

    private void RM_zeroCap_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_zeroCap_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RM_zeroCap_box,null);
    }//GEN-LAST:event_RM_zeroCap_boxActionPerformed

    private void O_quiet_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_quiet_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_quiet_box,null);
    }//GEN-LAST:event_O_quiet_boxActionPerformed

    private void RM_qualityCutoff_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RM_qualityCutoff_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RM_qualityCutoff_textActionPerformed

    private void RM_lengthTag_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RM_lengthTag_textFocusLost
        // TODO add your handling code here:
        testlengthTagText(RM_lengthTag_text);
        Util.boxEventText(properties,RM_lengthTag_box,RM_lengthTag_text);
    }//GEN-LAST:event_RM_lengthTag_textFocusLost

    private void F_maxN_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F_maxN_textFocusLost
        // TODO add your handling code here:
        testValueInText(F_maxN_text);
        Util.boxEventText(properties,F_maxN_box,F_maxN_text);
    }//GEN-LAST:event_F_maxN_textFocusLost

    private void O_name_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_name_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_name_box,null);
    }//GEN-LAST:event_O_name_boxActionPerformed
    
    
    /**
     * Test text values
     */
    private void testValueInText(javax.swing.JTextField t){
        if (t.getText().matches("\\d*,?\\d+")) {
            String[] sTab = t.getText().split(",");
            if (sTab[0].equals("")) sTab[0]="0";
            int[] d = {0,0};
            for (int i =0; i< sTab.length;i++)
                d[i] = Integer.parseInt(sTab[i]);
            int n=d[0]; if (n<0) n=-n;
            int f=d[1]; if (f<0||f>100) f=0;
            if (n==0&&f==0) t.setText("0");
            if (n>0&&f==0)  t.setText(Integer.toString(n));
        } else {
            t.setText("0");
        }
    }
    private void testlengthTagText(javax.swing.JTextField t){
        if (!t.getText().matches("\\w+=\\d+")) {
            t.setText("length=123");
        }
    }
    /**
     * CleansValues
     */
    
    private void cleanR1_5or3options() {
        String[] sTab = {
            BO_a_box.getName(),
            BO_ANCH_a_box.getName(),
            BO_g_box.getName(),
            BO_ANCH_g_box.getName()
        };
        Util.removePropertiesIn(properties,sTab,"null");
        
        BO_g_text.setEnabled(false);
        BO_a_text.setEnabled(false);
        BO_a_box.setSelected(false);
        BO_ANCH_a_box.setSelected(false);
        BO_g_box.setSelected(false);
        BO_ANCH_g_box.setSelected(false);
    }
    
    private void cleanR1_5and3options() {
        if (properties.isSet(BO_anywhere_box.getName()))
            properties.remove(BO_anywhere_box.getName());
        BO_anywhere_text.setEnabled(false);
        BO_anywhere_box.setSelected(false);
    }
    
    /**
     * Enabled panel
     */
    private void enabledColorPanel (boolean b) {
        RM_COLORSPACE_Options_panel.setEnabled(b);
        RM_C_bwa_box.setEnabled(b);
        RM_C_doubleEncode_box.setEnabled(b);
        RM_C_stripF3_box.setEnabled(b);
        RM_C_trimPrimer_box.setEnabled(b);
        if (!b){
            RM_C_bwa_box.setSelected(b);
            RM_C_doubleEncode_box.setSelected(b);
            RM_C_stripF3_box.setSelected(b);
            RM_C_trimPrimer_box.setSelected(b);
            properties.remove(RM_C_bwa_box.getName());
            properties.remove(RM_C_doubleEncode_box.getName());
            properties.remove(RM_C_stripF3_box.getName());
            properties.remove(RM_C_trimPrimer_box.getName());
        }
    }
    
    /**
     * Set Properties
     */
    
    public void setProperties(workflow_properties properties) {
        this.properties=properties;
        setTitle(properties.getName());
        //if (this.properties.isSet("Description")) this.Notice.setText(properties.get("Description"));
        
        // Properties Default Options
        this.defaultPgrmValues(properties);
    }
    
    public void setProperties(String filename, String path) {
        workflow_properties tmp=new workflow_properties();
        tmp.load(filename, path);
        this.properties=tmp;
        setTitle(properties.getName());
    }
    
    private void defaultPgrmValues(workflow_properties properties) {
        String[] sTab = {
            BO_a_box.getName(),
            BO_ANCH_a_box.getName(),
            BO_g_box.getName(),
            BO_ANCH_g_box.getName(),
            BO_anywhere_box.getName()
        };
        boolean b = false;
        for (String sT:sTab)
            if (properties.isSet(sT))
                b = true;
        
        Util.getDefaultPgrmValues(properties,b);
    }
    
    /**
     * Update Saved Properties uSP
     */
    
    private void updateSavedProperties(workflow_properties properties) {
        // Menu Options
        uspValues(properties);
        uspBoxesAndButtons(properties);
    }
    
    private void uspValues (workflow_properties properties) {
        // BO panel values
        if (properties.isSet(BO_a_text.getName())) {
            this.BO_a_text.setText(this.properties.get(BO_a_text.getName()));
            BO_a_text.setEnabled(false);
        }
        if (properties.isSet(BO_anywhere_text.getName())) {
            this.BO_anywhere_text.setText(this.properties.get(BO_anywhere_text.getName()));
            BO_anywhere_text.setEnabled(false);
        }
        if (properties.isSet(BO_e_value.getName())) {
            this.BO_e_value.setValue(Double.parseDouble(this.properties.get(BO_e_value.getName())));
            BO_e_value.setEnabled(false);
        }
        if (properties.isSet(BO_g_text.getName())) {
            this.BO_g_text.setText(this.properties.get(BO_g_text.getName()));
            BO_g_text.setEnabled(false);
        }
        if (properties.isSet(BO_overlap_value.getName())) {
            this.BO_overlap_value.setValue(Integer.parseInt(this.properties.get(BO_overlap_value.getName())));
            BO_overlap_value.setEnabled(false);
        }
        if (properties.isSet(BO_times_value.getName())) {
            this.BO_times_value.setValue(Integer.parseInt(this.properties.get(BO_times_value.getName())));
            BO_times_value.setEnabled(false);
        }

        // f panel values
        if (properties.isSet(F_maxN_text.getName())) {
            this.F_maxN_text.setText(this.properties.get(F_maxN_text.getName()));
            F_maxN_text.setEnabled(false);
        }
        if (properties.isSet(F_maximumLength_value.getName())) {
            this.F_maximumLength_value.setValue(Integer.parseInt(this.properties.get(F_maximumLength_value.getName())));
            F_maximumLength_value.setEnabled(false);
        }
        if (properties.isSet(F_minimumLength_value.getName())) {
            this.F_minimumLength_value.setValue(Integer.parseInt(this.properties.get(F_minimumLength_value.getName())));
            F_minimumLength_value.setEnabled(false);
        }
        
        // rm panel values
        if (properties.isSet(RM_cut_value.getName())) {
            this.RM_cut_value.setValue(Integer.parseInt(this.properties.get(RM_cut_value.getName())));
            RM_cut_value.setEnabled(false);
        }
        if (properties.isSet(RM_qualityCutoff_text.getName())) {
            this.RM_qualityCutoff_text.setText(this.properties.get(RM_qualityCutoff_text.getName()));
            RM_qualityCutoff_text.setEnabled(false);
        }
        if (properties.isSet(RM_lengthTag_text.getName())) {
            this.RM_lengthTag_text.setText(this.properties.get(RM_lengthTag_text.getName()));
            RM_lengthTag_text.setEnabled(false);
        }
        if (properties.isSet(RM_prefix_text.getName())) {
            this.RM_prefix_text.setText(this.properties.get(RM_prefix_text.getName()));
            RM_prefix_text.setEnabled(false);
        }
        if (properties.isSet(RM_stripSuffix_text.getName())) {
            this.RM_stripSuffix_text.setText(this.properties.get(RM_stripSuffix_text.getName()));
            RM_stripSuffix_text.setEnabled(false);
        }
        if (properties.isSet(RM_suffix_text.getName())) {
            this.RM_suffix_text.setText(this.properties.get(RM_suffix_text.getName()));
            RM_suffix_text.setEnabled(false);
        }
        if (properties.isSet(RM_qualityCutoff_text.getName())) {
            this.RM_qualityCutoff_text.setText(this.properties.get(RM_qualityCutoff_text.getName()));
            RM_qualityCutoff_text.setEnabled(false);
        }

    }
    
    
    private void uspBoxesAndButtons (workflow_properties properties) {
        //BO panel
        if (properties.isSet(BO_ANCH_a_box.getName())) {
            BO_ANCH_a_box.setSelected(true);
            BO_a_text.setEnabled(true);
        }
        if (properties.isSet(BO_ANCH_g_box.getName())) {
            BO_ANCH_g_box.setSelected(true);
            BO_g_text.setEnabled(true);
        }
        if (properties.isSet(BO_N_box.getName())) {
            BO_N_box.setSelected(true);
        }
        if (properties.isSet(BO_a_box.getName())) {
            BO_a_box.setSelected(true);
            BO_a_text.setEnabled(true);
        }
        if (properties.isSet(BO_anywhere_box.getName())) {
            BO_anywhere_box.setSelected(true);
            BO_anywhere_text.setEnabled(true);
        }
        if (properties.isSet(BO_e_box.getName())) {
            BO_e_box.setSelected(true);
            BO_e_value.setEnabled(true);
        }
        if (properties.isSet(BO_g_box.getName())) {
            BO_g_box.setSelected(true);
            BO_g_text.setEnabled(true);
        }
        if (properties.isSet(BO_matchReadWildcards_box.getName())) {
            BO_matchReadWildcards_box.setSelected(true);
        }
        if (properties.isSet(BO_noIndels_box.getName())) {
            BO_noIndels_box.setSelected(true);
        }
        if (properties.isSet(BO_overlap_box.getName())) {
            BO_overlap_box.setSelected(true);
            BO_overlap_value.setEnabled(true);
        }
        if (properties.isSet(BO_times_box.getName())) {
            BO_times_box.setSelected(true);
            BO_times_value.setEnabled(true);
        }
        
        // f panel boxes
        if (properties.isSet(F_discardUntrimmed_box.getName())) {
            F_discardUntrimmed_box.setSelected(true);
        }
        if (properties.isSet(F_discard_box.getName())) {
            F_discard_box.setSelected(true);
        }
        if (properties.isSet(F_maskAdapter_box.getName())) {
            F_maskAdapter_box.setSelected(true);
        }
        if (properties.isSet(F_maxN_box.getName())) {
            F_maxN_box.setSelected(true);
            F_maxN_text.setEnabled(true);
        }
        if (properties.isSet(F_maximumLength_box.getName())) {
            F_maximumLength_box.setSelected(true);
            F_maximumLength_value.setEnabled(true);
            O_tooLongOutput_box.setEnabled(true);
        }
        if (properties.isSet(F_minimumLength_box.getName())) {
            F_minimumLength_box.setSelected(true);
            F_minimumLength_value.setEnabled(true);
            O_tooShortOutput_box.setEnabled(true);
        }
        if (properties.isSet(F_noTrim_box.getName())) {
            F_noTrim_box.setSelected(true);
        }
        
        // o panel boxes
        if (properties.isSet(O_infoFile_box.getName())) {
            O_infoFile_box.setSelected(true);
        }
        if (properties.isSet(O_quiet_box.getName())) {
            O_quiet_box.setSelected(true);
        }
        if (properties.isSet(O_restFile_box.getName())) {
            O_restFile_box.setSelected(true);
        }
        if (properties.isSet(O_tooLongOutput_box.getName())) {
            O_tooLongOutput_box.setSelected(true);
            O_tooLongOutput_box.setEnabled(true);
        } else O_tooLongOutput_box.setEnabled(false);
        if (properties.isSet(O_tooShortOutput_box.getName())) {
            O_tooShortOutput_box.setSelected(true);
            O_tooShortOutput_box.setEnabled(true);
        } else O_tooShortOutput_box.setEnabled(false);
        if (properties.isSet(O_untrimmedOutput_box.getName())) {
            O_untrimmedOutput_box.setSelected(true);
        }
        if (properties.isSet(O_wildcardFile_box.getName())) {
            O_wildcardFile_box.setSelected(true);
        }
        
        // rm panel box
        if (properties.isSet(RM_C_bwa_box.getName())) {
            RM_C_bwa_box.setSelected(true);
        }
        if (properties.isSet(RM_C_doubleEncode_box.getName())) {
            RM_C_doubleEncode_box.setSelected(true);
        }
        if (properties.isSet(RM_C_stripF3_box.getName())) {
            RM_C_stripF3_box.setSelected(true);
        }
        if (properties.isSet(RM_C_trimPrimer_box.getName())) {
            RM_C_trimPrimer_box.setSelected(true);
        }
        if (properties.isSet(RM_colorspace_box.getName())) {
            RM_colorspace_box.setSelected(true);
            enabledColorPanel(true);
        } else enabledColorPanel(false);
        if (properties.isSet(RM_cut_box.getName())) {
            RM_cut_box.setSelected(true);
            RM_cut_value.setEnabled(true);
        }
        if (properties.isSet(RM_lengthTag_box.getName())) {
            RM_lengthTag_box.setSelected(true);
            RM_lengthTag_text.setEnabled(true);
        }
        if (properties.isSet(RM_noZeroCap_box.getName())) {
            RM_noZeroCap_box.setSelected(true);
        }
        if (properties.isSet(RM_prefix_box.getName())) {
            RM_prefix_box.setSelected(true);
            RM_prefix_text.setEnabled(true);
        }
        if (properties.isSet(RM_qualityBase33_box.getName())) {
            RM_qualityBase33_box.setSelected(true);
        }
        if (properties.isSet(RM_qualityBase64_box.getName())) {
            RM_qualityBase64_box.setSelected(true);
        }
        if (properties.isSet(RM_trimN_box.getName())) {
            RM_trimN_box.setSelected(true);
        }
        if (properties.isSet(RM_stripSuffix_box.getName())) {
            RM_stripSuffix_box.setSelected(true);
        }
        if (properties.isSet(RM_trimN_box.getName())) {
            RM_trimN_box.setSelected(true);
        }
        if (properties.isSet(RM_trimQualities_box.getName())) {
            RM_trimQualities_box.setSelected(true);
            RM_qualityCutoff_text.setEnabled(true);
        }
        if (properties.isSet(RM_zeroCap_box.getName())) {
            RM_zeroCap_box.setSelected(true);
        }
    }
    
    /**
     * Set the configuration properties for this object
     */
    
    public void display(workflow_properties properties) {
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // Set position
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
                (screenSize.height-d.height)/2);
        
        this.setProperties(properties);
        
        //Update Saved Properties uSP
        this.updateSavedProperties(properties);
        
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }
    
    public void saveImage(String filename) {
        BufferedImage bi;
        try {
            bi = new Robot().createScreenCapture(this.getBounds());
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
        } catch (Exception ex) {
            Config.log("Unable to save "+filename+" dialog image");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox BO_ANCH_a_box;
    private javax.swing.JCheckBox BO_ANCH_g_box;
    private javax.swing.JCheckBox BO_N_box;
    private javax.swing.JCheckBox BO_a_box;
    private javax.swing.JTextField BO_a_text;
    private javax.swing.JCheckBox BO_anywhere_box;
    private javax.swing.JTextField BO_anywhere_text;
    private javax.swing.JCheckBox BO_e_box;
    private javax.swing.JSpinner BO_e_value;
    private javax.swing.JCheckBox BO_g_box;
    private javax.swing.JTextField BO_g_text;
    private javax.swing.JCheckBox BO_matchReadWildcards_box;
    private javax.swing.JCheckBox BO_noIndels_box;
    private javax.swing.JCheckBox BO_overlap_box;
    private javax.swing.JSpinner BO_overlap_value;
    private javax.swing.JCheckBox BO_times_box;
    private javax.swing.JSpinner BO_times_value;
    private javax.swing.JPanel BasicOptions_panel;
    private javax.swing.JButton ClosejButton6;
    private javax.swing.JTabbedPane CutadaptEditor;
    private javax.swing.JCheckBox F_discardUntrimmed_box;
    private javax.swing.JCheckBox F_discard_box;
    private javax.swing.JCheckBox F_maskAdapter_box;
    private javax.swing.JCheckBox F_maxN_box;
    private javax.swing.JTextField F_maxN_text;
    private javax.swing.JCheckBox F_maximumLength_box;
    private javax.swing.JSpinner F_maximumLength_value;
    private javax.swing.JCheckBox F_minimumLength_box;
    private javax.swing.JSpinner F_minimumLength_value;
    private javax.swing.JCheckBox F_noTrim_box;
    private javax.swing.JPanel Filtering_panel;
    private javax.swing.JCheckBox O_infoFile_box;
    private javax.swing.JCheckBox O_name_box;
    private javax.swing.JCheckBox O_quiet_box;
    private javax.swing.JCheckBox O_restFile_box;
    private javax.swing.JCheckBox O_tooLongOutput_box;
    private javax.swing.JCheckBox O_tooShortOutput_box;
    private javax.swing.JCheckBox O_untrimmedOutput_box;
    private javax.swing.JCheckBox O_wildcardFile_box;
    private javax.swing.JPanel Output_panel;
    private javax.swing.JPanel RM_COLORSPACE_Options_panel;
    private javax.swing.JCheckBox RM_C_bwa_box;
    private javax.swing.JCheckBox RM_C_doubleEncode_box;
    private javax.swing.JCheckBox RM_C_stripF3_box;
    private javax.swing.JCheckBox RM_C_trimPrimer_box;
    private javax.swing.JCheckBox RM_colorspace_box;
    private javax.swing.JCheckBox RM_cut_box;
    private javax.swing.JSpinner RM_cut_value;
    private javax.swing.JCheckBox RM_lengthTag_box;
    private javax.swing.JTextField RM_lengthTag_text;
    private javax.swing.JCheckBox RM_noZeroCap_box;
    private javax.swing.JCheckBox RM_prefix_box;
    private javax.swing.JTextField RM_prefix_text;
    private javax.swing.JCheckBox RM_qualityBase33_box;
    private javax.swing.JCheckBox RM_qualityBase64_box;
    private javax.swing.JTextField RM_qualityCutoff_text;
    private javax.swing.JCheckBox RM_stripSuffix_box;
    private javax.swing.JTextField RM_stripSuffix_text;
    private javax.swing.JCheckBox RM_suffix_box;
    private javax.swing.JTextField RM_suffix_text;
    private javax.swing.JCheckBox RM_trimN_box;
    private javax.swing.JCheckBox RM_trimQualities_box;
    private javax.swing.JCheckBox RM_zeroCap_box;
    private javax.swing.JPanel ReadsModifications_panel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField name_jTextField1;
    private javax.swing.JButton reset_jButton3;
    private javax.swing.JButton run_jButton5;
    private javax.swing.JButton stop_jButton4;
    // End of variables declaration//GEN-END:variables
}
