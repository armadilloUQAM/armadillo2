//System.out.println("update");
//System.out.println(properties.get("CM_A_i_function"));
//System.out.println("remove box");

/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

package editors;

import configuration.Config;
import editor.EditorInterface;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.nio.file.Path;
import java.util.Vector;
import java.util.List;
import java.util.ArrayList;
import java.util.Hashtable;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import program.*;
import workflows.armadillo_workflow;
import workflows.workflow_properties;
import workflows.workflow_properties_dictionnary;

/**
 *
 * @author Jérémy Goimard
 * @date Sept 2015
 * 
 * If a button, box is used with spinner or text field,
 * the choice was made to use the value name because of the updated content function
 * 
 * QUESTIONS STILL OPEN WITH -b // FIXED IN CHECK Requierments
 * 
 */

public class BwaMapEditors extends javax.swing.JDialog implements EditorInterface  {
    
    /**
     * Creates new form MaqEditors
     */
    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected="";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow parent_workflow;
    
    public final String defaultNameString=" Name";
    static final boolean default_map=true;
    
    /////////////////////////////////////////////////////////////////////////
    /// Default Options
    
    public BwaMapEditors(java.awt.Frame parent, armadillo_workflow parent_workflow) {
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BWA_options_Buttons = new javax.swing.ButtonGroup();
        BWA_IDG_source_buttons = new javax.swing.ButtonGroup();
        BWA_ALN_PostTreatment_buttons = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        BwaMapEditor = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        name_jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        O_bwasw_button = new javax.swing.JRadioButton();
        O_mem_button = new javax.swing.JRadioButton();
        O_aln_button = new javax.swing.JRadioButton();
        Options = new javax.swing.JTabbedPane();
        MEM_Panel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        MEM_k_box = new javax.swing.JCheckBox();
        MEM_k_value = new javax.swing.JSpinner();
        MEM_r_box = new javax.swing.JCheckBox();
        MEM_r_value = new javax.swing.JSpinner();
        MEM_w_box = new javax.swing.JCheckBox();
        MEM_w_value = new javax.swing.JSpinner();
        MEM_d_box = new javax.swing.JCheckBox();
        MEM_d_value = new javax.swing.JSpinner();
        MEM_P_box = new javax.swing.JCheckBox();
        MEM_c_box = new javax.swing.JCheckBox();
        MEM_c_value = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        MEM_A_box = new javax.swing.JCheckBox();
        MEM_A_value = new javax.swing.JSpinner();
        MEM_B_value = new javax.swing.JSpinner();
        MEM_B_box = new javax.swing.JCheckBox();
        MEM_O_box = new javax.swing.JCheckBox();
        MEM_O_value = new javax.swing.JSpinner();
        MEM_L_box = new javax.swing.JCheckBox();
        MEM_E_box = new javax.swing.JCheckBox();
        MEM_E_value = new javax.swing.JSpinner();
        MEM_L_value = new javax.swing.JSpinner();
        MEM_U_value = new javax.swing.JSpinner();
        MEM_U_box = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        MEM_INPUT_panel = new javax.swing.JPanel();
        MEM_R_box = new javax.swing.JCheckBox();
        MEM_p_box = new javax.swing.JCheckBox();
        MEM_R_text = new javax.swing.JTextField();
        MEM_OUTPUT_panel = new javax.swing.JPanel();
        MEM_T_box = new javax.swing.JCheckBox();
        MEM_T_value = new javax.swing.JSpinner();
        MEM_v_box = new javax.swing.JCheckBox();
        MEM_v_value = new javax.swing.JSpinner();
        MEM_C_box = new javax.swing.JCheckBox();
        MEM_a_box = new javax.swing.JCheckBox();
        MEM_M_box = new javax.swing.JCheckBox();
        MEM_H_box = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        MEM_t_box = new javax.swing.JCheckBox();
        MEM_t_value = new javax.swing.JSpinner();
        ALN_Panel = new javax.swing.JPanel();
        ALN_n_value = new javax.swing.JSpinner();
        ALN_n_box = new javax.swing.JCheckBox();
        ALN_o_box = new javax.swing.JCheckBox();
        ALN_o_value = new javax.swing.JSpinner();
        ALN_e_box = new javax.swing.JCheckBox();
        ALN_e_value = new javax.swing.JSpinner();
        ALN_d_box = new javax.swing.JCheckBox();
        ALN_d_value = new javax.swing.JSpinner();
        ALN_M_box = new javax.swing.JCheckBox();
        ALN_M_value = new javax.swing.JSpinner();
        ALN_O_value = new javax.swing.JSpinner();
        ALN_O_box = new javax.swing.JCheckBox();
        ALN_E_box = new javax.swing.JCheckBox();
        ALN_E_value = new javax.swing.JSpinner();
        ALN_R_box = new javax.swing.JCheckBox();
        ALN_B_value = new javax.swing.JSpinner();
        ALN_q_value = new javax.swing.JSpinner();
        ALN_q_box = new javax.swing.JCheckBox();
        ALN_R_value = new javax.swing.JSpinner();
        ALN_B_box = new javax.swing.JCheckBox();
        ALN_i_value = new javax.swing.JSpinner();
        ALN_i_box = new javax.swing.JCheckBox();
        ALN_l_box = new javax.swing.JCheckBox();
        ALN_l_value = new javax.swing.JSpinner();
        ALN_k_value = new javax.swing.JSpinner();
        ALN_k_box = new javax.swing.JCheckBox();
        ALN_t_value = new javax.swing.JSpinner();
        ALN_t_box = new javax.swing.JCheckBox();
        ALN_c_box = new javax.swing.JCheckBox();
        ALN_N_box = new javax.swing.JCheckBox();
        ALN_I_box = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        ALN_b_box = new javax.swing.JCheckBox();
        ALN_b1_box = new javax.swing.JCheckBox();
        ALN_b2_box = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        ALN_PT_samse_button = new javax.swing.JRadioButton();
        ALN_PT_sampe_button = new javax.swing.JRadioButton();
        ALN_PT_NOTUSED_button = new javax.swing.JRadioButton();
        reset_jButton3 = new javax.swing.JButton();
        stop_jButton4 = new javax.swing.JButton();
        run_jButton5 = new javax.swing.JButton();
        ClosejButton6 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        SAMPE_Panel = new javax.swing.JPanel();
        SAMPE_n_value = new javax.swing.JSpinner();
        SAMPE_n_box = new javax.swing.JCheckBox();
        SAMPE_o_box = new javax.swing.JCheckBox();
        SAMPE_N_box = new javax.swing.JCheckBox();
        SAMPE_N_value = new javax.swing.JSpinner();
        SAMPE_o_value = new javax.swing.JSpinner();
        SAMPE_a_box = new javax.swing.JCheckBox();
        SAMPE_a_value = new javax.swing.JSpinner();
        SAMPE_P_box = new javax.swing.JCheckBox();
        SAMPE_r_text = new javax.swing.JTextField();
        SAMPE_r_box = new javax.swing.JCheckBox();
        SAMSE_Panel = new javax.swing.JPanel();
        SAMSE_n_value = new javax.swing.JSpinner();
        SAMSE_n_box = new javax.swing.JCheckBox();
        SAMSE_r_box = new javax.swing.JCheckBox();
        SAMSE_r_text = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        M_IDG_main_panel = new javax.swing.JPanel();
        IDG_selected_ComboBox = new javax.swing.JComboBox();
        IDG_r_text = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        IDG_Update_button = new javax.swing.JButton();
        IDG_change_button = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        M_IDG_workflow_button = new javax.swing.JRadioButton();
        M_IDG_directory_button = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("?");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BwaMapEditor.setPreferredSize(new java.awt.Dimension(661, 676));
        BwaMapEditor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                BwaMapEditorComponentShown(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(521, 521));

        jButton2.setText("Rename");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        name_jTextField1.setText("Bwa Mapping");
        name_jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Alignment"));

        BWA_options_Buttons.add(O_bwasw_button);
        O_bwasw_button.setText("bwasw");
        O_bwasw_button.setToolTipText("In this mode, Bowtie 2 does not require that the entire read align from one end to the other. Rather, some characters may be omitted (\"soft clipped\") from the ends in order to achieve the greatest possible alignment score. The match bonus --ma is used in this mode, and the best possible alignment score is equal to the match bonus (--ma) times the length of the read. Specifying --local and one of the presets (e.g. --local --very-fast) is equivalent to specifying the local version of the preset (--very-fast-local). This is mutually exclusive with --end-to-end. --end-to-end is the default mode.");
        O_bwasw_button.setName("O_bwasw_button"); // NOI18N
        O_bwasw_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_bwasw_buttonActionPerformed(evt);
            }
        });

        BWA_options_Buttons.add(O_mem_button);
        O_mem_button.setText("mem");
        O_mem_button.setName("O_mem_button"); // NOI18N
        O_mem_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_mem_buttonActionPerformed(evt);
            }
        });

        BWA_options_Buttons.add(O_aln_button);
        O_aln_button.setText("aln");
        O_aln_button.setName("O_aln_button"); // NOI18N
        O_aln_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_aln_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(O_mem_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_bwasw_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_aln_button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(O_aln_button)
                .addComponent(O_mem_button)
                .addComponent(O_bwasw_button))
        );

        O_bwasw_button.getAccessibleContext().setAccessibleDescription("");

        Options.setBorder(javax.swing.BorderFactory.createTitledBorder("Alignment options"));
        Options.setName("Options"); // NOI18N
        Options.setPreferredSize(new java.awt.Dimension(366, 337));

        MEM_Panel.setName("MEM_Panel"); // NOI18N

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(350, 282));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Algo"));

        MEM_k_box.setText("-k");
        MEM_k_box.setName("MEM_k_box"); // NOI18N
        MEM_k_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_k_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_k_boxActionPerformed(evt);
            }
        });

        MEM_k_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(19), Integer.valueOf(0), null, Integer.valueOf(1)));
        MEM_k_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_k_value.setName("MEM_k_value"); // NOI18N
        MEM_k_value.setPreferredSize(new java.awt.Dimension(100, 28));
        MEM_k_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_k_spinner_value(evt);
            }
        });

        MEM_r_box.setText("-r");
        MEM_r_box.setName("MEM_r_box"); // NOI18N
        MEM_r_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_r_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_r_boxActionPerformed(evt);
            }
        });

        MEM_r_value.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(1.5f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));
        MEM_r_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_r_value.setName("MEM_r_value"); // NOI18N
        MEM_r_value.setPreferredSize(new java.awt.Dimension(100, 28));
        MEM_r_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_r_spinner_value(evt);
            }
        });

        MEM_w_box.setText("-w");
        MEM_w_box.setName("MEM_w_box"); // NOI18N
        MEM_w_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_w_boxActionPerformed(evt);
            }
        });

        MEM_w_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100), Integer.valueOf(0), null, Integer.valueOf(1)));
        MEM_w_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_w_value.setName("MEM_w_value"); // NOI18N
        MEM_w_value.setPreferredSize(new java.awt.Dimension(100, 28));
        MEM_w_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_w_spinner_value(evt);
            }
        });

        MEM_d_box.setText("-d");
        MEM_d_box.setName("MEM_d_box"); // NOI18N
        MEM_d_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_d_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_d_boxActionPerformed(evt);
            }
        });

        MEM_d_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100), Integer.valueOf(0), null, Integer.valueOf(1)));
        MEM_d_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_d_value.setName("MEM_d_value"); // NOI18N
        MEM_d_value.setPreferredSize(new java.awt.Dimension(100, 28));
        MEM_d_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_d_spinner_value(evt);
            }
        });

        MEM_P_box.setText("-P");
        MEM_P_box.setName("MEM_P_box"); // NOI18N
        MEM_P_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_P_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_P_boxActionPerformed(evt);
            }
        });

        MEM_c_box.setText("-c");
        MEM_c_box.setName("MEM_c_box"); // NOI18N
        MEM_c_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_c_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_c_boxActionPerformed(evt);
            }
        });

        MEM_c_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        MEM_c_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_c_value.setName("MEM_c_value"); // NOI18N
        MEM_c_value.setPreferredSize(new java.awt.Dimension(100, 28));
        MEM_c_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_c_spinner_value(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(MEM_d_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_d_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(MEM_k_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_k_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(MEM_w_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_w_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MEM_P_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(MEM_r_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_r_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(MEM_c_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_c_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MEM_k_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MEM_k_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MEM_w_box)
                            .addComponent(MEM_w_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MEM_r_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MEM_r_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MEM_c_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MEM_c_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MEM_d_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_d_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_P_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Scoring"));

        MEM_A_box.setText("-A");
        MEM_A_box.setName("MEM_A_box"); // NOI18N
        MEM_A_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_A_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_A_boxActionPerformed(evt);
            }
        });

        MEM_A_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
        MEM_A_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_A_value.setName("MEM_A_value"); // NOI18N
        MEM_A_value.setPreferredSize(new java.awt.Dimension(100, 28));
        MEM_A_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_A_spinner_value(evt);
            }
        });

        MEM_B_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(4), Integer.valueOf(0), null, Integer.valueOf(1)));
        MEM_B_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_B_value.setName("MEM_B_value"); // NOI18N
        MEM_B_value.setPreferredSize(new java.awt.Dimension(100, 28));
        MEM_B_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_B_spinner_value(evt);
            }
        });

        MEM_B_box.setText("-B");
        MEM_B_box.setName("MEM_B_box"); // NOI18N
        MEM_B_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_B_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_B_boxActionPerformed(evt);
            }
        });

        MEM_O_box.setText("-O");
        MEM_O_box.setName("MEM_O_box"); // NOI18N
        MEM_O_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_O_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_O_boxActionPerformed(evt);
            }
        });

        MEM_O_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(6), Integer.valueOf(0), null, Integer.valueOf(1)));
        MEM_O_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_O_value.setName("MEM_O_value"); // NOI18N
        MEM_O_value.setPreferredSize(new java.awt.Dimension(100, 28));
        MEM_O_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_O_spinner_value(evt);
            }
        });

        MEM_L_box.setText("-L");
        MEM_L_box.setName("MEM_L_box"); // NOI18N
        MEM_L_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_L_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_L_boxActionPerformed(evt);
            }
        });

        MEM_E_box.setText("-E");
        MEM_E_box.setName("MEM_E_box"); // NOI18N
        MEM_E_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_E_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_E_boxActionPerformed(evt);
            }
        });

        MEM_E_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
        MEM_E_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_E_value.setName("MEM_E_value"); // NOI18N
        MEM_E_value.setPreferredSize(new java.awt.Dimension(100, 28));
        MEM_E_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_E_spinner_value(evt);
            }
        });

        MEM_L_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(0), null, Integer.valueOf(1)));
        MEM_L_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_L_value.setName("MEM_L_value"); // NOI18N
        MEM_L_value.setPreferredSize(new java.awt.Dimension(100, 28));
        MEM_L_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_L_spinner_value(evt);
            }
        });

        MEM_U_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(17), Integer.valueOf(0), null, Integer.valueOf(1)));
        MEM_U_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_U_value.setName("MEM_U_value"); // NOI18N
        MEM_U_value.setPreferredSize(new java.awt.Dimension(100, 28));
        MEM_U_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_U_spinner_value(evt);
            }
        });

        MEM_U_box.setText("-U");
        MEM_U_box.setName("MEM_U_box"); // NOI18N
        MEM_U_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_U_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_U_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(MEM_O_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_O_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(MEM_A_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_A_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(MEM_B_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_B_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(MEM_L_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_L_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(MEM_U_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_U_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(MEM_E_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_E_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MEM_E_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_E_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MEM_L_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_L_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MEM_U_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_U_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MEM_A_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_A_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MEM_B_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_B_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MEM_O_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_O_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        jTabbedPane1.addTab("Algo/Scoring", jPanel3);

        MEM_INPUT_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Input"));
        MEM_INPUT_panel.setPreferredSize(new java.awt.Dimension(325, 80));

        MEM_R_box.setText("-R");
        MEM_R_box.setName("MEM_R_box"); // NOI18N
        MEM_R_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_R_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_R_boxActionPerformed(evt);
            }
        });

        MEM_p_box.setText("-p");
        MEM_p_box.setName("MEM_p_box"); // NOI18N
        MEM_p_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_p_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_p_boxActionPerformed(evt);
            }
        });

        MEM_R_text.setName("MEM_R_text"); // NOI18N
        MEM_R_text.setPreferredSize(new java.awt.Dimension(262, 27));
        MEM_R_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MEM_R_textFocusLost(evt);
            }
        });
        MEM_R_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_R_textActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MEM_INPUT_panelLayout = new javax.swing.GroupLayout(MEM_INPUT_panel);
        MEM_INPUT_panel.setLayout(MEM_INPUT_panelLayout);
        MEM_INPUT_panelLayout.setHorizontalGroup(
            MEM_INPUT_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MEM_p_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(MEM_INPUT_panelLayout.createSequentialGroup()
                .addComponent(MEM_R_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MEM_R_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        MEM_INPUT_panelLayout.setVerticalGroup(
            MEM_INPUT_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MEM_INPUT_panelLayout.createSequentialGroup()
                .addComponent(MEM_p_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MEM_INPUT_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MEM_R_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_R_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        MEM_OUTPUT_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));

        MEM_T_box.setText("-T");
        MEM_T_box.setName("MEM_T_box"); // NOI18N
        MEM_T_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_T_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_T_boxActionPerformed(evt);
            }
        });

        MEM_T_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(30), Integer.valueOf(0), null, Integer.valueOf(1)));
        MEM_T_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_T_value.setName("MEM_T_value"); // NOI18N
        MEM_T_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_T_spinner_value(evt);
            }
        });

        MEM_v_box.setText("-v");
        MEM_v_box.setName("MEM_v_box"); // NOI18N
        MEM_v_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_v_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_v_boxActionPerformed(evt);
            }
        });

        MEM_v_value.setModel(new javax.swing.SpinnerNumberModel(3, 1, 4, 1));
        MEM_v_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_v_value.setName("MEM_v_value"); // NOI18N
        MEM_v_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_v_spinner_value(evt);
            }
        });

        MEM_C_box.setText("-C");
        MEM_C_box.setName("MEM_C_box"); // NOI18N
        MEM_C_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_C_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_C_boxActionPerformed(evt);
            }
        });

        MEM_a_box.setText("-a");
        MEM_a_box.setName("MEM_a_box"); // NOI18N
        MEM_a_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_a_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_a_boxActionPerformed(evt);
            }
        });

        MEM_M_box.setText("-M");
        MEM_M_box.setName("MEM_M_box"); // NOI18N
        MEM_M_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_M_boxActionPerformed(evt);
            }
        });

        MEM_H_box.setText("-H");
        MEM_H_box.setName("MEM_H_box"); // NOI18N
        MEM_H_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_H_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_H_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MEM_OUTPUT_panelLayout = new javax.swing.GroupLayout(MEM_OUTPUT_panel);
        MEM_OUTPUT_panel.setLayout(MEM_OUTPUT_panelLayout);
        MEM_OUTPUT_panelLayout.setHorizontalGroup(
            MEM_OUTPUT_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MEM_OUTPUT_panelLayout.createSequentialGroup()
                .addGroup(MEM_OUTPUT_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MEM_OUTPUT_panelLayout.createSequentialGroup()
                        .addComponent(MEM_T_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_T_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_v_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_v_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MEM_OUTPUT_panelLayout.createSequentialGroup()
                        .addComponent(MEM_M_box)
                        .addGap(18, 18, 18)
                        .addComponent(MEM_a_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MEM_C_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_H_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 5, Short.MAX_VALUE))
        );
        MEM_OUTPUT_panelLayout.setVerticalGroup(
            MEM_OUTPUT_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MEM_OUTPUT_panelLayout.createSequentialGroup()
                .addGroup(MEM_OUTPUT_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MEM_T_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_T_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_v_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_v_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MEM_OUTPUT_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MEM_M_box)
                    .addComponent(MEM_a_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_C_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_H_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel7.setText("Performances : ");

        MEM_t_box.setText("-t");
        MEM_t_box.setName("MEM_t_box"); // NOI18N
        MEM_t_box.setPreferredSize(new java.awt.Dimension(45, 24));
        MEM_t_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEM_t_boxActionPerformed(evt);
            }
        });

        MEM_t_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        MEM_t_value.setMinimumSize(new java.awt.Dimension(100, 28));
        MEM_t_value.setName("MEM_t_value"); // NOI18N
        MEM_t_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MEM_t_spinner_value(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MEM_INPUT_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_OUTPUT_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_t_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MEM_t_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MEM_INPUT_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MEM_OUTPUT_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(MEM_t_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_t_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Input/Output/Perf", jPanel6);

        javax.swing.GroupLayout MEM_PanelLayout = new javax.swing.GroupLayout(MEM_Panel);
        MEM_Panel.setLayout(MEM_PanelLayout);
        MEM_PanelLayout.setHorizontalGroup(
            MEM_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MEM_PanelLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        MEM_PanelLayout.setVerticalGroup(
            MEM_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MEM_PanelLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Options.addTab("mem", MEM_Panel);

        ALN_Panel.setName("ALN_Panel"); // NOI18N

        ALN_n_value.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.04f), Float.valueOf(0.0f), Float.valueOf(1.0f), Float.valueOf(0.01f)));
        ALN_n_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_n_value.setName("ALN_n_value"); // NOI18N
        ALN_n_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_n_spinner_value(evt);
            }
        });

        ALN_n_box.setText("-n");
        ALN_n_box.setName("ALN_n_box"); // NOI18N
        ALN_n_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_n_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_n_boxActionPerformed(evt);
            }
        });

        ALN_o_box.setText("-o");
        ALN_o_box.setName("ALN_o_box"); // NOI18N
        ALN_o_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_o_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_o_boxActionPerformed(evt);
            }
        });

        ALN_o_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        ALN_o_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_o_value.setName("ALN_o_value"); // NOI18N
        ALN_o_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_o_spinner_value(evt);
            }
        });

        ALN_e_box.setText("-e");
        ALN_e_box.setName("ALN_e_box"); // NOI18N
        ALN_e_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_e_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_e_boxActionPerformed(evt);
            }
        });

        ALN_e_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(-1), Integer.valueOf(-1), null, Integer.valueOf(1)));
        ALN_e_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_e_value.setName("ALN_e_value"); // NOI18N
        ALN_e_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_e_spinner_value(evt);
            }
        });

        ALN_d_box.setText("-d");
        ALN_d_box.setName("CM_OO_qcFilter_box"); // NOI18N
        ALN_d_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_d_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_d_boxActionPerformed(evt);
            }
        });

        ALN_d_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(16), Integer.valueOf(0), null, Integer.valueOf(1)));
        ALN_d_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_d_value.setName("ALN_d_value"); // NOI18N
        ALN_d_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_d_spinner_value(evt);
            }
        });

        ALN_M_box.setText("-M");
        ALN_M_box.setName("ALN_M_box"); // NOI18N
        ALN_M_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_M_boxActionPerformed(evt);
            }
        });

        ALN_M_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(0), null, Integer.valueOf(1)));
        ALN_M_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_M_value.setName("ALN_M_value"); // NOI18N
        ALN_M_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_M_spinner_value(evt);
            }
        });

        ALN_O_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(11), Integer.valueOf(0), null, Integer.valueOf(1)));
        ALN_O_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_O_value.setName("ALN_O_value"); // NOI18N
        ALN_O_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_O_spinner_value(evt);
            }
        });

        ALN_O_box.setText("-O");
        ALN_O_box.setName("ALN_O_box"); // NOI18N
        ALN_O_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_O_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_O_boxActionPerformed(evt);
            }
        });

        ALN_E_box.setText("-E");
        ALN_E_box.setName("ALN_E_box"); // NOI18N
        ALN_E_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_E_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_E_boxActionPerformed(evt);
            }
        });

        ALN_E_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(4), Integer.valueOf(0), null, Integer.valueOf(1)));
        ALN_E_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_E_value.setName("ALN_E_value"); // NOI18N
        ALN_E_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_E_spinner_value(evt);
            }
        });

        ALN_R_box.setText("-R");
        ALN_R_box.setName("ALN_R_box"); // NOI18N
        ALN_R_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_R_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_R_boxActionPerformed(evt);
            }
        });

        ALN_B_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        ALN_B_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_B_value.setName("ALN_B_value"); // NOI18N
        ALN_B_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_B_spinner_value(evt);
            }
        });

        ALN_q_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        ALN_q_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_q_value.setName("ALN_q_value"); // NOI18N
        ALN_q_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_q_spinner_value(evt);
            }
        });

        ALN_q_box.setText("-q");
        ALN_q_box.setName("ALN_q_box"); // NOI18N
        ALN_q_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_q_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_q_boxActionPerformed(evt);
            }
        });

        ALN_R_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(30), Integer.valueOf(0), null, Integer.valueOf(1)));
        ALN_R_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_R_value.setName("ALN_R_value"); // NOI18N
        ALN_R_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_R_spinner_value(evt);
            }
        });

        ALN_B_box.setText("-B");
        ALN_B_box.setName("ALN_B_box"); // NOI18N
        ALN_B_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_B_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_B_boxActionPerformed(evt);
            }
        });

        ALN_i_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(0), null, Integer.valueOf(1)));
        ALN_i_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_i_value.setName("ALN_i_value"); // NOI18N
        ALN_i_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_i_spinner_value(evt);
            }
        });

        ALN_i_box.setText("-i");
        ALN_i_box.setName("ALN_i_box"); // NOI18N
        ALN_i_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_i_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_i_boxActionPerformed(evt);
            }
        });

        ALN_l_box.setText("-l");
        ALN_l_box.setName("ALN_l_box"); // NOI18N
        ALN_l_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_l_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_l_boxActionPerformed(evt);
            }
        });

        ALN_l_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2147483647), Integer.valueOf(0), null, Integer.valueOf(1)));
        ALN_l_value.setMinimumSize(new java.awt.Dimension(120, 28));
        ALN_l_value.setName("ALN_l_value"); // NOI18N
        ALN_l_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_l_spinner_value(evt);
            }
        });

        ALN_k_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(0), null, Integer.valueOf(1)));
        ALN_k_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_k_value.setName("ALN_k_value"); // NOI18N
        ALN_k_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_k_spinner_value(evt);
            }
        });

        ALN_k_box.setText("-k");
        ALN_k_box.setName("CM_OO_qcFilter_box"); // NOI18N
        ALN_k_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_k_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_k_boxActionPerformed(evt);
            }
        });

        ALN_t_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        ALN_t_value.setMinimumSize(new java.awt.Dimension(100, 28));
        ALN_t_value.setName("ALN_t_value"); // NOI18N
        ALN_t_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ALN_t_spinner_value(evt);
            }
        });

        ALN_t_box.setText("-t");
        ALN_t_box.setName("ALN_t_box"); // NOI18N
        ALN_t_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_t_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_t_boxActionPerformed(evt);
            }
        });

        ALN_c_box.setText("-c");
        ALN_c_box.setEnabled(false);
        ALN_c_box.setName("CM_OO_qcFilter_box"); // NOI18N
        ALN_c_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_c_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_c_boxActionPerformed(evt);
            }
        });

        ALN_N_box.setText("-N");
        ALN_N_box.setName("ALN_N_box"); // NOI18N
        ALN_N_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_N_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_N_boxActionPerformed(evt);
            }
        });

        ALN_I_box.setText("-I");
        ALN_I_box.setName("ALN_I_box"); // NOI18N
        ALN_I_box.setPreferredSize(new java.awt.Dimension(45, 24));
        ALN_I_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_I_boxActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("if BAM inputs"));

        ALN_b_box.setText("-b");
        ALN_b_box.setName("ALN_b_box"); // NOI18N
        ALN_b_box.setPreferredSize(new java.awt.Dimension(49, 24));
        ALN_b_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_b_boxActionPerformed(evt);
            }
        });

        ALN_b1_box.setText("-b1");
        ALN_b1_box.setName("ALN_b1_box"); // NOI18N
        ALN_b1_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_b1_boxActionPerformed(evt);
            }
        });

        ALN_b2_box.setText("-b2");
        ALN_b2_box.setName("ALN_b2_box"); // NOI18N
        ALN_b2_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_b2_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(ALN_b_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ALN_b1_box, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ALN_b2_box)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(ALN_b_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(ALN_b1_box)
                .addComponent(ALN_b2_box))
        );

        javax.swing.GroupLayout ALN_PanelLayout = new javax.swing.GroupLayout(ALN_Panel);
        ALN_Panel.setLayout(ALN_PanelLayout);
        ALN_PanelLayout.setHorizontalGroup(
            ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ALN_PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ALN_PanelLayout.createSequentialGroup()
                        .addComponent(ALN_n_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ALN_n_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ALN_t_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ALN_t_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ALN_PanelLayout.createSequentialGroup()
                        .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ALN_PanelLayout.createSequentialGroup()
                                .addComponent(ALN_o_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ALN_o_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ALN_PanelLayout.createSequentialGroup()
                                .addComponent(ALN_e_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ALN_e_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ALN_PanelLayout.createSequentialGroup()
                                .addComponent(ALN_d_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ALN_d_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ALN_PanelLayout.createSequentialGroup()
                                .addComponent(ALN_M_box)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ALN_M_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ALN_PanelLayout.createSequentialGroup()
                                .addComponent(ALN_O_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ALN_O_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ALN_PanelLayout.createSequentialGroup()
                                .addComponent(ALN_E_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ALN_E_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ALN_PanelLayout.createSequentialGroup()
                        .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ALN_PanelLayout.createSequentialGroup()
                                .addComponent(ALN_i_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ALN_i_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ALN_PanelLayout.createSequentialGroup()
                                .addComponent(ALN_k_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ALN_k_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ALN_PanelLayout.createSequentialGroup()
                                .addComponent(ALN_R_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ALN_R_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ALN_PanelLayout.createSequentialGroup()
                                .addComponent(ALN_B_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ALN_B_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ALN_PanelLayout.createSequentialGroup()
                        .addComponent(ALN_c_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ALN_N_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ALN_I_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ALN_PanelLayout.createSequentialGroup()
                        .addComponent(ALN_l_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ALN_l_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ALN_q_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ALN_q_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        ALN_PanelLayout.setVerticalGroup(
            ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ALN_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ALN_n_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ALN_n_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ALN_t_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ALN_t_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ALN_PanelLayout.createSequentialGroup()
                        .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ALN_o_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ALN_o_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ALN_e_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ALN_e_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ALN_d_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ALN_d_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ALN_PanelLayout.createSequentialGroup()
                        .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ALN_M_box)
                            .addComponent(ALN_M_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ALN_O_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ALN_O_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ALN_E_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ALN_E_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ALN_i_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ALN_i_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ALN_R_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ALN_R_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ALN_l_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ALN_l_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ALN_q_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ALN_q_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ALN_k_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ALN_k_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ALN_B_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ALN_B_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ALN_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ALN_c_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ALN_N_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ALN_I_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Options.addTab("aln and bwasw", ALN_Panel);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("ALN Post treatment"));
        jPanel8.setPreferredSize(new java.awt.Dimension(240, 47));

        BWA_ALN_PostTreatment_buttons.add(ALN_PT_samse_button);
        ALN_PT_samse_button.setText("samse");
        ALN_PT_samse_button.setName("ALN_PT_samse_button"); // NOI18N
        ALN_PT_samse_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_PT_samse_buttonActionPerformed(evt);
            }
        });

        BWA_ALN_PostTreatment_buttons.add(ALN_PT_sampe_button);
        ALN_PT_sampe_button.setText("sampe");
        ALN_PT_sampe_button.setName("ALN_PT_sampe_button"); // NOI18N
        ALN_PT_sampe_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_PT_sampe_buttonActionPerformed(evt);
            }
        });

        BWA_ALN_PostTreatment_buttons.add(ALN_PT_NOTUSED_button);
        ALN_PT_NOTUSED_button.setText("NotUsed");
        ALN_PT_NOTUSED_button.setName("ALN_PT_NOTUSED_button"); // NOI18N
        ALN_PT_NOTUSED_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ALN_PT_NOTUSED_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(ALN_PT_NOTUSED_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ALN_PT_samse_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ALN_PT_sampe_button))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(ALN_PT_samse_button)
                .addComponent(ALN_PT_sampe_button)
                .addComponent(ALN_PT_NOTUSED_button))
        );

        reset_jButton3.setText("Reset default value");
        reset_jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_jButton3ActionPerformed(evt);
            }
        });

        stop_jButton4.setText("Stop");
        stop_jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop_jButton4ActionPerformed(evt);
            }
        });

        run_jButton5.setText("Run");
        run_jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_jButton5ActionPerformed(evt);
            }
        });

        ClosejButton6.setText("Close");
        ClosejButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClosejButton6ActionPerformed(evt);
            }
        });

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Post Treatment options"));

        SAMPE_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("SAMPE Options"));
        SAMPE_Panel.setName("SAMPE_Panel"); // NOI18N
        SAMPE_Panel.setPreferredSize(new java.awt.Dimension(253, 172));

        SAMPE_n_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(0), null, Integer.valueOf(1)));
        SAMPE_n_value.setMinimumSize(new java.awt.Dimension(100, 28));
        SAMPE_n_value.setName("SAMPE_n_value"); // NOI18N
        SAMPE_n_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SAMPE_n_spinner_value(evt);
            }
        });

        SAMPE_n_box.setText("-n");
        SAMPE_n_box.setName("SAMPE_n_box"); // NOI18N
        SAMPE_n_box.setPreferredSize(new java.awt.Dimension(45, 24));
        SAMPE_n_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAMPE_n_boxActionPerformed(evt);
            }
        });

        SAMPE_o_box.setText("-o");
        SAMPE_o_box.setName("SAMPE_o_box"); // NOI18N
        SAMPE_o_box.setPreferredSize(new java.awt.Dimension(45, 24));
        SAMPE_o_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAMPE_o_boxActionPerformed(evt);
            }
        });

        SAMPE_N_box.setText("-N");
        SAMPE_N_box.setName("SAMPE_N_box"); // NOI18N
        SAMPE_N_box.setPreferredSize(new java.awt.Dimension(45, 24));
        SAMPE_N_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAMPE_N_boxActionPerformed(evt);
            }
        });

        SAMPE_N_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(0), null, Integer.valueOf(1)));
        SAMPE_N_value.setMinimumSize(new java.awt.Dimension(100, 28));
        SAMPE_N_value.setName("SAMPE_N_value"); // NOI18N
        SAMPE_N_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SAMPE_N_spinner_value(evt);
            }
        });

        SAMPE_o_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100000), Integer.valueOf(1), null, Integer.valueOf(1)));
        SAMPE_o_value.setMinimumSize(new java.awt.Dimension(100, 28));
        SAMPE_o_value.setName("SAMPE_o_value"); // NOI18N
        SAMPE_o_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SAMPE_o_spinner_value(evt);
            }
        });

        SAMPE_a_box.setText("-a");
        SAMPE_a_box.setName("SAMPE_a_box"); // NOI18N
        SAMPE_a_box.setPreferredSize(new java.awt.Dimension(45, 24));
        SAMPE_a_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAMPE_a_boxActionPerformed(evt);
            }
        });

        SAMPE_a_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(500), Integer.valueOf(1), null, Integer.valueOf(1)));
        SAMPE_a_value.setMinimumSize(new java.awt.Dimension(100, 28));
        SAMPE_a_value.setName("SAMPE_a_value"); // NOI18N
        SAMPE_a_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SAMPE_a_spinner_value(evt);
            }
        });

        SAMPE_P_box.setText("-P");
        SAMPE_P_box.setName("SAMPE_P_box"); // NOI18N
        SAMPE_P_box.setPreferredSize(new java.awt.Dimension(45, 24));
        SAMPE_P_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAMPE_P_boxActionPerformed(evt);
            }
        });

        SAMPE_r_text.setName("SAMPE_r_text"); // NOI18N
        SAMPE_r_text.setPreferredSize(new java.awt.Dimension(190, 27));
        SAMPE_r_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SAMPE_r_textFocusLost(evt);
            }
        });

        SAMPE_r_box.setText("-r");
        SAMPE_r_box.setName("SAMPE_r_box"); // NOI18N
        SAMPE_r_box.setPreferredSize(new java.awt.Dimension(45, 24));
        SAMPE_r_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAMPE_r_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SAMPE_PanelLayout = new javax.swing.GroupLayout(SAMPE_Panel);
        SAMPE_Panel.setLayout(SAMPE_PanelLayout);
        SAMPE_PanelLayout.setHorizontalGroup(
            SAMPE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SAMPE_PanelLayout.createSequentialGroup()
                .addComponent(SAMPE_r_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SAMPE_r_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(SAMPE_PanelLayout.createSequentialGroup()
                .addComponent(SAMPE_a_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SAMPE_a_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SAMPE_P_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(SAMPE_PanelLayout.createSequentialGroup()
                .addComponent(SAMPE_o_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SAMPE_o_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(SAMPE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(SAMPE_PanelLayout.createSequentialGroup()
                    .addComponent(SAMPE_N_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(SAMPE_N_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(SAMPE_PanelLayout.createSequentialGroup()
                    .addComponent(SAMPE_n_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(SAMPE_n_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        SAMPE_PanelLayout.setVerticalGroup(
            SAMPE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SAMPE_PanelLayout.createSequentialGroup()
                .addGroup(SAMPE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SAMPE_a_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SAMPE_a_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SAMPE_P_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SAMPE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SAMPE_o_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SAMPE_o_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SAMPE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SAMPE_n_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SAMPE_n_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SAMPE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SAMPE_N_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SAMPE_N_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SAMPE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SAMPE_r_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SAMPE_r_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        SAMSE_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("SAMSE Options"));
        SAMSE_Panel.setName("SAMSE_Panel"); // NOI18N
        SAMSE_Panel.setPreferredSize(new java.awt.Dimension(253, 96));

        SAMSE_n_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(0), null, Integer.valueOf(1)));
        SAMSE_n_value.setMinimumSize(new java.awt.Dimension(100, 28));
        SAMSE_n_value.setName("SAMSE_n_value"); // NOI18N
        SAMSE_n_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SAMSE_n_spinner_value(evt);
            }
        });

        SAMSE_n_box.setText("-n");
        SAMSE_n_box.setName("SAMSE_n_box"); // NOI18N
        SAMSE_n_box.setPreferredSize(new java.awt.Dimension(45, 24));
        SAMSE_n_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAMSE_n_boxActionPerformed(evt);
            }
        });

        SAMSE_r_box.setText("-r");
        SAMSE_r_box.setName("SAMSE_r_box"); // NOI18N
        SAMSE_r_box.setPreferredSize(new java.awt.Dimension(45, 24));
        SAMSE_r_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAMSE_r_boxActionPerformed(evt);
            }
        });

        SAMSE_r_text.setName("SAMSE_r_text"); // NOI18N
        SAMSE_r_text.setPreferredSize(new java.awt.Dimension(190, 27));
        SAMSE_r_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SAMSE_r_textFocusLost(evt);
            }
        });

        javax.swing.GroupLayout SAMSE_PanelLayout = new javax.swing.GroupLayout(SAMSE_Panel);
        SAMSE_Panel.setLayout(SAMSE_PanelLayout);
        SAMSE_PanelLayout.setHorizontalGroup(
            SAMSE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SAMSE_PanelLayout.createSequentialGroup()
                .addComponent(SAMSE_n_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SAMSE_n_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(SAMSE_PanelLayout.createSequentialGroup()
                .addComponent(SAMSE_r_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SAMSE_r_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        SAMSE_PanelLayout.setVerticalGroup(
            SAMSE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SAMSE_PanelLayout.createSequentialGroup()
                .addGroup(SAMSE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SAMSE_n_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SAMSE_n_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SAMSE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SAMSE_r_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SAMSE_r_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SAMPE_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(SAMSE_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addComponent(SAMSE_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SAMPE_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        M_IDG_main_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Indexed Options Genome"));
        M_IDG_main_panel.setName("M_IDG_main_panel"); // NOI18N
        M_IDG_main_panel.setPreferredSize(new java.awt.Dimension(358, 159));

        IDG_selected_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose_an_indexed_Genome" }));
        IDG_selected_ComboBox.setName("IDG_selected_ComboBox"); // NOI18N
        IDG_selected_ComboBox.setPreferredSize(new java.awt.Dimension(330, 27));
        IDG_selected_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_selected_ComboBoxActionPerformed(evt);
            }
        });

        IDG_r_text.setName("IDG_r_text"); // NOI18N
        IDG_r_text.setPreferredSize(new java.awt.Dimension(330, 27));
        IDG_r_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_r_textActionPerformed(evt);
            }
        });

        jLabel2.setText("Indexed Genome Repertory :");

        jLabel3.setText("Select an indexed genome");

        IDG_Update_button.setText("Update");
        IDG_Update_button.setName("IDG_Update_button"); // NOI18N
        IDG_Update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_Update_buttonActionPerformed(evt);
            }
        });

        IDG_change_button.setText("Change");
        IDG_change_button.setName("IDG_change_button"); // NOI18N
        IDG_change_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_change_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout M_IDG_main_panelLayout = new javax.swing.GroupLayout(M_IDG_main_panel);
        M_IDG_main_panel.setLayout(M_IDG_main_panelLayout);
        M_IDG_main_panelLayout.setHorizontalGroup(
            M_IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(M_IDG_main_panelLayout.createSequentialGroup()
                .addGroup(M_IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(M_IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IDG_change_button, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(IDG_Update_button, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addComponent(IDG_r_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(IDG_selected_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        M_IDG_main_panelLayout.setVerticalGroup(
            M_IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(M_IDG_main_panelLayout.createSequentialGroup()
                .addGroup(M_IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(IDG_change_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDG_r_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(M_IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(IDG_Update_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDG_selected_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel4.setText("Indexed Genome from");

        BWA_IDG_source_buttons.add(M_IDG_workflow_button);
        M_IDG_workflow_button.setText("Workflow");
        M_IDG_workflow_button.setName("M_IDG_workflow_button"); // NOI18N
        M_IDG_workflow_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_IDG_workflow_buttonActionPerformed(evt);
            }
        });

        BWA_IDG_source_buttons.add(M_IDG_directory_button);
        M_IDG_directory_button.setText("Directory");
        M_IDG_directory_button.setName("M_IDG_directory_button"); // NOI18N
        M_IDG_directory_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_IDG_directory_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_IDG_workflow_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_IDG_directory_button))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(M_IDG_main_panel, 346, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(M_IDG_workflow_button)
                    .addComponent(M_IDG_directory_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_IDG_main_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(reset_jButton3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(stop_jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(run_jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(ClosejButton6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(223, 223, 223))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Options, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(reset_jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stop_jButton4)
                            .addComponent(run_jButton5)
                            .addComponent(ClosejButton6)))
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(307, 307, 307))
        );

        Options.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 863, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 929, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BwaMapEditor.addTab("Bwa Mapping", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addComponent(BwaMapEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BwaMapEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        BwaMapEditor.getAccessibleContext().setAccessibleName("BwaEditors");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void BwaMapEditorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_BwaMapEditorComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_BwaMapEditorComponentShown
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void ClosejButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClosejButton6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_ClosejButton6ActionPerformed
    
    private void run_jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_jButton5ActionPerformed
        // TODO add your handling code here:
        if (this.properties.isSet("ClassName")) {
            this.parent_workflow.workflow.updateDependance();
            programs prog=new programs(parent_workflow.workbox.getCurrentWorkflows());
            prog.Run(properties);
        }
    }//GEN-LAST:event_run_jButton5ActionPerformed
    
    private void stop_jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop_jButton4ActionPerformed
        // TODO add your handling code here:
        properties.put("Status", Config.status_nothing);
        properties.killThread();
    }//GEN-LAST:event_stop_jButton4ActionPerformed
    
    private void reset_jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_jButton3ActionPerformed
        // TODO add your handling code here:
        properties.load();             //--reload current properties from file
        this.setProperties(properties);//--Update current field
        //this.display(properties); // Doesn't work
        this.setVisible(false);
    }//GEN-LAST:event_reset_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        properties.put("Name", this.name_jTextField1.getText());
    }//GEN-LAST:event_jButton2ActionPerformed
                                                                        
    private void name_jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_jTextField1ActionPerformed
                                
    private void O_mem_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_mem_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(O_mem_button);
        menuEvent(ALN_PT_NOTUSED_button);
    }//GEN-LAST:event_O_mem_buttonActionPerformed
    
    private void ALN_PT_samse_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_PT_samse_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(ALN_PT_samse_button);
    }//GEN-LAST:event_ALN_PT_samse_buttonActionPerformed
    
    private void ALN_PT_sampe_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_PT_sampe_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(ALN_PT_sampe_button);
    }//GEN-LAST:event_ALN_PT_sampe_buttonActionPerformed
                
    private void O_aln_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_aln_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(O_aln_button);
        menuEvent(ALN_PT_samse_button);
    }//GEN-LAST:event_O_aln_buttonActionPerformed
    
    private void O_bwasw_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_bwasw_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(O_bwasw_button);
        menuEvent(ALN_PT_NOTUSED_button);
    }//GEN-LAST:event_O_bwasw_buttonActionPerformed
                                                                                                                                                                                                                                                                                                                                    
    private void IDG_change_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_change_buttonActionPerformed
        // TODO add your handling code here:
        JFileChooser d;
        
        if (this.IDG_r_text.getText().isEmpty()) {
            d=new JFileChooser(config.getExplorerPath());
        } else {
            d=new JFileChooser(this.IDG_r_text.getText());
        }
        
        d.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        d.setAcceptAllFileFilterUsed(false);
        d.setMultiSelectionEnabled(false);
        int result = d.showOpenDialog(this);
        
        if (result==JFileChooser.APPROVE_OPTION) {           
            File dir = d.getSelectedFile();
            
            // Set the text
            String s = dir.getAbsolutePath();
            IDG_r_text.setText(s);
            properties.put(IDG_r_text.getName(),s);
                
            // Set the combobox
            setIDGCombobox(s);
        }
    }//GEN-LAST:event_IDG_change_buttonActionPerformed
    
    private void IDG_Update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_Update_buttonActionPerformed
        // TODO add your handling code here:
        if (!IDG_r_text.getText().equals("")){
            setIDGCombobox(IDG_r_text.getText());
        }
    }//GEN-LAST:event_IDG_Update_buttonActionPerformed

    private void setIDGCombobox (String path) {
        File dir = new File(path);
        IDG_selected_ComboBox.removeAllItems();
        IDG_selected_ComboBox.addItem("Choose_an_indexed_Genome");
        Hashtable<String,String> h = new Hashtable<String,String>();
        String s = "";
        for (File f:dir.listFiles()) {
            /**
            Problem if it's a .fa file
            */
            //if (f.getName().matches(".*\\.fasta$")){
            if (f.getName().matches("fasta|fa")){
                s = f.getName().replaceAll("\\.fasta","");
                if (!h.containsKey(s)){
                    h.put(s,"");
                    IDG_selected_ComboBox.addItem(s);
                }
            }
        }
        IDG_selected_ComboBox.setSelectedIndex(0);
    }

    private void IDG_r_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_r_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDG_r_textActionPerformed

    private void IDG_selected_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_selected_ComboBoxActionPerformed
        // TODO add your handling code here:
        properties.put(IDG_selected_ComboBox.getName(),IDG_selected_ComboBox.getSelectedIndex());        
    }//GEN-LAST:event_IDG_selected_ComboBoxActionPerformed

    private void M_IDG_workflow_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_IDG_workflow_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(M_IDG_directory_button.getName())) {
            properties.remove(M_IDG_directory_button.getName());
        }
        buttonEventSpinner(M_IDG_workflow_button,null);
        M_IDG_main_panel.setVisible(false);
    }//GEN-LAST:event_M_IDG_workflow_buttonActionPerformed

    private void M_IDG_directory_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_IDG_directory_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(M_IDG_workflow_button.getName())) {
            properties.remove(M_IDG_workflow_button.getName());
        }
        buttonEventSpinner(M_IDG_directory_button,null);
        M_IDG_main_panel.setVisible(true);
    }//GEN-LAST:event_M_IDG_directory_buttonActionPerformed

    private void MEM_d_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_d_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_d_box,MEM_d_value);
    }//GEN-LAST:event_MEM_d_boxActionPerformed

    private void MEM_d_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_d_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_d_box,MEM_d_value);
    }//GEN-LAST:event_MEM_d_spinner_value

    private void MEM_t_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_t_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_t_box,MEM_t_value);
    }//GEN-LAST:event_MEM_t_boxActionPerformed

    private void MEM_t_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_t_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_t_box,MEM_t_value);
    }//GEN-LAST:event_MEM_t_spinner_value

    private void MEM_k_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_k_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_k_box,MEM_k_value);
    }//GEN-LAST:event_MEM_k_boxActionPerformed

    private void MEM_k_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_k_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_k_box,MEM_k_value);
    }//GEN-LAST:event_MEM_k_spinner_value

    private void MEM_w_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_w_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_w_box,MEM_w_value);
    }//GEN-LAST:event_MEM_w_boxActionPerformed

    private void MEM_w_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_w_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_w_box,MEM_w_value);
    }//GEN-LAST:event_MEM_w_spinner_value

    private void MEM_r_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_r_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_r_box,MEM_r_value);
    }//GEN-LAST:event_MEM_r_boxActionPerformed

    private void MEM_r_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_r_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_r_box,MEM_r_value);
    }//GEN-LAST:event_MEM_r_spinner_value

    private void MEM_c_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_c_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_c_box,MEM_c_value);
    }//GEN-LAST:event_MEM_c_boxActionPerformed

    private void MEM_c_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_c_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_c_box,MEM_c_value);
    }//GEN-LAST:event_MEM_c_spinner_value

    private void MEM_A_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_A_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_A_box,MEM_A_value);
    }//GEN-LAST:event_MEM_A_boxActionPerformed

    private void MEM_A_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_A_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_A_box,MEM_A_value);
    }//GEN-LAST:event_MEM_A_spinner_value

    private void MEM_B_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_B_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_B_box,MEM_B_value);
    }//GEN-LAST:event_MEM_B_boxActionPerformed

    private void MEM_O_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_O_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_O_box,MEM_O_value);
    }//GEN-LAST:event_MEM_O_boxActionPerformed

    private void MEM_E_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_E_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_E_box,MEM_E_value);
    }//GEN-LAST:event_MEM_E_boxActionPerformed

    private void MEM_L_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_L_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_L_box,MEM_L_value);
    }//GEN-LAST:event_MEM_L_boxActionPerformed

    private void MEM_U_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_U_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_U_box,MEM_U_value);
    }//GEN-LAST:event_MEM_U_boxActionPerformed

    private void MEM_T_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_T_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_T_box,MEM_T_value);
    }//GEN-LAST:event_MEM_T_boxActionPerformed

    private void MEM_v_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_v_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_v_box,MEM_v_value);
    }//GEN-LAST:event_MEM_v_boxActionPerformed

    private void MEM_v_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_v_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_v_box,MEM_v_value);
    }//GEN-LAST:event_MEM_v_spinner_value

    private void MEM_T_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_T_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_T_box,MEM_T_value);
    }//GEN-LAST:event_MEM_T_spinner_value

    private void MEM_U_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_U_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_U_box,MEM_U_value);
    }//GEN-LAST:event_MEM_U_spinner_value

    private void MEM_L_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_L_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_L_box,MEM_L_value);
    }//GEN-LAST:event_MEM_L_spinner_value

    private void MEM_E_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_E_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_E_box,MEM_E_value);
    }//GEN-LAST:event_MEM_E_spinner_value

    private void MEM_O_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_O_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_O_box,MEM_O_value);
    }//GEN-LAST:event_MEM_O_spinner_value

    private void MEM_B_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MEM_B_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(MEM_B_box,MEM_B_value);
    }//GEN-LAST:event_MEM_B_spinner_value

    private void MEM_R_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_R_boxActionPerformed
        // TODO add your handling code here:
        boxEventText(MEM_R_box,MEM_R_text);
    }//GEN-LAST:event_MEM_R_boxActionPerformed

    private void MEM_M_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_M_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_M_box,null);
    }//GEN-LAST:event_MEM_M_boxActionPerformed

    private void MEM_H_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_H_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_H_box,null);
    }//GEN-LAST:event_MEM_H_boxActionPerformed

    private void MEM_a_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_a_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_a_box,null);
    }//GEN-LAST:event_MEM_a_boxActionPerformed

    private void MEM_C_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_C_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_C_box,null);
    }//GEN-LAST:event_MEM_C_boxActionPerformed

    private void MEM_P_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_P_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_P_box,null);
    }//GEN-LAST:event_MEM_P_boxActionPerformed

    private void MEM_p_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_p_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(MEM_p_box,null);
    }//GEN-LAST:event_MEM_p_boxActionPerformed

    private void MEM_R_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEM_R_textActionPerformed
        // TODO add your handling code here:
        boxEventText(MEM_R_box,MEM_R_text);
    }//GEN-LAST:event_MEM_R_textActionPerformed

    private void ALN_n_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_n_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_n_box,ALN_n_value);
    }//GEN-LAST:event_ALN_n_spinner_value

    private void ALN_n_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_n_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_n_box,ALN_n_value);
    }//GEN-LAST:event_ALN_n_boxActionPerformed

    private void ALN_o_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_o_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_o_box,ALN_o_value);
    }//GEN-LAST:event_ALN_o_boxActionPerformed

    private void ALN_o_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_o_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_o_box,ALN_o_value);
    }//GEN-LAST:event_ALN_o_spinner_value

    private void ALN_e_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_e_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_e_box,ALN_e_value);
    }//GEN-LAST:event_ALN_e_boxActionPerformed

    private void ALN_e_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_e_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_e_box,ALN_e_value);
    }//GEN-LAST:event_ALN_e_spinner_value

    private void ALN_d_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_d_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_d_box,ALN_d_value);
    }//GEN-LAST:event_ALN_d_boxActionPerformed

    private void ALN_d_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_d_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_d_box,ALN_d_value);
    }//GEN-LAST:event_ALN_d_spinner_value

    private void ALN_M_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_M_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_M_box,ALN_M_value);
    }//GEN-LAST:event_ALN_M_boxActionPerformed

    private void ALN_M_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_M_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_M_box,ALN_M_value);
    }//GEN-LAST:event_ALN_M_spinner_value

    private void ALN_O_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_O_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_O_box,ALN_O_value);
    }//GEN-LAST:event_ALN_O_spinner_value

    private void ALN_O_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_O_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_O_box,ALN_O_value);
    }//GEN-LAST:event_ALN_O_boxActionPerformed

    private void ALN_E_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_E_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_E_box,ALN_E_value);
    }//GEN-LAST:event_ALN_E_boxActionPerformed

    private void ALN_E_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_E_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_E_box,ALN_E_value);
    }//GEN-LAST:event_ALN_E_spinner_value

    private void ALN_R_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_R_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_R_box,ALN_R_value);
    }//GEN-LAST:event_ALN_R_boxActionPerformed

    private void ALN_B_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_B_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_B_box,ALN_B_value);
    }//GEN-LAST:event_ALN_B_spinner_value

    private void ALN_q_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_q_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_q_box,ALN_q_value);
    }//GEN-LAST:event_ALN_q_spinner_value

    private void ALN_q_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_q_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_q_box,ALN_q_value);
    }//GEN-LAST:event_ALN_q_boxActionPerformed

    private void ALN_R_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_R_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_R_box,ALN_R_value);
    }//GEN-LAST:event_ALN_R_spinner_value

    private void ALN_B_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_B_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_B_box,ALN_B_value);
    }//GEN-LAST:event_ALN_B_boxActionPerformed

    private void ALN_i_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_i_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_i_box,ALN_i_value);
    }//GEN-LAST:event_ALN_i_spinner_value

    private void ALN_i_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_i_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_i_box,ALN_i_value);
    }//GEN-LAST:event_ALN_i_boxActionPerformed

    private void ALN_l_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_l_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_l_box,ALN_l_value);
    }//GEN-LAST:event_ALN_l_boxActionPerformed

    private void ALN_l_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_l_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_l_box,ALN_l_value);
    }//GEN-LAST:event_ALN_l_spinner_value

    private void ALN_k_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_k_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_k_box,ALN_k_value);
    }//GEN-LAST:event_ALN_k_spinner_value

    private void ALN_k_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_k_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_k_box,ALN_k_value);
    }//GEN-LAST:event_ALN_k_boxActionPerformed

    private void ALN_t_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ALN_t_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(ALN_t_box,ALN_t_value);
    }//GEN-LAST:event_ALN_t_spinner_value

    private void ALN_t_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_t_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_t_box,ALN_t_value);
    }//GEN-LAST:event_ALN_t_boxActionPerformed

    private void ALN_c_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_c_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_c_box,null);
    }//GEN-LAST:event_ALN_c_boxActionPerformed

    private void ALN_N_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_N_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_N_box,null);
    }//GEN-LAST:event_ALN_N_boxActionPerformed

    private void ALN_I_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_I_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_I_box,null);
    }//GEN-LAST:event_ALN_I_boxActionPerformed

    private void ALN_b_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_b_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_b_box,null);
        cleanALNbOptions(ALN_b_box.getName());
    }//GEN-LAST:event_ALN_b_boxActionPerformed

    private void ALN_b1_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_b1_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_b1_box,null);
        cleanALNbOptions(ALN_b1_box.getName());
    }//GEN-LAST:event_ALN_b1_boxActionPerformed

    private void ALN_b2_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_b2_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(ALN_b2_box,null);
        cleanALNbOptions(ALN_b2_box.getName());
    }//GEN-LAST:event_ALN_b2_boxActionPerformed

    private void SAMPE_n_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SAMPE_n_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(SAMPE_n_box,SAMPE_n_value);
    }//GEN-LAST:event_SAMPE_n_spinner_value

    private void SAMPE_n_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAMPE_n_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(SAMPE_n_box,SAMPE_n_value);
    }//GEN-LAST:event_SAMPE_n_boxActionPerformed

    private void SAMPE_o_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAMPE_o_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(SAMPE_o_box,SAMPE_o_value);
    }//GEN-LAST:event_SAMPE_o_boxActionPerformed

    private void SAMPE_N_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAMPE_N_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(SAMPE_N_box,SAMPE_N_value);
    }//GEN-LAST:event_SAMPE_N_boxActionPerformed

    private void SAMPE_N_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SAMPE_N_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(SAMPE_N_box,SAMPE_N_value);
    }//GEN-LAST:event_SAMPE_N_spinner_value

    private void SAMPE_o_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SAMPE_o_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(SAMPE_o_box,SAMPE_o_value);
    }//GEN-LAST:event_SAMPE_o_spinner_value

    private void SAMPE_a_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAMPE_a_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(SAMPE_a_box,SAMPE_a_value);
    }//GEN-LAST:event_SAMPE_a_boxActionPerformed

    private void SAMPE_a_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SAMPE_a_spinner_value
        // TODO add your handling code here:
        boxEventSpinner(SAMPE_a_box,SAMPE_a_value);
    }//GEN-LAST:event_SAMPE_a_spinner_value

    private void SAMPE_P_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAMPE_P_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(SAMPE_P_box,null);
    }//GEN-LAST:event_SAMPE_P_boxActionPerformed

    private void SAMSE_n_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SAMSE_n_spinner_value
        // TODO add your handling code hre:
        boxEventSpinner(SAMSE_n_box,SAMSE_n_value);
    }//GEN-LAST:event_SAMSE_n_spinner_value

    private void SAMSE_n_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAMSE_n_boxActionPerformed
        // TODO add your handling code here:
        boxEventSpinner(SAMSE_n_box,SAMSE_n_value);
    }//GEN-LAST:event_SAMSE_n_boxActionPerformed

    private void SAMSE_r_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAMSE_r_boxActionPerformed
        // TODO add your handling code here:
        boxEventText(SAMSE_r_box,SAMSE_r_text);
    }//GEN-LAST:event_SAMSE_r_boxActionPerformed

    private void SAMPE_r_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAMPE_r_boxActionPerformed
        // TODO add your handling code here:
        boxEventText(SAMPE_n_box,SAMPE_r_text);
    }//GEN-LAST:event_SAMPE_r_boxActionPerformed

    private void MEM_R_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MEM_R_textFocusLost
        // TODO add your handling code here:
        boxEventText(MEM_R_box,MEM_R_text);
    }//GEN-LAST:event_MEM_R_textFocusLost

    private void SAMSE_r_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SAMSE_r_textFocusLost
        // TODO add your handling code here:
        boxEventText(SAMSE_r_box,SAMSE_r_text);
    }//GEN-LAST:event_SAMSE_r_textFocusLost

    private void SAMPE_r_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SAMPE_r_textFocusLost
        // TODO add your handling code here:
        boxEventText(SAMPE_r_box,SAMPE_r_text);
    }//GEN-LAST:event_SAMPE_r_textFocusLost

    private void ALN_PT_NOTUSED_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ALN_PT_NOTUSED_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(ALN_PT_NOTUSED_button);
    }//GEN-LAST:event_ALN_PT_NOTUSED_buttonActionPerformed
    
    
    /**
     * CleansValues
     * /!\ DONT FORGET TO ADD A NAME in the design for all /!\
     * @param button_name
     */
    private void cleanMapButtons (String s) {
        String[] sTab = {
            O_aln_button.getName(),
            O_bwasw_button.getName(),
            O_mem_button.getName()
        };
        for (String sT:sTab)
            if (!s.equals(sT) && properties.isSet(sT))
                properties.remove(sT);
    }
    
    private void cleanTypeLib (String s) {
        String[] sTab = {
            ALN_PT_samse_button.getName(),
            ALN_PT_sampe_button.getName(),
            ALN_PT_NOTUSED_button.getName()
        };
        for (String sT:sTab)
            if (!s.equals(sT) && properties.isSet(sT))
                properties.remove(sT);
        
        if (properties.isSet(O_aln_button.getName())){
            if (!properties.isSet(ALN_PT_sampe_button.getName())&&
                !properties.isSet(ALN_PT_samse_button.getName())
                ){
                properties.put(ALN_PT_samse_button.getName(),true);
                ALN_PT_samse_button.setSelected(true);
            }
            ALN_PT_NOTUSED_button.setSelected(false);
            ALN_PT_NOTUSED_button.setEnabled(false);
            ALN_PT_samse_button.setEnabled(true);
            ALN_PT_sampe_button.setEnabled(true);
            properties.remove(ALN_PT_NOTUSED_button.getName());
        } else {
            ALN_PT_NOTUSED_button.setSelected(true);
            ALN_PT_samse_button.setEnabled(false);
            ALN_PT_sampe_button.setEnabled(false);
            samseMappingFields(false);
            sampeMappingFields(false);
            if (properties.isSet(ALN_PT_sampe_button.getName()))
                properties.remove(ALN_PT_sampe_button.getName());
            if (properties.isSet(ALN_PT_samse_button.getName()))
                properties.remove(ALN_PT_samse_button.getName());
        }
    }
    
    private void cleanALNbOptions (String s) {
        if (s.equals(ALN_b_box.getName())){
            ALN_b1_box.setSelected(false);
            ALN_b2_box.setSelected(false);
        }
        if (s.equals(ALN_b1_box.getName())){
            ALN_b_box.setSelected(false);
            ALN_b2_box.setSelected(false);
        }
        if (s.equals(ALN_b2_box.getName())){
            ALN_b1_box.setSelected(false);
            ALN_b_box.setSelected(false);
        }
        
        String[] sTab = {
            ALN_b_box.getName(),
            ALN_b1_box.getName(),
            ALN_b2_box.getName()
        };
        for (String sT:sTab)
            if (!s.equals(sT) && properties.isSet(sT))
                properties.remove(sT);
    }
    
    
    /**
     * Save Values
     * /!\ DONT FORGET TO ADD A NAME in the design for all /!\
     * @param Save_Values
     */
    //For Menu
    private void menuEvent(javax.swing.JRadioButton b){
        if (b.isSelected()==true){
            properties.put(b.getName(),b.isSelected());
        }
        if (b.equals(ALN_PT_samse_button)||
            b.equals(ALN_PT_sampe_button)||
            b.equals(ALN_PT_NOTUSED_button)
            )
            cleanTypeLib(b.getName());
        else cleanMapButtons(b.getName());
        menuFields();
    }
    //For Box
    private void boxEventSpinner(javax.swing.JCheckBox b,javax.swing.JSpinner s){
        if (b.isSelected()==true){
            if (s == null) {
                properties.put(b.getName(),b.isSelected());
            } else {
                s.setEnabled(true);
                properties.put(s.getName(),s.getValue());
                properties.put(b.getName(),s.getValue());
            }
        } else {
            properties.remove(b.getName());
            if (s != null){
                s.setEnabled(false);
            }
        }
    }
    //For Button and Spinner
    private void buttonEventSpinner(javax.swing.JRadioButton b,javax.swing.JSpinner s){
        if (b.isSelected()==true){
            if (s == null) {
                properties.put(b.getName(),b.isSelected());
            } else {
                s.setEnabled(true);
                properties.put(s.getName(),s.getValue());
                properties.put(b.getName(),s.getValue());
            }
        }
    }
    //For Button and text
    private void boxEventText(javax.swing.JCheckBox b,javax.swing.JTextField t){
        if (b.isSelected()==true){
            if (t == null) {
                properties.put(b.getName(),b.isSelected());
            } else {
                t.setEnabled(true);
                properties.put(t.getName(),t.getText());
                properties.put(b.getName(),b.isSelected());
            }
        } else {
            properties.remove(b.getName());
            if (t != null){
                t.setEnabled(false);
            }
        }
    }
    
    /**
     * Enable or disable fields of Options
     * @param enabled
     */
    
    private void menuFields(){
        if (properties.isSet(M_IDG_directory_button.getName())) {
            this.M_IDG_main_panel.setVisible(true);
        } else this.M_IDG_main_panel.setVisible(false);
        
        if (properties.isSet(O_aln_button.getName())) {
            this.Options.setSelectedIndex(1);
            alnMappingFields(true);
            memMappingFields(false);
        }
        if (properties.isSet(O_bwasw_button.getName())) {
            this.Options.setSelectedIndex(1);
            bwaswMappingFields(true);
            memMappingFields(false);
            sampeMappingFields(false);
            samseMappingFields(false);
        }
        if (properties.isSet(O_mem_button.getName())) {
            this.Options.setSelectedIndex(0);
            alnMappingFields(false);
            memMappingFields(true);
            sampeMappingFields(false);
            samseMappingFields(false);
        }
        if (properties.isSet(ALN_PT_sampe_button.getName())) {
            sampeMappingFields(true);
            samseMappingFields(false);
            cleanTypeLib(ALN_PT_sampe_button.getName());
        }
        if (properties.isSet(ALN_PT_samse_button.getName())) {
            sampeMappingFields(false);
            samseMappingFields(true);
            cleanTypeLib(ALN_PT_samse_button.getName());
        }
        if (properties.isSet(ALN_PT_NOTUSED_button.getName())) {
            sampeMappingFields(false);
            samseMappingFields(false);
            cleanTypeLib(ALN_PT_NOTUSED_button.getName());
        }
    }
    
    private void alnMappingFields(boolean enabled){
        this.ALN_Panel.setEnabled(enabled);
        
	this.ALN_B_box.setEnabled(enabled);
	if (properties.isSet(ALN_B_box.getName()) && ALN_B_box.isEnabled())
             ALN_B_value.setEnabled(true);
	else ALN_B_value.setEnabled(false);

	this.ALN_E_box.setEnabled(enabled);
	if (properties.isSet(ALN_E_box.getName()) && ALN_E_box.isEnabled())
             ALN_E_value.setEnabled(true);
	else ALN_E_value.setEnabled(false);

	this.ALN_I_box.setEnabled(enabled);
	
        this.ALN_M_box.setEnabled(enabled);
	if (properties.isSet(ALN_M_box.getName()) && ALN_M_box.isEnabled())
             ALN_M_value.setEnabled(true);
	else ALN_M_value.setEnabled(false);

	this.ALN_N_box.setEnabled(enabled);
        
	this.ALN_O_box.setEnabled(enabled);
	if (properties.isSet(ALN_O_box.getName()) && ALN_O_box.isEnabled())
             ALN_O_value.setEnabled(true);
	else ALN_O_value.setEnabled(false);

	this.ALN_R_box.setEnabled(enabled);
	if (properties.isSet(ALN_R_box.getName()) && ALN_R_box.isEnabled())
             ALN_R_value.setEnabled(true);
	else ALN_R_value.setEnabled(false);

	this.ALN_b1_box.setEnabled(enabled);
	this.ALN_b2_box.setEnabled(enabled);
	this.ALN_b_box.setEnabled(enabled);
	this.ALN_c_box.setEnabled(enabled);
        
	this.ALN_d_box.setEnabled(enabled);
	if (properties.isSet(ALN_d_box.getName()) && ALN_d_box.isEnabled())
             ALN_d_value.setEnabled(true);
	else ALN_d_value.setEnabled(false);

	this.ALN_e_box.setEnabled(enabled);
	if (properties.isSet(ALN_e_box.getName()) && ALN_e_box.isEnabled())
             ALN_e_value.setEnabled(true);
	else ALN_e_value.setEnabled(false);

	this.ALN_i_box.setEnabled(enabled);
	if (properties.isSet(ALN_i_box.getName()) && ALN_i_box.isEnabled())
             ALN_i_value.setEnabled(true);
	else ALN_i_value.setEnabled(false);

	this.ALN_k_box.setEnabled(enabled);
	if (properties.isSet(ALN_k_box.getName()) && ALN_k_box.isEnabled())
             ALN_k_value.setEnabled(true);
	else ALN_k_value.setEnabled(false);

	this.ALN_l_box.setEnabled(enabled);
	if (properties.isSet(ALN_l_box.getName()) && ALN_l_box.isEnabled())
             ALN_l_value.setEnabled(true);
	else ALN_l_value.setEnabled(false);

	this.ALN_n_box.setEnabled(enabled);
	if (properties.isSet(ALN_n_box.getName()) && ALN_n_box.isEnabled())
             ALN_n_value.setEnabled(true);
	else ALN_n_value.setEnabled(false);

	this.ALN_o_box.setEnabled(enabled);
	if (properties.isSet(ALN_o_box.getName()) && ALN_o_box.isEnabled())
             ALN_o_value.setEnabled(true);
	else ALN_o_value.setEnabled(false);

	this.ALN_q_box.setEnabled(enabled);
	if (properties.isSet(ALN_q_box.getName()) && ALN_q_box.isEnabled())
             ALN_q_value.setEnabled(true);
	else ALN_q_value.setEnabled(false);

	this.ALN_t_box.setEnabled(enabled);
	if (properties.isSet(ALN_t_box.getName()) && ALN_t_box.isEnabled())
             ALN_t_value.setEnabled(true);
	else ALN_t_value.setEnabled(false);
    }

    
    private void bwaswMappingFields(boolean enabled){
        alnMappingFields(enabled);
        
        // Removed UNUSED ALN Properties
	this.ALN_B_box.setEnabled(false);
        this.ALN_B_box.setSelected(false);
	if (properties.isSet(ALN_B_box.getName())) properties.remove(ALN_B_box.getName());
        this.ALN_B_value.setEnabled(false);
        
        this.ALN_I_box.setEnabled(false);
        this.ALN_I_box.setSelected(false);
        if (properties.isSet(ALN_I_box.getName())) properties.remove(ALN_I_box.getName());
	
        this.ALN_N_box.setEnabled(false);
        this.ALN_N_box.setSelected(false);
        if (properties.isSet(ALN_N_box.getName())) properties.remove(ALN_N_box.getName());
        
        this.ALN_b1_box.setEnabled(false);
        this.ALN_b1_box.setSelected(false);
	if (properties.isSet(ALN_b1_box.getName())) properties.remove(ALN_b1_box.getName());
        
        this.ALN_b2_box.setEnabled(false);
        this.ALN_b2_box.setSelected(false);
	if (properties.isSet(ALN_b2_box.getName())) properties.remove(ALN_b2_box.getName());
        
        
        this.ALN_b_box.setSelected(false);
        this.ALN_b_box.setEnabled(false);
        if (properties.isSet(ALN_b_box.getName())) properties.remove(ALN_b_box.getName());
	
        this.ALN_c_box.setEnabled(false);
        this.ALN_c_box.setSelected(false);
        if (properties.isSet(ALN_c_box.getName())) properties.remove(ALN_c_box.getName());
        
	this.ALN_k_box.setEnabled(false);
	this.ALN_k_box.setSelected(false);
        if (properties.isSet(ALN_k_box.getName())) properties.remove(ALN_k_box.getName());
        ALN_k_value.setEnabled(false);
        
	this.ALN_q_box.setEnabled(false);
	this.ALN_q_box.setSelected(false);
        if (properties.isSet(ALN_q_box.getName())) properties.remove(ALN_q_box.getName());
	this.ALN_q_value.setEnabled(false);
    }

    private void memMappingFields(boolean enabled){
        this.MEM_Panel.setEnabled(enabled);
        this.MEM_INPUT_panel.setEnabled(enabled);
        this.MEM_OUTPUT_panel.setEnabled(enabled);
        
	this.MEM_A_box.setEnabled(enabled);
	if (properties.isSet(MEM_A_box.getName()) && MEM_A_box.isEnabled())
             MEM_A_value.setEnabled(true);
	else MEM_A_value.setEnabled(false);

	this.MEM_B_box.setEnabled(enabled);
	if (properties.isSet(MEM_B_box.getName()) && MEM_B_box.isEnabled())
             MEM_B_value.setEnabled(true);
	else MEM_B_value.setEnabled(false);

	this.MEM_C_box.setEnabled(enabled);
	this.MEM_E_box.setEnabled(enabled);
	if (properties.isSet(MEM_E_box.getName()) && MEM_E_box.isEnabled())
             MEM_E_value.setEnabled(true);
	else MEM_E_value.setEnabled(false);

	this.MEM_H_box.setEnabled(enabled);
	this.MEM_L_box.setEnabled(enabled);
	if (properties.isSet(MEM_L_box.getName()) && MEM_L_box.isEnabled())
             MEM_L_value.setEnabled(true);
	else MEM_L_value.setEnabled(false);

	this.MEM_M_box.setEnabled(enabled);
	this.MEM_O_box.setEnabled(enabled);
	if (properties.isSet(MEM_O_box.getName()) && MEM_O_box.isEnabled())
             MEM_O_value.setEnabled(true);
	else MEM_O_value.setEnabled(false);

	this.MEM_P_box.setEnabled(enabled);
	this.MEM_R_box.setEnabled(enabled);
	if (properties.isSet(ALN_B_box.getName()) && ALN_B_box.isEnabled())
             ALN_B_value.setEnabled(true);
	else ALN_B_value.setEnabled(false);

	this.MEM_T_box.setEnabled(enabled);
	if (properties.isSet(MEM_T_box.getName()) && MEM_T_box.isEnabled())
             MEM_T_value.setEnabled(true);
	else MEM_T_value.setEnabled(false);

	this.MEM_U_box.setEnabled(enabled);
	if (properties.isSet(MEM_U_box.getName()) && MEM_U_box.isEnabled())
             MEM_U_value.setEnabled(true);
	else MEM_U_value.setEnabled(false);

	this.MEM_a_box.setEnabled(enabled);
	this.MEM_c_box.setEnabled(enabled);
	if (properties.isSet(MEM_c_box.getName()) && MEM_c_box.isEnabled())
             MEM_c_value.setEnabled(true);
	else MEM_c_value.setEnabled(false);

	this.MEM_d_box.setEnabled(enabled);
	if (properties.isSet(MEM_d_box.getName()) && MEM_d_box.isEnabled())
             MEM_d_value.setEnabled(true);
	else MEM_d_value.setEnabled(false);

	this.MEM_k_box.setEnabled(enabled);
	if (properties.isSet(MEM_k_box.getName()) && MEM_k_box.isEnabled())
             MEM_k_value.setEnabled(true);
	else MEM_k_value.setEnabled(false);

	this.MEM_p_box.setEnabled(enabled);
	this.MEM_r_box.setEnabled(enabled);
	if (properties.isSet(MEM_r_box.getName()) && MEM_r_box.isEnabled())
             MEM_r_value.setEnabled(true);
	else MEM_r_value.setEnabled(false);

	this.MEM_t_box.setEnabled(enabled);
	if (properties.isSet(MEM_t_box.getName()) && MEM_t_box.isEnabled())
             MEM_t_value.setEnabled(true);
	else MEM_t_value.setEnabled(false);

	this.MEM_v_box.setEnabled(enabled);
	if (properties.isSet(MEM_v_box.getName()) && MEM_v_box.isEnabled())
             MEM_v_value.setEnabled(true);
	else MEM_v_value.setEnabled(false);

	this.MEM_w_box.setEnabled(enabled);
	if (properties.isSet(MEM_w_box.getName()) && MEM_w_box.isEnabled())
             MEM_w_value.setEnabled(true);
	else MEM_w_value.setEnabled(false);
    }
    
    private void sampeMappingFields(boolean enabled){
        this.SAMPE_Panel.setEnabled(enabled);
        this.SAMPE_N_box.setEnabled(enabled);
        if (properties.isSet(SAMPE_N_box.getName()) && SAMPE_N_box.isEnabled())
             SAMPE_N_value.setEnabled(true);
        else SAMPE_N_value.setEnabled(false);

        this.SAMPE_P_box.setEnabled(enabled);
        this.SAMPE_a_box.setEnabled(enabled);
        if (properties.isSet(SAMPE_a_box.getName()) && SAMPE_a_box.isEnabled())
             SAMPE_a_value.setEnabled(true);
        else SAMPE_a_value.setEnabled(false);

        this.SAMPE_n_box.setEnabled(enabled);
        if (properties.isSet(SAMPE_n_box.getName()) && SAMPE_n_box.isEnabled())
             SAMPE_n_value.setEnabled(true);
        else SAMPE_n_value.setEnabled(false);

        this.SAMPE_o_box.setEnabled(enabled);
        if (properties.isSet(SAMPE_o_box.getName()) && SAMPE_o_box.isEnabled())
             SAMPE_o_value.setEnabled(true);
        else SAMPE_o_value.setEnabled(false);

        this.SAMPE_r_box.setEnabled(enabled);
        if (properties.isSet(SAMPE_r_box.getName()) && SAMPE_r_box.isEnabled())
             SAMPE_r_text.setEnabled(true);
        else SAMPE_r_text.setEnabled(false);
    }
    
    private void samseMappingFields(boolean enabled){
        this.SAMSE_Panel.setEnabled(enabled);
        
        this.SAMSE_n_box.setEnabled(enabled);
        if (properties.isSet(SAMSE_n_box.getName()) && SAMSE_n_box.isEnabled())
             SAMSE_n_value.setEnabled(true);
        else SAMSE_n_value.setEnabled(false);

        this.SAMSE_r_box.setEnabled(enabled);
        if (properties.isSet(SAMSE_r_box.getName()) && SAMSE_r_box.isEnabled())
             SAMSE_r_text.setEnabled(true);
        else SAMSE_r_text.setEnabled(false);
    }
    
    /**
     * Set Properties
     */
    
    public void setProperties(workflow_properties properties) {
        this.properties=properties;
        setTitle(properties.getName());
        //if (this.properties.isSet("Description")) this.Notice.setText(properties.get("Description"));
        
        // Properties Default Options
        this.defaultPgrmValues(properties);
    }

    public void setProperties(String filename, String path) {
        workflow_properties tmp=new workflow_properties();
        tmp.load(filename, path);
        this.properties=tmp;
        setTitle(properties.getName());
    }
    
    private void defaultPgrmValues(workflow_properties properties) {
        String[] sTab = {
            O_aln_button.getName(),
            O_bwasw_button.getName(),
            O_mem_button.getName()
        };
        boolean b = false;
        for (String sT:sTab)
            if (properties.isSet(sT))
                b = true;
        
        if (!b && properties.isSet("defaultPgrmValues")) {
            String defaultEditorStatus = this.properties.get("defaultPgrmValues");
            String[] arrayDefault = defaultEditorStatus.split("<>");
            int z = 0;
            for (int i =0 ; i < arrayDefault.length ; i=i+2){
                z = i;
                this.properties.put(arrayDefault[z],arrayDefault[z+1]);
            }
        }
    }

    /**
     * Update Saved Properties uSP
     */
    
    private void updateSavedProperties(workflow_properties properties) {
        // Menu Options
        uspValues(properties);
        uspBoxesAndButtons(properties);
        menuFields();
    }
    
    private void uspValues (workflow_properties properties) {
        if (properties.isSet(ALN_B_value.getName()))
            this.ALN_B_value.setValue(Integer.parseInt(this.properties.get(ALN_B_value.getName())));
        if (properties.isSet(ALN_E_value.getName()))
            this.ALN_E_value.setValue(Integer.parseInt(this.properties.get(ALN_E_value.getName())));
        if (properties.isSet(ALN_M_value.getName()))
            this.ALN_M_value.setValue(Integer.parseInt(this.properties.get(ALN_M_value.getName())));
        if (properties.isSet(ALN_O_value.getName()))
            this.ALN_O_value.setValue(Integer.parseInt(this.properties.get(ALN_O_value.getName())));
        if (properties.isSet(ALN_R_value.getName()))
            this.ALN_R_value.setValue(Integer.parseInt(this.properties.get(ALN_R_value.getName())));
        if (properties.isSet(ALN_d_value.getName()))
            this.ALN_d_value.setValue(Integer.parseInt(this.properties.get(ALN_d_value.getName())));
        if (properties.isSet(ALN_e_value.getName()))
            this.ALN_e_value.setValue(Integer.parseInt(this.properties.get(ALN_e_value.getName())));
        if (properties.isSet(ALN_i_value.getName()))
            this.ALN_i_value.setValue(Integer.parseInt(this.properties.get(ALN_i_value.getName())));
        if (properties.isSet(ALN_k_value.getName()))
            this.ALN_k_value.setValue(Integer.parseInt(this.properties.get(ALN_k_value.getName())));
        if (properties.isSet(ALN_l_value.getName()))
            this.ALN_l_value.setValue(Integer.parseInt(this.properties.get(ALN_l_value.getName())));
        if (properties.isSet(ALN_n_value.getName()))
            this.ALN_n_value.setValue(Float.parseFloat(this.properties.get(ALN_n_value.getName())));
        if (properties.isSet(ALN_o_value.getName()))
            this.ALN_o_value.setValue(Integer.parseInt(this.properties.get(ALN_o_value.getName())));
        if (properties.isSet(ALN_q_value.getName()))
            this.ALN_q_value.setValue(Integer.parseInt(this.properties.get(ALN_q_value.getName())));
        if (properties.isSet(ALN_t_value.getName()))
            this.ALN_t_value.setValue(Integer.parseInt(this.properties.get(ALN_t_value.getName())));
        if (properties.isSet(MEM_A_value.getName()))
            this.MEM_A_value.setValue(Integer.parseInt(this.properties.get(MEM_A_value.getName())));
        if (properties.isSet(MEM_B_value.getName()))
            this.MEM_B_value.setValue(Integer.parseInt(this.properties.get(MEM_B_value.getName())));
        if (properties.isSet(MEM_E_value.getName()))
            this.MEM_E_value.setValue(Integer.parseInt(this.properties.get(MEM_E_value.getName())));
        if (properties.isSet(MEM_L_value.getName()))
            this.MEM_L_value.setValue(Integer.parseInt(this.properties.get(MEM_L_value.getName())));
        if (properties.isSet(MEM_O_value.getName()))
            this.MEM_O_value.setValue(Integer.parseInt(this.properties.get(MEM_O_value.getName())));
        if (properties.isSet(MEM_R_text.getName()))
            this.MEM_R_text.setText(this.properties.get(MEM_R_text.getName()));
        if (properties.isSet(MEM_T_value.getName()))
            this.MEM_T_value.setValue(Integer.parseInt(this.properties.get(MEM_T_value.getName())));
        if (properties.isSet(MEM_U_value.getName()))
            this.MEM_U_value.setValue(Integer.parseInt(this.properties.get(MEM_U_value.getName())));
        if (properties.isSet(MEM_c_value.getName()))
            this.MEM_c_value.setValue(Integer.parseInt(this.properties.get(MEM_c_value.getName())));
        if (properties.isSet(MEM_d_value.getName()))
            this.MEM_d_value.setValue(Integer.parseInt(this.properties.get(MEM_d_value.getName())));
        if (properties.isSet(MEM_k_value.getName()))
            this.MEM_k_value.setValue(Integer.parseInt(this.properties.get(MEM_k_value.getName())));
        if (properties.isSet(MEM_r_value.getName()))
            this.MEM_r_value.setValue(Float.parseFloat(this.properties.get(MEM_r_value.getName())));
        if (properties.isSet(MEM_t_value.getName()))
            this.MEM_t_value.setValue(Integer.parseInt(this.properties.get(MEM_t_value.getName())));
        if (properties.isSet(MEM_v_value.getName()))
            this.MEM_v_value.setValue(Integer.parseInt(this.properties.get(MEM_v_value.getName())));
        if (properties.isSet(MEM_w_value.getName()))
            this.MEM_w_value.setValue(Integer.parseInt(this.properties.get(MEM_w_value.getName())));
        if (properties.isSet(SAMPE_N_value.getName()))
            this.SAMPE_N_value.setValue(Integer.parseInt(this.properties.get(SAMPE_N_value.getName())));
        if (properties.isSet(SAMPE_a_value.getName()))
            this.SAMPE_a_value.setValue(Integer.parseInt(this.properties.get(SAMPE_a_value.getName())));
        if (properties.isSet(SAMPE_n_value.getName()))
            this.SAMPE_n_value.setValue(Integer.parseInt(this.properties.get(SAMPE_n_value.getName())));
        if (properties.isSet(SAMPE_o_value.getName()))
            this.SAMPE_o_value.setValue(Integer.parseInt(this.properties.get(SAMPE_o_value.getName())));
        if (properties.isSet(SAMPE_r_text.getName()))
            this.SAMPE_r_text.setText(this.properties.get(SAMPE_r_text.getName()));
        if (properties.isSet(SAMSE_n_value.getName()))
            this.SAMSE_n_value.setValue(Integer.parseInt(this.properties.get(SAMSE_n_value.getName())));
        if (properties.isSet(SAMSE_r_text.getName()))
            this.SAMSE_r_text.setText(this.properties.get(SAMSE_r_text.getName()));
        if (properties.isSet(IDG_r_text.getName()))
            this.IDG_r_text.setText(this.properties.get(IDG_r_text.getName()));
    }
    
    
    private void uspBoxesAndButtons (workflow_properties properties) {
        if (properties.isSet(ALN_B_box.getName()) &&
                properties.isSet(O_aln_button.getName()))
            ALN_B_box.setSelected(true);
        if (properties.isSet(ALN_E_box.getName()))
            ALN_E_box.setSelected(true);
        if (properties.isSet(ALN_I_box.getName()) &&
                properties.isSet(O_aln_button.getName()))
            ALN_I_box.setSelected(true);
        if (properties.isSet(ALN_M_box.getName()))
            ALN_M_box.setSelected(true);
        if (properties.isSet(ALN_N_box.getName()) &&
                properties.isSet(O_aln_button.getName()))
            ALN_N_box.setSelected(true);
        if (properties.isSet(ALN_O_box.getName()))
            ALN_O_box.setSelected(true);
        if (properties.isSet(ALN_R_box.getName()))
            ALN_R_box.setSelected(true);
        if (properties.isSet(ALN_b1_box.getName()) &&
                properties.isSet(O_aln_button.getName()))
            ALN_b1_box.setSelected(true);
        if (properties.isSet(ALN_b2_box.getName()) &&
                properties.isSet(O_aln_button.getName()))
            ALN_b2_box.setSelected(true);
        if (properties.isSet(ALN_b_box.getName()) &&
                properties.isSet(O_aln_button.getName()))
            ALN_b_box.setSelected(true);
        if (properties.isSet(ALN_c_box.getName()) &&
                properties.isSet(O_aln_button.getName()))
            ALN_c_box.setSelected(true);
        if (properties.isSet(ALN_d_box.getName()))
            ALN_d_box.setSelected(true);
        if (properties.isSet(ALN_e_box.getName()))
            ALN_e_box.setSelected(true);
        if (properties.isSet(ALN_i_box.getName()))
            ALN_i_box.setSelected(true);
        if (properties.isSet(ALN_k_box.getName()) &&
                properties.isSet(O_aln_button.getName()))
            ALN_k_box.setSelected(true);
        if (properties.isSet(ALN_l_box.getName()))
            ALN_l_box.setSelected(true);
        if (properties.isSet(ALN_n_box.getName()))
            ALN_n_box.setSelected(true);
        if (properties.isSet(ALN_o_box.getName()))
            ALN_o_box.setSelected(true);
        if (properties.isSet(ALN_q_box.getName()) &&
                properties.isSet(O_aln_button.getName()))
            ALN_q_box.setSelected(true);
        if (properties.isSet(ALN_t_box.getName()))
            ALN_t_box.setSelected(true);
        if (properties.isSet(MEM_A_box.getName()))
            MEM_A_box.setSelected(true);
        if (properties.isSet(MEM_B_box.getName()))
            MEM_B_box.setSelected(true);
        if (properties.isSet(MEM_C_box.getName()))
            MEM_C_box.setSelected(true);
        if (properties.isSet(MEM_E_box.getName()))
            MEM_E_box.setSelected(true);
        if (properties.isSet(MEM_H_box.getName()))
            MEM_H_box.setSelected(true);
        if (properties.isSet(MEM_L_box.getName()))
            MEM_L_box.setSelected(true);
        if (properties.isSet(MEM_M_box.getName()))
            MEM_M_box.setSelected(true);
        if (properties.isSet(MEM_O_box.getName()))
            MEM_O_box.setSelected(true);
        if (properties.isSet(MEM_P_box.getName()))
            MEM_P_box.setSelected(true);
        if (properties.isSet(MEM_R_box.getName()))
            MEM_R_box.setSelected(true);
        if (properties.isSet(MEM_T_box.getName()))
            MEM_T_box.setSelected(true);
        if (properties.isSet(MEM_U_box.getName()))
            MEM_U_box.setSelected(true);
        if (properties.isSet(MEM_a_box.getName()))
            MEM_a_box.setSelected(true);
        if (properties.isSet(MEM_c_box.getName()))
            MEM_c_box.setSelected(true);
        if (properties.isSet(MEM_d_box.getName()))
            MEM_d_box.setSelected(true);
        if (properties.isSet(MEM_k_box.getName()))
            MEM_k_box.setSelected(true);
        if (properties.isSet(MEM_p_box.getName()))
            MEM_p_box.setSelected(true);
        if (properties.isSet(MEM_r_box.getName()))
            MEM_r_box.setSelected(true);
        if (properties.isSet(MEM_t_box.getName()))
            MEM_t_box.setSelected(true);
        if (properties.isSet(MEM_v_box.getName()))
            MEM_v_box.setSelected(true);
        if (properties.isSet(MEM_w_box.getName()))
            MEM_w_box.setSelected(true);
        if (properties.isSet(SAMPE_N_box.getName()))
            SAMPE_N_box.setSelected(true);
        if (properties.isSet(SAMPE_P_box.getName()))
            SAMPE_P_box.setSelected(true);
        if (properties.isSet(SAMPE_a_box.getName()))
            SAMPE_a_box.setSelected(true);
        if (properties.isSet(SAMPE_n_box.getName()))
            SAMPE_n_box.setSelected(true);
        if (properties.isSet(SAMPE_o_box.getName()))
            SAMPE_o_box.setSelected(true);
        if (properties.isSet(SAMPE_r_box.getName()))
            SAMPE_r_box.setSelected(true);
        if (properties.isSet(SAMSE_n_box.getName()))
            SAMSE_n_box.setSelected(true);
        if (properties.isSet(SAMSE_r_box.getName()))
            SAMSE_r_box.setSelected(true);
        if (properties.isSet(O_aln_button.getName()))
            O_aln_button.setSelected(true);
        if (properties.isSet(O_bwasw_button.getName()))
            O_bwasw_button.setSelected(true);
        if (properties.isSet(O_mem_button.getName()))
            O_mem_button.setSelected(true);
        if (properties.isSet(ALN_PT_sampe_button.getName()))
            ALN_PT_sampe_button.setSelected(true);
        if (properties.isSet(ALN_PT_samse_button.getName()))
            ALN_PT_samse_button.setSelected(true);
        if (properties.isSet(M_IDG_workflow_button.getName()))
            M_IDG_workflow_button.setSelected(true);
        if (properties.isSet(M_IDG_directory_button.getName()))
            M_IDG_directory_button.setSelected(true);
        if (properties.isSet(ALN_PT_NOTUSED_button.getName()))
            ALN_PT_NOTUSED_button.setSelected(true);
    }
    
    /**
     * Set the configuration properties for this object
     */
    
    public void display(workflow_properties properties) {
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // Set position
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
                (screenSize.height-d.height)/2);
        
        this.setProperties(properties);
        
        //Update Saved Properties uSP
        this.updateSavedProperties(properties);

        
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }
    
    public void saveImage(String filename) {
        BufferedImage bi;
        try {
            bi = new Robot().createScreenCapture(this.getBounds());
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
        } catch (Exception ex) {
            Config.log("Unable to save "+filename+" dialog image");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ALN_B_box;
    private javax.swing.JSpinner ALN_B_value;
    private javax.swing.JCheckBox ALN_E_box;
    private javax.swing.JSpinner ALN_E_value;
    private javax.swing.JCheckBox ALN_I_box;
    private javax.swing.JCheckBox ALN_M_box;
    private javax.swing.JSpinner ALN_M_value;
    private javax.swing.JCheckBox ALN_N_box;
    private javax.swing.JCheckBox ALN_O_box;
    private javax.swing.JSpinner ALN_O_value;
    private javax.swing.JRadioButton ALN_PT_NOTUSED_button;
    private javax.swing.JRadioButton ALN_PT_sampe_button;
    private javax.swing.JRadioButton ALN_PT_samse_button;
    private javax.swing.JPanel ALN_Panel;
    private javax.swing.JCheckBox ALN_R_box;
    private javax.swing.JSpinner ALN_R_value;
    private javax.swing.JCheckBox ALN_b1_box;
    private javax.swing.JCheckBox ALN_b2_box;
    private javax.swing.JCheckBox ALN_b_box;
    private javax.swing.JCheckBox ALN_c_box;
    private javax.swing.JCheckBox ALN_d_box;
    private javax.swing.JSpinner ALN_d_value;
    private javax.swing.JCheckBox ALN_e_box;
    private javax.swing.JSpinner ALN_e_value;
    private javax.swing.JCheckBox ALN_i_box;
    private javax.swing.JSpinner ALN_i_value;
    private javax.swing.JCheckBox ALN_k_box;
    private javax.swing.JSpinner ALN_k_value;
    private javax.swing.JCheckBox ALN_l_box;
    private javax.swing.JSpinner ALN_l_value;
    private javax.swing.JCheckBox ALN_n_box;
    private javax.swing.JSpinner ALN_n_value;
    private javax.swing.JCheckBox ALN_o_box;
    private javax.swing.JSpinner ALN_o_value;
    private javax.swing.JCheckBox ALN_q_box;
    private javax.swing.JSpinner ALN_q_value;
    private javax.swing.JCheckBox ALN_t_box;
    private javax.swing.JSpinner ALN_t_value;
    private javax.swing.ButtonGroup BWA_ALN_PostTreatment_buttons;
    private javax.swing.ButtonGroup BWA_IDG_source_buttons;
    private javax.swing.ButtonGroup BWA_options_Buttons;
    private javax.swing.JTabbedPane BwaMapEditor;
    private javax.swing.JButton ClosejButton6;
    private javax.swing.JButton IDG_Update_button;
    private javax.swing.JButton IDG_change_button;
    private javax.swing.JTextField IDG_r_text;
    private javax.swing.JComboBox IDG_selected_ComboBox;
    private javax.swing.JCheckBox MEM_A_box;
    private javax.swing.JSpinner MEM_A_value;
    private javax.swing.JCheckBox MEM_B_box;
    private javax.swing.JSpinner MEM_B_value;
    private javax.swing.JCheckBox MEM_C_box;
    private javax.swing.JCheckBox MEM_E_box;
    private javax.swing.JSpinner MEM_E_value;
    private javax.swing.JCheckBox MEM_H_box;
    private javax.swing.JPanel MEM_INPUT_panel;
    private javax.swing.JCheckBox MEM_L_box;
    private javax.swing.JSpinner MEM_L_value;
    private javax.swing.JCheckBox MEM_M_box;
    private javax.swing.JPanel MEM_OUTPUT_panel;
    private javax.swing.JCheckBox MEM_O_box;
    private javax.swing.JSpinner MEM_O_value;
    private javax.swing.JCheckBox MEM_P_box;
    private javax.swing.JPanel MEM_Panel;
    private javax.swing.JCheckBox MEM_R_box;
    private javax.swing.JTextField MEM_R_text;
    private javax.swing.JCheckBox MEM_T_box;
    private javax.swing.JSpinner MEM_T_value;
    private javax.swing.JCheckBox MEM_U_box;
    private javax.swing.JSpinner MEM_U_value;
    private javax.swing.JCheckBox MEM_a_box;
    private javax.swing.JCheckBox MEM_c_box;
    private javax.swing.JSpinner MEM_c_value;
    private javax.swing.JCheckBox MEM_d_box;
    private javax.swing.JSpinner MEM_d_value;
    private javax.swing.JCheckBox MEM_k_box;
    private javax.swing.JSpinner MEM_k_value;
    private javax.swing.JCheckBox MEM_p_box;
    private javax.swing.JCheckBox MEM_r_box;
    private javax.swing.JSpinner MEM_r_value;
    private javax.swing.JCheckBox MEM_t_box;
    private javax.swing.JSpinner MEM_t_value;
    private javax.swing.JCheckBox MEM_v_box;
    private javax.swing.JSpinner MEM_v_value;
    private javax.swing.JCheckBox MEM_w_box;
    private javax.swing.JSpinner MEM_w_value;
    private javax.swing.JRadioButton M_IDG_directory_button;
    private javax.swing.JPanel M_IDG_main_panel;
    private javax.swing.JRadioButton M_IDG_workflow_button;
    private javax.swing.JRadioButton O_aln_button;
    private javax.swing.JRadioButton O_bwasw_button;
    private javax.swing.JRadioButton O_mem_button;
    private javax.swing.JTabbedPane Options;
    private javax.swing.JCheckBox SAMPE_N_box;
    private javax.swing.JSpinner SAMPE_N_value;
    private javax.swing.JCheckBox SAMPE_P_box;
    private javax.swing.JPanel SAMPE_Panel;
    private javax.swing.JCheckBox SAMPE_a_box;
    private javax.swing.JSpinner SAMPE_a_value;
    private javax.swing.JCheckBox SAMPE_n_box;
    private javax.swing.JSpinner SAMPE_n_value;
    private javax.swing.JCheckBox SAMPE_o_box;
    private javax.swing.JSpinner SAMPE_o_value;
    private javax.swing.JCheckBox SAMPE_r_box;
    private javax.swing.JTextField SAMPE_r_text;
    private javax.swing.JPanel SAMSE_Panel;
    private javax.swing.JCheckBox SAMSE_n_box;
    private javax.swing.JSpinner SAMSE_n_value;
    private javax.swing.JCheckBox SAMSE_r_box;
    private javax.swing.JTextField SAMSE_r_text;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField name_jTextField1;
    private javax.swing.JButton reset_jButton3;
    private javax.swing.JButton run_jButton5;
    private javax.swing.JButton stop_jButton4;
    // End of variables declaration//GEN-END:variables
}
