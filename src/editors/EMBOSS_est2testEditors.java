/**
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package editors;

import editor.dockerEditor;
import configuration.Config;
import configuration.Util;
import editor.EditorInterface;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JRadioButton;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import program.*;
import workflows.armadillo_workflow;
import workflows.workflow_properties;
import workflows.workflow_properties_dictionnary;

/**
 *
 * @author : J-G
 * @Date   : 05-02-2017
 */

public class EMBOSS_est2testEditors extends javax.swing.JDialog implements EditorInterface {

    /**
     * Creates new form EMBOSS_est2testEditors
     */
    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected = "";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow  parent_workflow;

    public final String defaultNameString="Name";
    static final boolean default_map=true;
    public static HashMap<JCheckBox,JSpinner> DictCBS0 = new HashMap<JCheckBox,JSpinner>();
    public static HashMap<JCheckBox,JTextField> DictCBT0 = new HashMap<JCheckBox,JTextField>();
    public static HashMap<JCheckBox,JComboBox> DictCBC0 = new HashMap<JCheckBox,JComboBox>();
    public static HashMap<JRadioButton,JSpinner> DictRBS0 = new HashMap<JRadioButton,JSpinner>();
    public static HashMap<JRadioButton,JTextField> DictRBT0 = new HashMap<JRadioButton,JTextField>();
    public static ArrayList<HashMap> listDicts0 = new ArrayList<HashMap>();
    public static HashMap<JCheckBox,JSpinner> DictMenuCBS1 = new HashMap<JCheckBox,JSpinner>();
    public static HashMap<JCheckBox,JTextField> DictMenuCBT1 = new HashMap<JCheckBox,JTextField>();
    public static HashMap<JCheckBox,JComboBox> DictMenuCBC1 = new HashMap<JCheckBox,JComboBox>();
    public static HashMap<JRadioButton,JSpinner> DictMenuRBS1 = new HashMap<JRadioButton,JSpinner>();
    public static HashMap<JRadioButton,JTextField> DictMenuRBT1 = new HashMap<JRadioButton,JTextField>();
    public static ArrayList<HashMap> listDictsMenu1 = new ArrayList<HashMap>();
    public static HashMap<JCheckBox,JSpinner> DictMenuCBS2 = new HashMap<JCheckBox,JSpinner>();
    public static HashMap<JCheckBox,JTextField> DictMenuCBT2 = new HashMap<JCheckBox,JTextField>();
    public static HashMap<JCheckBox,JComboBox> DictMenuCBC2 = new HashMap<JCheckBox,JComboBox>();
    public static HashMap<JRadioButton,JSpinner> DictMenuRBS2 = new HashMap<JRadioButton,JSpinner>();
    public static HashMap<JRadioButton,JTextField> DictMenuRBT2 = new HashMap<JRadioButton,JTextField>();
    public static ArrayList<HashMap> listDictsMenu2 = new ArrayList<HashMap>();

    public EMBOSS_est2testEditors(java.awt.Frame parent, armadillo_workflow parent_workflow){
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
        //listDicts1 = Util.createListDict(DictBoxSpinner1,DictBoxTextField1,DictBoxComboBox1,DictRadioButtonSpinner1,DictRadioButtonTextField1);
        //listDicts2 = Util.createListDict(DictBoxSpinner2,DictBoxTextField2,DictBoxComboBox2,DictRadioButtonSpinner2,DictRadioButtonTextField2);
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(){
    
        Menu_Buttons = new javax.swing.ButtonGroup();
        docker_jButton = new javax.swing.JButton();
        how_jButton      = new javax.swing.JButton();
        EMBOSS_est2test_tab = new javax.swing.JTabbedPane();
        general_jPanel1  = new javax.swing.JPanel();
        name_jLabel      = new javax.swing.JLabel();
        name_jTextField  = new javax.swing.JTextField();
        rename_jButton   = new javax.swing.JButton();
        reset_jButton    = new javax.swing.JButton();
        close_jButton    = new javax.swing.JButton();
        stop_jButton     = new javax.swing.JButton();
        run_jButton      = new javax.swing.JButton();
        Default_Options = new javax.swing.JRadioButton();
        Returned_Options = new javax.swing.JRadioButton();
        Advanced_Options = new javax.swing.JRadioButton();
        main_jScroll = new javax.swing.JScrollPane();
        options_tab_panel = new javax.swing.JTabbedPane();
        OO_JPanel = new javax.swing.JPanel();
        OO_OO1_JLabel = new javax.swing.JLabel();
        OO_OO1_matchoo1_box = new javax.swing.JCheckBox();
        OO_OO1_matchoo1_JSpinnerValue = new javax.swing.JSpinner();
        RO_JPanel = new javax.swing.JPanel();
        RO_RO_JTabbedPane = new javax.swing.JTabbedPane();
        RO_RO1_JPanel = new javax.swing.JPanel();
        RO_RO1_nomatchao1_box = new javax.swing.JCheckBox();
        RO_RO1_nomatchao1_JSpinnerValue = new javax.swing.JSpinner();
        RO_RO2_JPanel = new javax.swing.JPanel();
        RO_RO2_nomatchao2_box = new javax.swing.JCheckBox();
        RO_RO2_nomatchao2_JSpinnerValue = new javax.swing.JSpinner();
        AO_JPanel = new javax.swing.JPanel();
        AO_AO1_JLabel = new javax.swing.JLabel();
        AO_AO1_matchao1_box = new javax.swing.JCheckBox();
        AO_AO1_matchao1_JSpinnerValue = new javax.swing.JSpinner();
        AO_AO2_JLabel = new javax.swing.JLabel();
        AO_AO2_matchao2_box = new javax.swing.JCheckBox();
        AO_AO2_matchao2_JSpinnerValue = new javax.swing.JSpinner();
        AO_AO3_JLabel = new javax.swing.JLabel();
        AO_AO3_matchao3_box = new javax.swing.JCheckBox();
        AO_AO3_matchao3_JSpinnerValue = new javax.swing.JSpinner();
        AO_AO4_JLabel = new javax.swing.JLabel();
        AO_AO4_matchao4_box = new javax.swing.JCheckBox();
        AO_AO4_matchao4_JSpinnerValue = new javax.swing.JSpinner();
        AO_AO4_mismatchao4_box = new javax.swing.JCheckBox();
        AO_AO4_mismatchao4_JSpinnerValue = new javax.swing.JSpinner();
        AO_AO4_graphao4_box = new javax.swing.JCheckBox();
        AO_AO4_graphao4_JComboBoxValue = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        docker_jButton.setText("Docker Editor");
        docker_jButton.setName("docker_jButton"); // NOI18N
        docker_jButton.getAccessibleContext().setAccessibleDescription("Access to the docker editor");
        docker_jButton.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                docker_jButton_ActionPerformed(evt);
            }
        });

        EMBOSS_est2test_tab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                EMBOSS_est2test_tab_ComponentShown(evt);
            }
        });

        general_jPanel1.setName("general_jPanel1");
        general_jPanel1.setPreferredSize(new java.awt.Dimension(459, 400));

        stop_jButton.setText("Stop");
        stop_jButton.setName("stop_jButton"); // NOI18N
        stop_jButton.setMaximumSize(new java.awt.Dimension(91,29));
        stop_jButton.setMinimumSize(new java.awt.Dimension(91,29));
        stop_jButton.setPreferredSize(new java.awt.Dimension(91,29));
        stop_jButton.setForeground(new java.awt.Color(255, 0, 0));
        stop_jButton.getAccessibleContext().setAccessibleDescription("Stop this box");
        stop_jButton.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                stop_jButton_ActionPerformed(evt);
            }
        });
        reset_jButton.setText("Reset");
        reset_jButton.setName("reset_jButton"); // NOI18N
        reset_jButton.setMaximumSize(new java.awt.Dimension(91,29));
        reset_jButton.setMinimumSize(new java.awt.Dimension(91,29));
        reset_jButton.setPreferredSize(new java.awt.Dimension(91,29));
        reset_jButton.setForeground(new java.awt.Color(255, 116, 0));
        reset_jButton.getAccessibleContext().setAccessibleDescription("Reset to default values");
        reset_jButton.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                reset_jButton_ActionPerformed(evt);
            }
        });
        run_jButton.setText("Run");
        run_jButton.setName("run_jButton"); // NOI18N
        run_jButton.setMaximumSize(new java.awt.Dimension(91,29));
        run_jButton.setMinimumSize(new java.awt.Dimension(91,29));
        run_jButton.setPreferredSize(new java.awt.Dimension(91,29));
        run_jButton.setForeground(new java.awt.Color(0, 255, 3));
        run_jButton.getAccessibleContext().setAccessibleDescription("Run this box");
        run_jButton.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                run_jButton_ActionPerformed(evt);
            }
        });
        how_jButton.setText("?");
        how_jButton.setName("how_jButton"); // NOI18N
        how_jButton.setMaximumSize(new java.awt.Dimension(51,29));
        how_jButton.setMinimumSize(new java.awt.Dimension(51,29));
        how_jButton.setPreferredSize(new java.awt.Dimension(51,29));
        how_jButton.setForeground(new java.awt.Color(255, 0, 255));
        how_jButton.getAccessibleContext().setAccessibleDescription("About this box");
        how_jButton.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                how_jButton_ActionPerformed(evt);
            }
        });
        close_jButton.setText("Close");
        close_jButton.setName("close_jButton"); // NOI18N
        close_jButton.setMaximumSize(new java.awt.Dimension(91,29));
        close_jButton.setMinimumSize(new java.awt.Dimension(91,29));
        close_jButton.setPreferredSize(new java.awt.Dimension(91,29));
        close_jButton.setForeground(new java.awt.Color(0, 0, 255));
        close_jButton.getAccessibleContext().setAccessibleDescription("Close this box");
        close_jButton.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                close_jButton_ActionPerformed(evt);
            }
        });
        name_jLabel.setText("(re)Name");
        name_jLabel.setName("name_jLabel"); // NOI18N
        name_jLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        name_jLabel.getAccessibleContext().setAccessibleDescription("Name Box");

        name_jTextField.setText("Name");
        name_jTextField.setName("name_jTextField"); // NOI18N
        name_jTextField.getAccessibleContext().setAccessibleDescription("Rename the box here");
        name_jTextField.addFocusListener(new java.awt.event.FocusAdapter() {
             public void focusLost(java.awt.event.FocusEvent evt) {
                 name_jTextField_FocusLost(evt);
             }
        });
        name_jTextField.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                name_jTextField_ActionPerformed(evt);
            }
        });

        Menu_Buttons.add(Default_Options);
        Default_Options.setText("Default Options");
        Default_Options.setName("Default_Options"); // NOI18N
        Default_Options.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                Default_Options_ActionPerformed(evt);
            }
        });
        Menu_Buttons.add(Returned_Options);
        Returned_Options.setText("Returned Options");
        Returned_Options.setName("Returned_Options"); // NOI18N
        Returned_Options.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                Returned_Options_ActionPerformed(evt);
            }
        });
        Menu_Buttons.add(Advanced_Options);
        Advanced_Options.setText("Advanced Options");
        Advanced_Options.setName("Advanced_Options"); // NOI18N
        Advanced_Options.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                Advanced_Options_ActionPerformed(evt);
            }
        });
        OO_OO1_JLabel.setText("Other Options 1");
        OO_OO1_JLabel.setName("OO_OO1_JLabel"); // NOI18N
        OO_OO1_JLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        OO_OO1_JLabel.getAccessibleContext().setAccessibleDescription("Sub Items");

        OO_OO1_matchoo1_box.setText("matchOO1");
        OO_OO1_matchoo1_box.setName("OO_OO1_matchoo1_box"); // NOI18N
        OO_OO1_matchoo1_box.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        OO_OO1_matchoo1_box.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                OO_OO1_matchoo1_box_ActionPerformed(evt);
            }
        });

        OO_OO1_matchoo1_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(1.0d,null,null,1.0d));
        OO_OO1_matchoo1_JSpinnerValue.setName("OO_OO1_matchoo1_JSpinnerValue"); // NOI18N
        OO_OO1_matchoo1_JSpinnerValue.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        OO_OO1_matchoo1_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));
        OO_OO1_matchoo1_JSpinnerValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                OO_OO1_matchoo1_JSpinnerValue_StateChanged(evt);
            }
        });

        RO_RO1_nomatchao1_box.setText("NOmatchAO1");
        RO_RO1_nomatchao1_box.setName("RO_RO1_nomatchao1_box"); // NOI18N
        RO_RO1_nomatchao1_box.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        RO_RO1_nomatchao1_box.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                RO_RO1_nomatchao1_box_ActionPerformed(evt);
            }
        });

        RO_RO1_nomatchao1_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(1.0d,null,null,1.0d));
        RO_RO1_nomatchao1_JSpinnerValue.setName("RO_RO1_nomatchao1_JSpinnerValue"); // NOI18N
        RO_RO1_nomatchao1_JSpinnerValue.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        RO_RO1_nomatchao1_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));
        RO_RO1_nomatchao1_JSpinnerValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                RO_RO1_nomatchao1_JSpinnerValue_StateChanged(evt);
            }
        });

        RO_RO2_nomatchao2_box.setText("NOmatchAO2");
        RO_RO2_nomatchao2_box.setName("RO_RO2_nomatchao2_box"); // NOI18N
        RO_RO2_nomatchao2_box.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        RO_RO2_nomatchao2_box.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                RO_RO2_nomatchao2_box_ActionPerformed(evt);
            }
        });

        RO_RO2_nomatchao2_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(1.0d,null,null,1.0d));
        RO_RO2_nomatchao2_JSpinnerValue.setName("RO_RO2_nomatchao2_JSpinnerValue"); // NOI18N
        RO_RO2_nomatchao2_JSpinnerValue.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        RO_RO2_nomatchao2_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));
        RO_RO2_nomatchao2_JSpinnerValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                RO_RO2_nomatchao2_JSpinnerValue_StateChanged(evt);
            }
        });

        AO_AO1_JLabel.setText("Advanced Options 1");
        AO_AO1_JLabel.setName("AO_AO1_JLabel"); // NOI18N
        AO_AO1_JLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_AO1_JLabel.getAccessibleContext().setAccessibleDescription("Sub Items");

        AO_AO1_matchao1_box.setText("matchAO1");
        AO_AO1_matchao1_box.setName("AO_AO1_matchao1_box"); // NOI18N
        AO_AO1_matchao1_box.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        AO_AO1_matchao1_box.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                AO_AO1_matchao1_box_ActionPerformed(evt);
            }
        });

        AO_AO1_matchao1_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(1.0d,null,null,1.0d));
        AO_AO1_matchao1_JSpinnerValue.setName("AO_AO1_matchao1_JSpinnerValue"); // NOI18N
        AO_AO1_matchao1_JSpinnerValue.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        AO_AO1_matchao1_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));
        AO_AO1_matchao1_JSpinnerValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AO_AO1_matchao1_JSpinnerValue_StateChanged(evt);
            }
        });

        AO_AO2_JLabel.setText("Advanced Options 2");
        AO_AO2_JLabel.setName("AO_AO2_JLabel"); // NOI18N
        AO_AO2_JLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_AO2_JLabel.getAccessibleContext().setAccessibleDescription("Sub Items");

        AO_AO2_matchao2_box.setText("matchAO2");
        AO_AO2_matchao2_box.setName("AO_AO2_matchao2_box"); // NOI18N
        AO_AO2_matchao2_box.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        AO_AO2_matchao2_box.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                AO_AO2_matchao2_box_ActionPerformed(evt);
            }
        });

        AO_AO2_matchao2_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(1,null,null,1));
        AO_AO2_matchao2_JSpinnerValue.setName("AO_AO2_matchao2_JSpinnerValue"); // NOI18N
        AO_AO2_matchao2_JSpinnerValue.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        AO_AO2_matchao2_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));
        AO_AO2_matchao2_JSpinnerValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AO_AO2_matchao2_JSpinnerValue_StateChanged(evt);
            }
        });

        AO_AO3_JLabel.setText("Advanced Options 3");
        AO_AO3_JLabel.setName("AO_AO3_JLabel"); // NOI18N
        AO_AO3_JLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_AO3_JLabel.getAccessibleContext().setAccessibleDescription("Sub Items");

        AO_AO3_matchao3_box.setText("matchAO3");
        AO_AO3_matchao3_box.setName("AO_AO3_matchao3_box"); // NOI18N
        AO_AO3_matchao3_box.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        AO_AO3_matchao3_box.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                AO_AO3_matchao3_box_ActionPerformed(evt);
            }
        });

        AO_AO3_matchao3_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(1,null,null,1));
        AO_AO3_matchao3_JSpinnerValue.setName("AO_AO3_matchao3_JSpinnerValue"); // NOI18N
        AO_AO3_matchao3_JSpinnerValue.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        AO_AO3_matchao3_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));
        AO_AO3_matchao3_JSpinnerValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AO_AO3_matchao3_JSpinnerValue_StateChanged(evt);
            }
        });

        AO_AO4_JLabel.setText("Advanced Options 4");
        AO_AO4_JLabel.setName("AO_AO4_JLabel"); // NOI18N
        AO_AO4_JLabel.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_AO4_JLabel.getAccessibleContext().setAccessibleDescription("Sub Items");

        AO_AO4_matchao4_box.setText("matchAO4");
        AO_AO4_matchao4_box.setName("AO_AO4_matchao4_box"); // NOI18N
        AO_AO4_matchao4_box.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        AO_AO4_matchao4_box.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                AO_AO4_matchao4_box_ActionPerformed(evt);
            }
        });

        AO_AO4_matchao4_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(1,0,null,1));
        AO_AO4_matchao4_JSpinnerValue.setName("AO_AO4_matchao4_JSpinnerValue"); // NOI18N
        AO_AO4_matchao4_JSpinnerValue.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        AO_AO4_matchao4_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));
        AO_AO4_matchao4_JSpinnerValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AO_AO4_matchao4_JSpinnerValue_StateChanged(evt);
            }
        });

        AO_AO4_mismatchao4_box.setText("mismatchAO4");
        AO_AO4_mismatchao4_box.setName("AO_AO4_mismatchao4_box"); // NOI18N
        AO_AO4_mismatchao4_box.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        AO_AO4_mismatchao4_box.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                AO_AO4_mismatchao4_box_ActionPerformed(evt);
            }
        });

        AO_AO4_mismatchao4_JSpinnerValue.setModel(new javax.swing.SpinnerNumberModel(1,null,100,1));
        AO_AO4_mismatchao4_JSpinnerValue.setName("AO_AO4_mismatchao4_JSpinnerValue"); // NOI18N
        AO_AO4_mismatchao4_JSpinnerValue.getAccessibleContext().setAccessibleDescription("Score for matching two bases. Default 1");
        AO_AO4_mismatchao4_JSpinnerValue.setPreferredSize(new java.awt.Dimension(115, 28));
        AO_AO4_mismatchao4_JSpinnerValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AO_AO4_mismatchao4_JSpinnerValue_StateChanged(evt);
            }
        });

        AO_AO4_graphao4_box.setText("graphAO4");
        AO_AO4_graphao4_box.setName("AO_AO4_graphao4_box"); // NOI18N
        AO_AO4_graphao4_box.getAccessibleContext().setAccessibleDescription("Choose Graph type, EMBOSS_GRAPHICS value");
        AO_AO4_graphao4_box.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                AO_AO4_graphao4_box_ActionPerformed(evt);
            }
        });

        AO_AO4_graphao4_JComboBoxValue.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ps", "hpgl", "hp7470", "hp7580" }));
        AO_AO4_graphao4_JComboBoxValue.setName("AO_AO4_graphao4_JComboBoxValue"); // NOI18N
        AO_AO4_graphao4_JComboBoxValue.getAccessibleContext().setAccessibleDescription("Choose Graph type, EMBOSS_GRAPHICS value");
        AO_AO4_graphao4_JComboBoxValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_AO4_graphao4_JComboBoxValue_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OO_Layout = new javax.swing.GroupLayout(OO_JPanel);
        OO_JPanel.setLayout(OO_Layout);
        OO_Layout.setHorizontalGroup(
            OO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(OO_Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(OO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(OO_OO1_JLabel)
                        .addComponent(OO_OO1_matchoo1_box)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(OO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(OO_OO1_matchoo1_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                    .addContainerGap() 
                )
        );
        OO_Layout.setVerticalGroup(
            OO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
             .addGroup(OO_Layout.createSequentialGroup()
                .addContainerGap()
                    .addGroup(OO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(OO_OO1_JLabel)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(OO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(OO_OO1_matchoo1_box)
                        .addComponent(OO_OO1_matchoo1_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                 .addContainerGap()
             )
        );

        javax.swing.GroupLayout RO_RO1_Layout = new javax.swing.GroupLayout(RO_RO1_JPanel);
        RO_RO1_JPanel.setLayout(RO_RO1_Layout);
        RO_RO1_Layout.setHorizontalGroup(
            RO_RO1_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(RO_RO1_Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(RO_RO1_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(RO_RO1_nomatchao1_box)
                        )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(RO_RO1_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(RO_RO1_nomatchao1_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        )
                    .addContainerGap()) 
        );
        RO_RO1_Layout.setVerticalGroup(
            RO_RO1_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
             .addGroup(RO_RO1_Layout.createSequentialGroup()
                .addContainerGap()
                    .addGroup(RO_RO1_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RO_RO1_nomatchao1_box)
                        .addComponent(RO_RO1_nomatchao1_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                    .addContainerGap()) 
        );

        javax.swing.GroupLayout RO_RO2_Layout = new javax.swing.GroupLayout(RO_RO2_JPanel);
        RO_RO2_JPanel.setLayout(RO_RO2_Layout);
        RO_RO2_Layout.setHorizontalGroup(
            RO_RO2_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(RO_RO2_Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(RO_RO2_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(RO_RO2_nomatchao2_box)
                        )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(RO_RO2_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(RO_RO2_nomatchao2_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        )
                    .addContainerGap()) 
        );
        RO_RO2_Layout.setVerticalGroup(
            RO_RO2_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
             .addGroup(RO_RO2_Layout.createSequentialGroup()
                .addContainerGap()
                    .addGroup(RO_RO2_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RO_RO2_nomatchao2_box)
                        .addComponent(RO_RO2_nomatchao2_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                    .addContainerGap()) 
        );

        javax.swing.GroupLayout RO_Layout = new javax.swing.GroupLayout(RO_JPanel);
        RO_JPanel.setLayout(RO_Layout);
        RO_Layout.setHorizontalGroup(
            RO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RO_RO_JTabbedPane)
        );
        RO_Layout.setVerticalGroup(
            RO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RO_Layout.createSequentialGroup()
                .addComponent(RO_RO_JTabbedPane)
                .addContainerGap())
        );

        javax.swing.GroupLayout AO_Layout = new javax.swing.GroupLayout(AO_JPanel);
        AO_JPanel.setLayout(AO_Layout);
        AO_Layout.setHorizontalGroup(
            AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AO_Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(AO_AO1_JLabel)
                        .addComponent(AO_AO1_matchao1_box)
                        .addComponent(AO_AO2_JLabel)
                        .addComponent(AO_AO2_matchao2_box)
                        .addComponent(AO_AO3_JLabel)
                        .addComponent(AO_AO3_matchao3_box)
                        .addComponent(AO_AO4_JLabel)
                        .addComponent(AO_AO4_matchao4_box)
                        .addComponent(AO_AO4_mismatchao4_box)
                        .addComponent(AO_AO4_graphao4_box)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(AO_AO1_matchao1_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AO_AO2_matchao2_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AO_AO3_matchao3_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AO_AO4_matchao4_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AO_AO4_mismatchao4_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AO_AO4_graphao4_JComboBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                    .addContainerGap() 
                )
        );
        AO_Layout.setVerticalGroup(
            AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
             .addGroup(AO_Layout.createSequentialGroup()
                .addContainerGap()
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AO_AO1_JLabel)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AO_AO1_matchao1_box)
                        .addComponent(AO_AO1_matchao1_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AO_AO2_JLabel)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AO_AO2_matchao2_box)
                        .addComponent(AO_AO2_matchao2_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AO_AO3_JLabel)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AO_AO3_matchao3_box)
                        .addComponent(AO_AO3_matchao3_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AO_AO4_JLabel)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AO_AO4_matchao4_box)
                        .addComponent(AO_AO4_matchao4_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AO_AO4_mismatchao4_box)
                        .addComponent(AO_AO4_mismatchao4_JSpinnerValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(AO_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AO_AO4_graphao4_box)
                        .addComponent(AO_AO4_graphao4_JComboBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                 .addContainerGap()
             )
        );

        general_jPanel1.setName("general_jPanel1"); // NOI18N
        general_jPanel1.setPreferredSize(new java.awt.Dimension(459, 400));
        javax.swing.GroupLayout general_jPanel1Layout = new javax.swing.GroupLayout(general_jPanel1);
        general_jPanel1.setLayout(general_jPanel1Layout);
        general_jPanel1Layout.setHorizontalGroup(
            general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(general_jPanel1Layout.createSequentialGroup()
                    .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                       .addComponent(reset_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                       .addGap(18, 18, 18)
                       .addComponent(stop_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                       .addGap(18, 18, 18)
                       .addComponent(run_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(name_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(name_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(general_jPanel1Layout.createSequentialGroup()
                        .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Default_Options)
                    .addGap(18, 18, 18)
                            .addComponent(Returned_Options)
                        )
                        .addComponent(Advanced_Options)
                    )
                    .addComponent(main_jScroll))
        );
        general_jPanel1Layout.setVerticalGroup(
            general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stop_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset_jButton)
                    .addComponent(run_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name_jLabel)
                    .addComponent(name_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Default_Options)
                            .addComponent(Returned_Options)
                        )
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Advanced_Options)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(main_jScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(close_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(docker_jButton)
                .addGap(18, 18, 18)
                .addComponent(how_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(EMBOSS_est2test_tab, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(docker_jButton)
                    .addComponent(close_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(how_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(EMBOSS_est2test_tab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        EMBOSS_est2test_tab.getAccessibleContext().setAccessibleName("EMBOSS_est2test");
        EMBOSS_est2test_tab.addTab("EMBOSS_est2test", general_jPanel1);
        EMBOSS_est2test_tab.addTab("EMBOSS_est2test", general_jPanel1);
        EMBOSS_est2test_tab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                EMBOSS_est2test_tab_ComponentShown(evt);
            }
        });
        main_jScroll.setViewportView(options_tab_panel);
        options_tab_panel.addTab("OO",OO_JPanel);
        options_tab_panel.addTab("RO",RO_JPanel);
        RO_RO_JTabbedPane.addTab("Returned Options 1",RO_RO1_JPanel);
        RO_RO_JTabbedPane.addTab("Returned Options 2",RO_RO2_JPanel);
        options_tab_panel.addTab("AO",AO_JPanel);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void EMBOSS_est2test_tab_ComponentShown(java.awt.event.ComponentEvent evt){//GEN-FIRST:event_EMBOSS_est2test_tab_ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_EMBOSS_est2test_tab_ComponentShown
    
    private void how_jButton_ActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_how_jButton_ActionPerformed
        // TODO add your handling code here:
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
    }//GEN-LAST:event_how_jButton_ActionPerformed

    private void close_jButton_ActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_close_jButton_ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_close_jButton_ActionPerformed

    private void run_jButton_ActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_run_jButton_ActionPerformed
        // TODO add your handling code here:
        if (this.properties.isSet("ClassName")){
            this.parent_workflow.workflow.updateDependance();
            programs prog=new programs(parent_workflow.workbox.getCurrentWorkflows());
            prog.Run(properties);
        }
    }//GEN-LAST:event_run_jButton_ActionPerformed

    private void stop_jButton_ActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_stop_jButton_ActionPerformed
        // TODO add your handling code here:
        properties.put("Status", Config.status_nothing);
        properties.killThread();
    }//GEN-LAST:event_stop_jButton_ActionPerformed

    private void reset_jButton_ActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_reset_jButton_ActionPerformed
        // TODO add your handling code here:
        properties.load();             //--reload current properties from file
        this.setProperties(properties);//--Update current field
        this.display(properties);
    }//GEN-LAST:event_reset_jButton_ActionPerformed

    private void name_jTextField_ActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        properties.put("Name", name_jTextField.getText());
    }                                                

    private void name_jTextField_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_name_jTextField_ActionPerformed
        // TODO add your handling code here:
        properties.put("Name", name_jTextField.getText());
    }//GEN-LAST:event_name_jTextField_ActionPerformed

    private void docker_jButton_ActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_docker_jButton_ActionPerformed
        // TODO add your handling code here:
        dockerEditor dock = new dockerEditor(this.frame, false, properties);
        dock.setVisible(true);
    }//GEN-LAST:event_docker_jButton_ActionPerformed
    
    private void Default_Options_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Default_Options_ActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(Returned_Options.getName()) &&
            properties.isSet(Advanced_Options.getName())){
            properties.remove(Returned_Options.getName());
            properties.remove(Advanced_Options.getName());
        }
        Util.buttonEventSpinner(properties,Default_Options,null);
        menuFields(properties);
    }//GEN-LAST:event_Default_Options_ActionPerformed
    
    private void Returned_Options_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Returned_Options_ActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(Default_Options.getName()) &&
            properties.isSet(Advanced_Options.getName())){
            properties.remove(Default_Options.getName());
            properties.remove(Advanced_Options.getName());
        }
        Util.buttonEventSpinner(properties,Returned_Options,null);
        menuFields(properties);
    }//GEN-LAST:event_Returned_Options_ActionPerformed
    
    private void Advanced_Options_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Advanced_Options_ActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(Default_Options.getName()) &&
            properties.isSet(Returned_Options.getName())){
            properties.remove(Default_Options.getName());
            properties.remove(Returned_Options.getName());
        }
        Util.buttonEventSpinner(properties,Advanced_Options,null);
        menuFields(properties);
    }//GEN-LAST:event_Advanced_Options_ActionPerformed
    
    private void OO_OO1_matchoo1_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_OO_OO1_matchoo1_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,OO_OO1_matchoo1_box,OO_OO1_matchoo1_JSpinnerValue);
    }//GEN-LAST:event_OO_OO1_matchoo1_JSpinnerValue_stateChanged

    private void OO_OO1_matchoo1_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OO_OO1_matchoo1_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,OO_OO1_matchoo1_box,OO_OO1_matchoo1_JSpinnerValue);
    }//GEN-LAST:event_OO_OO1_matchoo1_box_ActionPerformed
    private void RO_RO1_nomatchao1_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_RO_RO1_nomatchao1_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RO_RO1_nomatchao1_box,RO_RO1_nomatchao1_JSpinnerValue);
    }//GEN-LAST:event_RO_RO1_nomatchao1_JSpinnerValue_stateChanged

    private void RO_RO1_nomatchao1_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RO_RO1_nomatchao1_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RO_RO1_nomatchao1_box,RO_RO1_nomatchao1_JSpinnerValue);
    }//GEN-LAST:event_RO_RO1_nomatchao1_box_ActionPerformed
    private void RO_RO2_nomatchao2_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_RO_RO2_nomatchao2_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RO_RO2_nomatchao2_box,RO_RO2_nomatchao2_JSpinnerValue);
    }//GEN-LAST:event_RO_RO2_nomatchao2_JSpinnerValue_stateChanged

    private void RO_RO2_nomatchao2_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RO_RO2_nomatchao2_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,RO_RO2_nomatchao2_box,RO_RO2_nomatchao2_JSpinnerValue);
    }//GEN-LAST:event_RO_RO2_nomatchao2_box_ActionPerformed
    private void AO_AO1_matchao1_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_AO1_matchao1_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_AO1_matchao1_box,AO_AO1_matchao1_JSpinnerValue);
    }//GEN-LAST:event_AO_AO1_matchao1_JSpinnerValue_stateChanged

    private void AO_AO1_matchao1_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_AO1_matchao1_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_AO1_matchao1_box,AO_AO1_matchao1_JSpinnerValue);
    }//GEN-LAST:event_AO_AO1_matchao1_box_ActionPerformed
    private void AO_AO2_matchao2_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_AO2_matchao2_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_AO2_matchao2_box,AO_AO2_matchao2_JSpinnerValue);
    }//GEN-LAST:event_AO_AO2_matchao2_JSpinnerValue_stateChanged

    private void AO_AO2_matchao2_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_AO2_matchao2_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_AO2_matchao2_box,AO_AO2_matchao2_JSpinnerValue);
    }//GEN-LAST:event_AO_AO2_matchao2_box_ActionPerformed
    private void AO_AO3_matchao3_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_AO3_matchao3_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_AO3_matchao3_box,AO_AO3_matchao3_JSpinnerValue);
    }//GEN-LAST:event_AO_AO3_matchao3_JSpinnerValue_stateChanged

    private void AO_AO3_matchao3_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_AO3_matchao3_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_AO3_matchao3_box,AO_AO3_matchao3_JSpinnerValue);
    }//GEN-LAST:event_AO_AO3_matchao3_box_ActionPerformed
    private void AO_AO4_matchao4_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_AO4_matchao4_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_AO4_matchao4_box,AO_AO4_matchao4_JSpinnerValue);
    }//GEN-LAST:event_AO_AO4_matchao4_JSpinnerValue_stateChanged

    private void AO_AO4_matchao4_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_AO4_matchao4_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_AO4_matchao4_box,AO_AO4_matchao4_JSpinnerValue);
    }//GEN-LAST:event_AO_AO4_matchao4_box_ActionPerformed
    private void AO_AO4_mismatchao4_JSpinnerValue_StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AO_AO4_mismatchao4_JSpinnerValue_stateChanged
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_AO4_mismatchao4_box,AO_AO4_mismatchao4_JSpinnerValue);
    }//GEN-LAST:event_AO_AO4_mismatchao4_JSpinnerValue_stateChanged

    private void AO_AO4_mismatchao4_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_AO4_mismatchao4_box_ActionPerformed
        // TODO add your handling code here:
        if (
            properties.isSet(AO_AO4_graphao4_box.getName()) && 
            properties.isSet(AO_AO4_matchao4_box.getName())
        ){
            properties.remove(AO_AO4_graphao4_box.getName());
            AO_AO4_graphao4_box.setSelected(false);
            AO_AO4_graphao4_JComboBoxValue.setEnabled(false);
            properties.remove(AO_AO4_matchao4_box.getName());
            AO_AO4_matchao4_box.setSelected(false);
            AO_AO4_matchao4_JSpinnerValue.setEnabled(false);
        }

        Util.boxEventSpinner(properties,AO_AO4_mismatchao4_box,AO_AO4_mismatchao4_JSpinnerValue);
    }//GEN-LAST:event_AO_AO4_mismatchao4_box_ActionPerformed
    private void AO_AO4_graphao4_JComboBoxValue_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_AO4_graphao4_JComboBoxValue_actionPerformed
        // TODO add your handling code here:
        Util.boxEventComboBox(properties,AO_AO4_graphao4_box,AO_AO4_graphao4_JComboBoxValue);
    }//GEN-LAST:event_AO_AO4_graphao4_JComboBoxValue_actionPerformed

    private void AO_AO4_graphao4_box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_AO4_graphao4_box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventComboBox(properties,AO_AO4_graphao4_box,AO_AO4_graphao4_JComboBoxValue);
    }//GEN-LAST:event_AO_AO4_graphao4_box_ActionPerformed
    /*******************************************************************
     * Perpare List Dictionaries
     ******************************************************************/

    /**
     * Perpare List of Dictionaries
     * @param properties
     */

    public void perpareListDictionaries(workflow_properties properties){
        Util.dictsReset(listDicts0,DictCBS0,DictCBT0,DictCBC0,DictRBS0,DictRBT0);
        Util.dictsReset(listDictsMenu1,DictMenuCBS1,DictMenuCBT1,DictMenuCBC1,DictMenuRBS1,DictMenuRBT1);
        Util.dictsReset(listDictsMenu2,DictMenuCBS2,DictMenuCBT2,DictMenuCBC2,DictMenuRBS2,DictMenuRBT2);
    }

    /*******************************************************************
     * Perpare Dictionaries
     ******************************************************************/

    /**
     * Perpare Dictionaries by adding commands
     * @param properties
     */

    public void perpareDictionaries(workflow_properties properties){
        DictCBS0.put(OO_OO1_matchoo1_box,OO_OO1_matchoo1_JSpinnerValue);
        DictMenuCBS1.put(RO_RO1_nomatchao1_box,RO_RO1_nomatchao1_JSpinnerValue);
        DictMenuCBS1.put(RO_RO2_nomatchao2_box,RO_RO2_nomatchao2_JSpinnerValue);
        DictMenuCBS2.put(AO_AO1_matchao1_box,AO_AO1_matchao1_JSpinnerValue);
        DictMenuCBS2.put(AO_AO2_matchao2_box,AO_AO2_matchao2_JSpinnerValue);
        DictMenuCBS2.put(AO_AO3_matchao3_box,AO_AO3_matchao3_JSpinnerValue);
        DictMenuCBS2.put(AO_AO4_matchao4_box,AO_AO4_matchao4_JSpinnerValue);
        DictMenuCBS2.put(AO_AO4_mismatchao4_box,AO_AO4_mismatchao4_JSpinnerValue);
        DictMenuCBC2.put(AO_AO4_graphao4_box,AO_AO4_graphao4_JComboBoxValue);
    }


    /*******************************************************************
     * Set the configuration properties for this object
     ******************************************************************/

    @Override
    public void display(workflow_properties properties){
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // Set position
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
                (screenSize.height-d.height)/2);
        
        // Set the program properties
        this.setProperties(properties);
        
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }

    /*******************************************************************
     * Sets for Properties
     ******************************************************************/

    /**
     * Set Properties
     * @param properties
     */

    public void setProperties(workflow_properties properties){
        this.properties=properties;
        setTitle(properties.getName());
        //if (this.properties.isSet("Description")) this.Notice.setText(properties.get("Description"));
        
        // Prepare dictionaries
        this.perpareListDictionaries(properties);
        // Properties Default Options
        this.defaultPgrmValues(properties);
        // Update Saved Properties => usp
        Util.updateSavedProperties(properties,listDicts0,name_jTextField);
        properties.put("Other_Options",true);
        Util.updateSavedProperties(properties,listDictsMenu1,name_jTextField);
        Util.updateSavedProperties(properties,listDictsMenu2,name_jTextField);
        // Set the menu
        this.menuFields(properties);
    }

    public void setProperties(String filename, String path){
        workflow_properties tmp=new workflow_properties();
        tmp.load(filename, path);
        this.properties=tmp;
        setTitle(properties.getName());
    }

    /*******************************************************************
     * Set With default program values present in properties file
     ******************************************************************/
    private void defaultPgrmValues(workflow_properties properties){
        boolean b = true;
        if (!(properties.isSet(Default_Options.getName()))
        && !(properties.isSet(Returned_Options.getName()))
        && !(properties.isSet(Advanced_Options.getName()))
        ){
            b = false;
        }
        
        Util.getDefaultPgrmValues(properties,b);
    }
    
    /*******************************************************************
     * Set Menu fields
     ******************************************************************/

    private void menuFields(workflow_properties properties){
        if (properties.isSet(Default_Options.getName())){
            Default_Options.setSelected(true);
            Util.enabled_Advanced_Options(properties,false,listDictsMenu1);
            Util.enabled_Advanced_Options(properties,false,listDictsMenu2);
        }
        else if (properties.isSet(Returned_Options.getName())){
            Returned_Options.setSelected(true);
            Util.enabled_Advanced_Options(properties,true,listDictsMenu1);
            Util.enabled_Advanced_Options(properties,false,listDictsMenu2);
        }
        else if (properties.isSet(Advanced_Options.getName())){
            Advanced_Options.setSelected(true);
            Util.enabled_Advanced_Options(properties,false,listDictsMenu1);
            Util.enabled_Advanced_Options(properties,true,listDictsMenu2);
        }
        Util.enabled_Advanced_Options(properties,true,listDicts0);
    }


    /*******************************************************************
     * Save Image
     ******************************************************************/

    public void saveImage(String filename){
        BufferedImage bi;
        try{
            bi = new Robot().createScreenCapture(this.getBounds());
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
         } catch (Exception ex) {
            Config.log("Unable to save "+filename+" dialog image");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton how_jButton;
    private javax.swing.JTabbedPane EMBOSS_est2test_tab;
    private javax.swing.JPanel general_jPanel1;
    private javax.swing.JLabel name_jLabel;
    private javax.swing.JTextField name_jTextField;
    private javax.swing.JButton rename_jButton;
    private javax.swing.JButton reset_jButton;
    private javax.swing.JButton close_jButton;
    private javax.swing.JButton stop_jButton;
    private javax.swing.JButton run_jButton;
    private javax.swing.ButtonGroup Menu_Buttons;
    private javax.swing.JButton docker_jButton;
    private javax.swing.JRadioButton Default_Options;
    private javax.swing.JRadioButton Returned_Options;
    private javax.swing.JRadioButton Advanced_Options;
    private javax.swing.JScrollPane main_jScroll;
    private javax.swing.JTabbedPane options_tab_panel;
    private javax.swing.JPanel OO_JPanel;
    private javax.swing.JLabel OO_OO1_JLabel;
    private javax.swing.JCheckBox OO_OO1_matchoo1_box;
    private javax.swing.JSpinner OO_OO1_matchoo1_JSpinnerValue;
    private javax.swing.JPanel RO_JPanel;
    private javax.swing.JTabbedPane RO_RO_JTabbedPane;
    private javax.swing.JPanel RO_RO1_JPanel;
    private javax.swing.JCheckBox RO_RO1_nomatchao1_box;
    private javax.swing.JSpinner RO_RO1_nomatchao1_JSpinnerValue;
    private javax.swing.JPanel RO_RO2_JPanel;
    private javax.swing.JCheckBox RO_RO2_nomatchao2_box;
    private javax.swing.JSpinner RO_RO2_nomatchao2_JSpinnerValue;
    private javax.swing.JPanel AO_JPanel;
    private javax.swing.JLabel AO_AO1_JLabel;
    private javax.swing.JCheckBox AO_AO1_matchao1_box;
    private javax.swing.JSpinner AO_AO1_matchao1_JSpinnerValue;
    private javax.swing.JLabel AO_AO2_JLabel;
    private javax.swing.JCheckBox AO_AO2_matchao2_box;
    private javax.swing.JSpinner AO_AO2_matchao2_JSpinnerValue;
    private javax.swing.JLabel AO_AO3_JLabel;
    private javax.swing.JCheckBox AO_AO3_matchao3_box;
    private javax.swing.JSpinner AO_AO3_matchao3_JSpinnerValue;
    private javax.swing.JLabel AO_AO4_JLabel;
    private javax.swing.JCheckBox AO_AO4_matchao4_box;
    private javax.swing.JSpinner AO_AO4_matchao4_JSpinnerValue;
    private javax.swing.JCheckBox AO_AO4_mismatchao4_box;
    private javax.swing.JSpinner AO_AO4_mismatchao4_JSpinnerValue;
    private javax.swing.JCheckBox AO_AO4_graphao4_box;
    private javax.swing.JComboBox AO_AO4_graphao4_JComboBoxValue;
    // End of variables declaration//GEN-END:variables
    }

