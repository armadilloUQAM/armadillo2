//System.out.println("update");
//System.out.println(properties.get("CM_A_i_function"));
//System.out.println("remove box");

/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

package editors;

import editor.clusterEditorProgram;
import configuration.Cluster;
import configuration.Config;
import configuration.Util;
import editor.EditorInterface;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.nio.file.Path;
import java.util.Vector;
import java.util.List;
import java.util.ArrayList;
import java.util.Hashtable;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import program.*;
import static program.RunProgram.workbox;
import workflows.armadillo_workflow;
import workflows.workflow_properties;
import workflows.workflow_properties_dictionnary;

/**
 *
 * @author Jérémy Goimard
 * @date Aout 2015
 * 
 * /!\ DONT FORGET TO ADD A NAME in the design for all /!\
 * 
 * If a button, box is used with spinner or text field,
 * the choice was made to use the value name because of the updated content function
 * 
 */

public class Bowtie2MapEditors extends javax.swing.JDialog implements EditorInterface  {
    
    /**
     * Creates new form MaqEditors
     */
    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected="";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow parent_workflow;
    
    public final String defaultNameString=" Name";
    static final boolean default_map=true;
    
    /////////////////////////////////////////////////////////////////////////
    /// Default Options
    
    public Bowtie2MapEditors(java.awt.Frame parent, armadillo_workflow parent_workflow) {
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bowtie2ChoicesButtons = new javax.swing.ButtonGroup();
        M_Buttons = new javax.swing.ButtonGroup();
        M_IDG_source_buttons = new javax.swing.ButtonGroup();
        CM_O_phred_Buttons = new javax.swing.ButtonGroup();
        CM_R_buttons = new javax.swing.ButtonGroup();
        CM_PE_type_buttons = new javax.swing.ButtonGroup();
        CM_PE_stream_buttons = new javax.swing.ButtonGroup();
        CM_A_Type = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        Bowtie2MapEditor = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        name_jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        reset_jButton3 = new javax.swing.JButton();
        stop_jButton4 = new javax.swing.JButton();
        run_jButton5 = new javax.swing.JButton();
        ClosejButton6 = new javax.swing.JButton();
        TypeOfLib_panel = new javax.swing.JPanel();
        M_SE_button = new javax.swing.JRadioButton();
        M_PE_button = new javax.swing.JRadioButton();
        M_PE_Panel = new javax.swing.JPanel();
        M_PE_noMixed_box = new javax.swing.JCheckBox();
        M_PE_noDiscordant_box = new javax.swing.JCheckBox();
        M_PE_dovetail_box = new javax.swing.JCheckBox();
        M_PE_noContain_box = new javax.swing.JCheckBox();
        M_PE_noOverlap_box = new javax.swing.JCheckBox();
        M_PE_I_value = new javax.swing.JSpinner();
        M_PE_X_value = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        M_PE_fr_button = new javax.swing.JRadioButton();
        M_PE_rf_button = new javax.swing.JRadioButton();
        M_PE_ff_button = new javax.swing.JRadioButton();
        M_PE_I_box = new javax.swing.JCheckBox();
        M_PE_X_box = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        Output_Panel = new javax.swing.JPanel();
        O_unANDunConc_box = new javax.swing.JCheckBox();
        O_alANDalConc_box = new javax.swing.JCheckBox();
        O_quiet_box = new javax.swing.JCheckBox();
        M_default_button = new javax.swing.JRadioButton();
        M_CM_button = new javax.swing.JRadioButton();
        Options = new javax.swing.JTabbedPane();
        M_Panel = new javax.swing.JPanel();
        M_Local_Label = new javax.swing.JLabel();
        M_L_F_button = new javax.swing.JRadioButton();
        M_L_VF_button = new javax.swing.JRadioButton();
        M_L_S_button = new javax.swing.JRadioButton();
        M_L_VS_button = new javax.swing.JRadioButton();
        M_ETE_VS_button = new javax.swing.JRadioButton();
        M_ETE_S_button = new javax.swing.JRadioButton();
        M_ETE_VF_button = new javax.swing.JRadioButton();
        M_ETE_F_button = new javax.swing.JRadioButton();
        M_ETE_Label = new javax.swing.JLabel();
        CM_Panel = new javax.swing.JPanel();
        CM_TabPanel = new javax.swing.JTabbedPane();
        CM_Input_Panel = new javax.swing.JPanel();
        CM_I_phred64_box = new javax.swing.JCheckBox();
        CM_I_phred33_box = new javax.swing.JCheckBox();
        CM_I_solexaQuals_box = new javax.swing.JCheckBox();
        CM_I_intQuals_box = new javax.swing.JCheckBox();
        CM_I_s_value = new javax.swing.JSpinner();
        CM_I_u_value = new javax.swing.JSpinner();
        CM_I_5_value = new javax.swing.JSpinner();
        CM_I_3_value = new javax.swing.JSpinner();
        CM_I_TOI_panel = new javax.swing.JPanel();
        CM_I_c_box = new javax.swing.JCheckBox();
        CM_I_r_box = new javax.swing.JCheckBox();
        CM_I_f_box = new javax.swing.JCheckBox();
        CM_I_qseq_box = new javax.swing.JCheckBox();
        CM_I_q_box = new javax.swing.JCheckBox();
        CM_I_s_box = new javax.swing.JCheckBox();
        CM_I_5_box = new javax.swing.JCheckBox();
        CM_I_u_box = new javax.swing.JCheckBox();
        CM_I_3_box = new javax.swing.JCheckBox();
        CM_Align_Panel = new javax.swing.JPanel();
        CM_A_ignoreQuals_box = new javax.swing.JCheckBox();
        CM_A_nofw_box = new javax.swing.JCheckBox();
        CM_A_no1mmUpfront_box = new javax.swing.JCheckBox();
        CM_A_i_text = new javax.swing.JTextField();
        CM_A_nCeil_text = new javax.swing.JTextField();
        CM_A_endToEnd_button = new javax.swing.JRadioButton();
        CM_A_local_button = new javax.swing.JRadioButton();
        CM_A_endToEnd_text = new javax.swing.JTextField();
        CM_A_N_value = new javax.swing.JSpinner();
        CM_A_L_value = new javax.swing.JSpinner();
        CM_A_dpad_value = new javax.swing.JSpinner();
        CM_A_gbar_value = new javax.swing.JSpinner();
        CM_A_local_text = new javax.swing.JTextField();
        CM_A_norc_box = new javax.swing.JCheckBox();
        CM_A_i_box = new javax.swing.JCheckBox();
        CM_A_nCeil_box = new javax.swing.JCheckBox();
        CM_A_N_box = new javax.swing.JCheckBox();
        CM_A_L_box = new javax.swing.JCheckBox();
        CM_A_dpad_box = new javax.swing.JCheckBox();
        CM_A_gbar_box = new javax.swing.JCheckBox();
        CM_Scoring_Panel = new javax.swing.JPanel();
        CM_S_first_label = new javax.swing.JLabel();
        CM_S_second_label = new javax.swing.JLabel();
        CM_S_ma_value = new javax.swing.JSpinner();
        CM_S_np_value = new javax.swing.JSpinner();
        CM_S_rdg1_value = new javax.swing.JSpinner();
        CM_S_rfg1_value = new javax.swing.JSpinner();
        CM_S_rdg2_value = new javax.swing.JSpinner();
        CM_S_rfg2_value = new javax.swing.JSpinner();
        CM_S_mp_text = new javax.swing.JTextField();
        CM_S_ma_box = new javax.swing.JCheckBox();
        CM_S_np_box = new javax.swing.JCheckBox();
        CM_S_mp_box = new javax.swing.JCheckBox();
        CM_S_rdg1_box = new javax.swing.JCheckBox();
        CM_S_rdg2_box = new javax.swing.JCheckBox();
        CM_S_rfg1_box = new javax.swing.JCheckBox();
        CM_S_rfg2_box = new javax.swing.JCheckBox();
        CM_Repor_Panel = new javax.swing.JPanel();
        CM_R_noset_button = new javax.swing.JRadioButton();
        CM_R_a_button = new javax.swing.JRadioButton();
        CM_R_k_button = new javax.swing.JRadioButton();
        CM_R_k_value = new javax.swing.JSpinner();
        CM_Effort_Panel = new javax.swing.JPanel();
        CM_E_D_value = new javax.swing.JSpinner();
        CM_E_R_value = new javax.swing.JSpinner();
        CM_E_D_box = new javax.swing.JCheckBox();
        CM_E_R_box = new javax.swing.JCheckBox();
        CM_SAM_Panel = new javax.swing.JPanel();
        CM_SAM_noUnal_box = new javax.swing.JCheckBox();
        CM_SAM_omitSecSeq_box = new javax.swing.JCheckBox();
        CM_SAM_noHd_box = new javax.swing.JCheckBox();
        CM_SAM_noSq_box = new javax.swing.JCheckBox();
        CM_SAM_rgId_text = new javax.swing.JTextField();
        CM_SAM_rg_text = new javax.swing.JTextField();
        CM_SAM_rgId_box = new javax.swing.JCheckBox();
        CM_SAM_rg_box = new javax.swing.JCheckBox();
        CM_Performance_Panel = new javax.swing.JPanel();
        CM_P_o_text = new javax.swing.JTextField();
        CM_P_reorder_box = new javax.swing.JCheckBox();
        CM_P_mm_box = new javax.swing.JCheckBox();
        CM_P_p_value = new javax.swing.JSpinner();
        CM_P_p_box = new javax.swing.JCheckBox();
        CM_P_o_box = new javax.swing.JCheckBox();
        CM_Other_Panel = new javax.swing.JPanel();
        CM_OO_qcFilter_box = new javax.swing.JCheckBox();
        CM_OO_nonDeterminist_box = new javax.swing.JCheckBox();
        CM_OO_seed_value = new javax.swing.JSpinner();
        CM_OO_seed_box = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        M_IDG_workflow_button = new javax.swing.JRadioButton();
        M_IDG_directory_button = new javax.swing.JRadioButton();
        M_IDG_main_panel = new javax.swing.JPanel();
        IDG_selected_ComboBox = new javax.swing.JComboBox();
        IDG_r_text = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        IDG_Update_button = new javax.swing.JButton();
        IDG_change_button = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        ClusterProgramButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("?");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Bowtie2MapEditor.setPreferredSize(new java.awt.Dimension(832, 573));
        Bowtie2MapEditor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                Bowtie2MapEditorComponentShown(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(830, 521));

        jLabel1.setText("Name");

        name_jTextField1.setText("Bowtie2 Mapping");
        name_jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_jTextField1ActionPerformed(evt);
            }
        });

        jButton2.setText("Rename");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        reset_jButton3.setText("Reset default value");
        reset_jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_jButton3ActionPerformed(evt);
            }
        });

        stop_jButton4.setText("Stop");
        stop_jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop_jButton4ActionPerformed(evt);
            }
        });

        run_jButton5.setText("Run");
        run_jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_jButton5ActionPerformed(evt);
            }
        });

        ClosejButton6.setText("Close");
        ClosejButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClosejButton6ActionPerformed(evt);
            }
        });

        TypeOfLib_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Type of librairy", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 1, 15))); // NOI18N
        TypeOfLib_panel.setPreferredSize(new java.awt.Dimension(426, 210));

        CM_PE_type_buttons.add(M_SE_button);
        M_SE_button.setSelected(true);
        M_SE_button.setText("Single-end");
        M_SE_button.setName("M_SE_button"); // NOI18N
        M_SE_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_SE_buttonActionPerformed(evt);
            }
        });

        CM_PE_type_buttons.add(M_PE_button);
        M_PE_button.setText("Paired-end");
        M_PE_button.setMaximumSize(new java.awt.Dimension(185, 24));
        M_PE_button.setMinimumSize(new java.awt.Dimension(185, 24));
        M_PE_button.setName("M_PE_button"); // NOI18N
        M_PE_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_buttonActionPerformed(evt);
            }
        });

        M_PE_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Paired-end Options"));
        M_PE_Panel.setName("M_PE_Panel"); // NOI18N

        M_PE_noMixed_box.setText("--no-mixed");
        M_PE_noMixed_box.setName("M_PE_noMixed_box"); // NOI18N
        M_PE_noMixed_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_noMixed_boxActionPerformed(evt);
            }
        });

        M_PE_noDiscordant_box.setText("--no-discordant");
        M_PE_noDiscordant_box.setName("M_PE_noDiscordant_box"); // NOI18N
        M_PE_noDiscordant_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_noDiscordant_boxActionPerformed(evt);
            }
        });

        M_PE_dovetail_box.setText("--dovetail");
        M_PE_dovetail_box.setName("M_PE_dovetail_box"); // NOI18N
        M_PE_dovetail_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_dovetail_boxActionPerformed(evt);
            }
        });

        M_PE_noContain_box.setText("--no-contain");
        M_PE_noContain_box.setName("M_PE_noContain_box"); // NOI18N
        M_PE_noContain_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_noContain_boxActionPerformed(evt);
            }
        });

        M_PE_noOverlap_box.setText("--no-overlap");
        M_PE_noOverlap_box.setName("M_PE_noOverlap_box"); // NOI18N
        M_PE_noOverlap_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_noOverlap_boxActionPerformed(evt);
            }
        });

        M_PE_I_value.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        M_PE_I_value.setName("M_PE_I_value"); // NOI18N
        M_PE_I_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                M_PE_I_spinner_value(evt);
            }
        });

        M_PE_X_value.setModel(new javax.swing.SpinnerNumberModel(500, 0, null, 1));
        M_PE_X_value.setName("M_PE_X_value"); // NOI18N
        M_PE_X_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                M_PE_X_spinner_value(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("upstream/downstream mate orientations"));

        CM_PE_stream_buttons.add(M_PE_fr_button);
        M_PE_fr_button.setSelected(true);
        M_PE_fr_button.setText("--fr");
        M_PE_fr_button.setName("M_PE_fr_button"); // NOI18N
        M_PE_fr_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_fr_buttonActionPerformed(evt);
            }
        });

        CM_PE_stream_buttons.add(M_PE_rf_button);
        M_PE_rf_button.setText("--rf");
        M_PE_rf_button.setName("M_PE_rf_button"); // NOI18N
        M_PE_rf_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_rf_buttonActionPerformed(evt);
            }
        });

        CM_PE_stream_buttons.add(M_PE_ff_button);
        M_PE_ff_button.setText("--ff");
        M_PE_ff_button.setName("M_PE_ff_button"); // NOI18N
        M_PE_ff_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_ff_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(M_PE_fr_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(M_PE_rf_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(M_PE_ff_button)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(M_PE_fr_button)
                .addComponent(M_PE_rf_button)
                .addComponent(M_PE_ff_button))
        );

        M_PE_I_box.setText("-I/--minins");
        M_PE_I_box.setName("M_PE_I_box"); // NOI18N
        M_PE_I_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_I_boxActionPerformed(evt);
            }
        });

        M_PE_X_box.setText("-X/--maxins");
        M_PE_X_box.setName("M_PE_X_box"); // NOI18N
        M_PE_X_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_PE_X_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout M_PE_PanelLayout = new javax.swing.GroupLayout(M_PE_Panel);
        M_PE_Panel.setLayout(M_PE_PanelLayout);
        M_PE_PanelLayout.setHorizontalGroup(
            M_PE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(M_PE_PanelLayout.createSequentialGroup()
                .addGroup(M_PE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(M_PE_noOverlap_box)
                    .addComponent(M_PE_noMixed_box))
                .addGap(18, 18, 18)
                .addGroup(M_PE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(M_PE_PanelLayout.createSequentialGroup()
                        .addComponent(M_PE_noDiscordant_box)
                        .addGap(18, 18, 18)
                        .addComponent(M_PE_dovetail_box))
                    .addComponent(M_PE_noContain_box)))
            .addGroup(M_PE_PanelLayout.createSequentialGroup()
                .addComponent(M_PE_I_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_PE_I_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_PE_X_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_PE_X_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        M_PE_PanelLayout.setVerticalGroup(
            M_PE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(M_PE_PanelLayout.createSequentialGroup()
                .addGroup(M_PE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_PE_I_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M_PE_X_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M_PE_I_box)
                    .addComponent(M_PE_X_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(M_PE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_PE_noDiscordant_box)
                    .addComponent(M_PE_noMixed_box)
                    .addComponent(M_PE_dovetail_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(M_PE_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_PE_noOverlap_box)
                    .addComponent(M_PE_noContain_box))
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel5.setText("Type");

        javax.swing.GroupLayout TypeOfLib_panelLayout = new javax.swing.GroupLayout(TypeOfLib_panel);
        TypeOfLib_panel.setLayout(TypeOfLib_panelLayout);
        TypeOfLib_panelLayout.setHorizontalGroup(
            TypeOfLib_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TypeOfLib_panelLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(M_SE_button)
                .addGap(18, 18, 18)
                .addComponent(M_PE_button, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(M_PE_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        TypeOfLib_panelLayout.setVerticalGroup(
            TypeOfLib_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TypeOfLib_panelLayout.createSequentialGroup()
                .addGroup(TypeOfLib_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(M_SE_button)
                    .addComponent(M_PE_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_PE_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Output_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Output Options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 1, 15))); // NOI18N
        Output_Panel.setName("Output_Panel"); // NOI18N

        O_unANDunConc_box.setText("--un & --un-conc");
        O_unANDunConc_box.setName("O_unANDunConc_box"); // NOI18N
        O_unANDunConc_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_unANDunConc_boxActionPerformed(evt);
            }
        });

        O_alANDalConc_box.setText("--al & --al-conc");
        O_alANDalConc_box.setName("O_alANDalConc_box"); // NOI18N
        O_alANDalConc_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_alANDalConc_boxActionPerformed(evt);
            }
        });

        O_quiet_box.setText("--quiet");
        O_quiet_box.setName("O_quiet_box"); // NOI18N
        O_quiet_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O_quiet_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Output_PanelLayout = new javax.swing.GroupLayout(Output_Panel);
        Output_Panel.setLayout(Output_PanelLayout);
        Output_PanelLayout.setHorizontalGroup(
            Output_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Output_PanelLayout.createSequentialGroup()
                .addComponent(O_unANDunConc_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(O_alANDalConc_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(O_quiet_box))
        );
        Output_PanelLayout.setVerticalGroup(
            Output_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Output_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(O_unANDunConc_box)
                .addComponent(O_alANDalConc_box)
                .addComponent(O_quiet_box))
        );

        M_Buttons.add(M_default_button);
        M_default_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_default_button.setSelected(true);
        M_default_button.setText("Use default options");
        M_default_button.setName("M_default_button"); // NOI18N
        M_default_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_default_buttonActionPerformed(evt);
            }
        });

        M_Buttons.add(M_CM_button);
        M_CM_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_CM_button.setText("Custom Mapping");
        M_CM_button.setName("M_CM_button"); // NOI18N
        M_CM_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_CM_buttonActionPerformed(evt);
            }
        });

        Options.setName("Options"); // NOI18N
        Options.setPreferredSize(new java.awt.Dimension(426, 257));

        M_Panel.setName("M_Panel"); // NOI18N

        M_Local_Label.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_Local_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        M_Local_Label.setText("Local");

        M_Buttons.add(M_L_F_button);
        M_L_F_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_L_F_button.setText("--fast-local");
        M_L_F_button.setToolTipText("In this mode, Bowtie 2 does not require that the entire read align from one end to the other. Rather, some characters may be omitted (\"soft clipped\") from the ends in order to achieve the greatest possible alignment score. The match bonus --ma is used in this mode, and the best possible alignment score is equal to the match bonus (--ma) times the length of the read. Specifying --local and one of the presets (e.g. --local --very-fast) is equivalent to specifying the local version of the preset (--very-fast-local). This is mutually exclusive with --end-to-end. --end-to-end is the default mode.");
        M_L_F_button.setName("M_L_F_button"); // NOI18N
        M_L_F_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_L_F_buttonActionPerformed(evt);
            }
        });

        M_Buttons.add(M_L_VF_button);
        M_L_VF_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_L_VF_button.setText("--fast-local");
        M_L_VF_button.setToolTipText("In this mode, Bowtie 2 does not require that the entire read align from one end to the other. Rather, some characters may be omitted (\"soft clipped\") from the ends in order to achieve the greatest possible alignment score. The match bonus --ma is used in this mode, and the best possible alignment score is equal to the match bonus (--ma) times the length of the read. Specifying --local and one of the presets (e.g. --local --very-fast) is equivalent to specifying the local version of the preset (--very-fast-local). This is mutually exclusive with --end-to-end. --end-to-end is the default mode.");
        M_L_VF_button.setName("M_L_VF_button"); // NOI18N
        M_L_VF_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_L_VF_buttonActionPerformed(evt);
            }
        });

        M_Buttons.add(M_L_S_button);
        M_L_S_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_L_S_button.setText("--sensitive-local");
        M_L_S_button.setToolTipText("In this mode, Bowtie 2 does not require that the entire read align from one end to the other. Rather, some characters may be omitted (\"soft clipped\") from the ends in order to achieve the greatest possible alignment score. The match bonus --ma is used in this mode, and the best possible alignment score is equal to the match bonus (--ma) times the length of the read. Specifying --local and one of the presets (e.g. --local --very-fast) is equivalent to specifying the local version of the preset (--very-fast-local). This is mutually exclusive with --end-to-end. --end-to-end is the default mode.");
        M_L_S_button.setName("M_L_S_button"); // NOI18N
        M_L_S_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_L_S_buttonActionPerformed(evt);
            }
        });

        M_Buttons.add(M_L_VS_button);
        M_L_VS_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_L_VS_button.setText("--very-sensitive-local");
        M_L_VS_button.setToolTipText("In this mode, Bowtie 2 does not require that the entire read align from one end to the other. Rather, some characters may be omitted (\"soft clipped\") from the ends in order to achieve the greatest possible alignment score. The match bonus --ma is used in this mode, and the best possible alignment score is equal to the match bonus (--ma) times the length of the read. Specifying --local and one of the presets (e.g. --local --very-fast) is equivalent to specifying the local version of the preset (--very-fast-local). This is mutually exclusive with --end-to-end. --end-to-end is the default mode.");
        M_L_VS_button.setName("M_L_VS_button"); // NOI18N
        M_L_VS_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_L_VS_buttonActionPerformed(evt);
            }
        });

        M_Buttons.add(M_ETE_VS_button);
        M_ETE_VS_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_ETE_VS_button.setText("--very-sensitive");
        M_ETE_VS_button.setName("M_ETE_VS_button"); // NOI18N
        M_ETE_VS_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_ETE_VS_buttonActionPerformed(evt);
            }
        });

        M_Buttons.add(M_ETE_S_button);
        M_ETE_S_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_ETE_S_button.setText("--sensitive");
        M_ETE_S_button.setName("M_ETE_S_button"); // NOI18N
        M_ETE_S_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_ETE_S_buttonActionPerformed(evt);
            }
        });

        M_Buttons.add(M_ETE_VF_button);
        M_ETE_VF_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_ETE_VF_button.setText("--very-fast");
        M_ETE_VF_button.setName("M_ETE_VF_button"); // NOI18N
        M_ETE_VF_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_ETE_VF_buttonActionPerformed(evt);
            }
        });

        M_Buttons.add(M_ETE_F_button);
        M_ETE_F_button.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_ETE_F_button.setText("--fast");
        M_ETE_F_button.setName("M_ETE_F_button"); // NOI18N
        M_ETE_F_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_ETE_F_buttonActionPerformed(evt);
            }
        });

        M_ETE_Label.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        M_ETE_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        M_ETE_Label.setText("End To End");

        javax.swing.GroupLayout M_PanelLayout = new javax.swing.GroupLayout(M_Panel);
        M_Panel.setLayout(M_PanelLayout);
        M_PanelLayout.setHorizontalGroup(
            M_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(M_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(M_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(M_ETE_F_button)
                    .addComponent(M_ETE_VF_button)
                    .addComponent(M_ETE_S_button)
                    .addComponent(M_ETE_VS_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(M_ETE_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(66, 66, 66)
                .addGroup(M_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(M_PanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(M_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(M_L_S_button)
                            .addComponent(M_L_VF_button)
                            .addComponent(M_L_F_button)
                            .addComponent(M_L_VS_button)))
                    .addComponent(M_Local_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43))
        );
        M_PanelLayout.setVerticalGroup(
            M_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(M_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(M_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_Local_Label)
                    .addComponent(M_ETE_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(M_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_L_F_button)
                    .addComponent(M_ETE_F_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(M_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_L_VF_button)
                    .addComponent(M_ETE_VF_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(M_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_L_S_button)
                    .addComponent(M_ETE_S_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(M_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_L_VS_button)
                    .addComponent(M_ETE_VS_button))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Options.addTab("Preset Mapping", M_Panel);

        CM_Panel.setName("CM_Panel"); // NOI18N

        CM_TabPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Advanced Mapping Options"));
        CM_TabPanel.setEnabled(false);
        CM_TabPanel.setName("CM_TabPanel"); // NOI18N

        CM_Input_Panel.setName("CM_Input_Panel"); // NOI18N

        CM_O_phred_Buttons.add(CM_I_phred64_box);
        CM_I_phred64_box.setText("--phred64");
        CM_I_phred64_box.setName("CM_I_phred64_box"); // NOI18N
        CM_I_phred64_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_phred64_boxActionPerformed(evt);
            }
        });

        CM_O_phred_Buttons.add(CM_I_phred33_box);
        CM_I_phred33_box.setText("--phred33");
        CM_I_phred33_box.setName("CM_I_phred33_box"); // NOI18N
        CM_I_phred33_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_phred33_boxActionPerformed(evt);
            }
        });

        CM_O_phred_Buttons.add(CM_I_solexaQuals_box);
        CM_I_solexaQuals_box.setText("--solexa-quals");
        CM_I_solexaQuals_box.setName("CM_I_solexaQuals_box"); // NOI18N
        CM_I_solexaQuals_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_solexaQuals_boxActionPerformed(evt);
            }
        });

        CM_O_phred_Buttons.add(CM_I_intQuals_box);
        CM_I_intQuals_box.setText("--int-quals");
        CM_I_intQuals_box.setName("CM_I_intQuals_box"); // NOI18N
        CM_I_intQuals_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_intQuals_boxActionPerformed(evt);
            }
        });

        CM_I_s_value.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        CM_I_s_value.setName("CM_I_s_value"); // NOI18N
        CM_I_s_value.setPreferredSize(new java.awt.Dimension(115, 20));
        CM_I_s_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_I_s_spinner_value(evt);
            }
        });

        CM_I_u_value.setModel(new javax.swing.SpinnerNumberModel(2147483647, 0, null, 1));
        CM_I_u_value.setName("CM_I_u_value"); // NOI18N
        CM_I_u_value.setPreferredSize(new java.awt.Dimension(115, 20));
        CM_I_u_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_I_u_spinner_value(evt);
            }
        });

        CM_I_5_value.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        CM_I_5_value.setName("CM_I_5_value"); // NOI18N
        CM_I_5_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_I_5_spinner_value(evt);
            }
        });

        CM_I_3_value.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        CM_I_3_value.setName("CM_I_3_value"); // NOI18N
        CM_I_3_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_I_3_spinner_value(evt);
            }
        });

        CM_I_TOI_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Type of inputs (only q is available and set by default)"));

        CM_I_c_box.setText("-c");
        CM_I_c_box.setName("CM_I_c_box"); // NOI18N
        CM_I_c_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_c_boxActionPerformed(evt);
            }
        });

        CM_I_r_box.setText("-r");
        CM_I_r_box.setName("CM_I_r_box"); // NOI18N
        CM_I_r_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_r_boxActionPerformed(evt);
            }
        });

        CM_I_f_box.setText("-f");
        CM_I_f_box.setName("CM_I_f_box"); // NOI18N
        CM_I_f_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_f_boxActionPerformed(evt);
            }
        });

        CM_I_qseq_box.setText("--qseq");
        CM_I_qseq_box.setName("CM_I_qseq_box"); // NOI18N
        CM_I_qseq_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_qseq_boxActionPerformed(evt);
            }
        });

        CM_I_q_box.setText("-q");
        CM_I_q_box.setName("CM_I_q_box"); // NOI18N
        CM_I_q_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_q_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_I_TOI_panelLayout = new javax.swing.GroupLayout(CM_I_TOI_panel);
        CM_I_TOI_panel.setLayout(CM_I_TOI_panelLayout);
        CM_I_TOI_panelLayout.setHorizontalGroup(
            CM_I_TOI_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CM_I_TOI_panelLayout.createSequentialGroup()
                .addComponent(CM_I_q_box)
                .addGap(18, 18, 18)
                .addComponent(CM_I_qseq_box)
                .addGap(18, 18, 18)
                .addComponent(CM_I_f_box)
                .addGap(18, 18, 18)
                .addComponent(CM_I_r_box)
                .addGap(18, 18, 18)
                .addComponent(CM_I_c_box)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        CM_I_TOI_panelLayout.setVerticalGroup(
            CM_I_TOI_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_I_TOI_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(CM_I_q_box)
                .addComponent(CM_I_qseq_box))
            .addGroup(CM_I_TOI_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(CM_I_f_box)
                .addComponent(CM_I_c_box)
                .addComponent(CM_I_r_box))
        );

        CM_I_c_box.getAccessibleContext().setAccessibleDescription("The read sequences are given on command line. I.e. <m1>, <m2> and <singles> are comma-separated lists of reads rather than lists of read files. There is no way to specify read names or qualities, so -c also implies --ignore-quals.");
        CM_I_r_box.getAccessibleContext().setAccessibleDescription("Reads (specified with <m1>, <m2>, <s>) are files with one input sequence per line, without any other information (no read names, no qualities). When -r is set, the result is as if --ignore-quals is also set.");
        CM_I_f_box.getAccessibleContext().setAccessibleName("");
        CM_I_f_box.getAccessibleContext().setAccessibleDescription("Reads (specified with <m1>, <m2>, <s>) are FASTA files. FASTA files usually have extension .fa, .fasta, .mfa, .fna or similar. FASTA files do not have a way of specifying quality values, so when -f is set, the result is as if --ignore-quals is also set.");
        CM_I_qseq_box.getAccessibleContext().setAccessibleDescription("Reads (specified with <m1>, <m2>, <s>) are QSEQ files. QSEQ files usually end in _qseq.txt. See also: --solexa-quals and --int-quals.");
        CM_I_q_box.getAccessibleContext().setAccessibleDescription("Reads (specified with <m1>, <m2>, <s>) are FASTQ files. FASTQ files usually have extension .fq or .fastq. FASTQ is the default format. See also: --solexa-quals and --int-quals.");

        CM_I_s_box.setText("-s/--skip");
        CM_I_s_box.setName("CM_I_s_box"); // NOI18N
        CM_I_s_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_s_boxActionPerformed(evt);
            }
        });

        CM_I_5_box.setText("-5/--trim5");
        CM_I_5_box.setName("CM_I_5_box"); // NOI18N
        CM_I_5_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_5_boxActionPerformed(evt);
            }
        });

        CM_I_u_box.setText("-u/--qupto");
        CM_I_u_box.setName("CM_I_u_box"); // NOI18N
        CM_I_u_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_u_boxActionPerformed(evt);
            }
        });

        CM_I_3_box.setText("-3/--trim3");
        CM_I_3_box.setName("CM_I_3_box"); // NOI18N
        CM_I_3_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_I_3_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_Input_PanelLayout = new javax.swing.GroupLayout(CM_Input_Panel);
        CM_Input_Panel.setLayout(CM_Input_PanelLayout);
        CM_Input_PanelLayout.setHorizontalGroup(
            CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Input_PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CM_Input_PanelLayout.createSequentialGroup()
                        .addComponent(CM_I_u_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_I_u_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_I_3_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_I_3_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CM_Input_PanelLayout.createSequentialGroup()
                        .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CM_I_solexaQuals_box)
                            .addComponent(CM_I_phred33_box))
                        .addGap(18, 18, 18)
                        .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CM_I_phred64_box)
                            .addComponent(CM_I_intQuals_box)))
                    .addComponent(CM_I_TOI_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CM_Input_PanelLayout.createSequentialGroup()
                        .addComponent(CM_I_s_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CM_I_s_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CM_I_5_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_I_5_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        CM_Input_PanelLayout.setVerticalGroup(
            CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Input_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CM_I_TOI_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CM_I_s_value, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CM_I_5_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CM_I_s_box)
                        .addComponent(CM_I_5_box)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_I_u_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_I_3_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_I_u_box)
                    .addComponent(CM_I_3_box))
                .addGap(18, 18, 18)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_I_phred33_box)
                    .addComponent(CM_I_phred64_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Input_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_I_solexaQuals_box)
                    .addComponent(CM_I_intQuals_box))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CM_I_phred64_box.getAccessibleContext().setAccessibleDescription("Input qualities are ASCII chars equal to the Phred quality plus 64. This is also called the \"Phred+64\" encoding.");
        CM_I_phred33_box.getAccessibleContext().setAccessibleDescription("Input qualities are ASCII chars equal to the Phred quality plus 33. This is also called the \"Phred+33\" encoding, which is used by the very latest Illumina pipelines.");
        CM_I_solexaQuals_box.getAccessibleContext().setAccessibleDescription("Convert input qualities from Solexa (which can be negative) to Phred (which can't). This scheme was used in older Illumina GA Pipeline versions (prior to 1.3). Default: off.");
        CM_I_intQuals_box.getAccessibleContext().setAccessibleDescription("Quality values are represented in the read input file as space-separated ASCII integers, e.g., 40 40 30 40..., rather than ASCII characters, e.g., II?I.... Integers are treated as being on the Phred quality scale unless --solexa-quals is also specified. Default: off.");

        CM_TabPanel.addTab("Input", CM_Input_Panel);

        CM_Align_Panel.setName("CM_Align_Panel"); // NOI18N

        CM_A_ignoreQuals_box.setText("--ignore-quals");
        CM_A_ignoreQuals_box.setName("CM_A_ignoreQuals_box"); // NOI18N
        CM_A_ignoreQuals_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_ignoreQuals_boxActionPerformed(evt);
            }
        });

        CM_A_nofw_box.setText("--nofw");
        CM_A_nofw_box.setName("CM_A_nofw_box"); // NOI18N
        CM_A_nofw_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_nofw_boxActionPerformed(evt);
            }
        });

        CM_A_no1mmUpfront_box.setText("--no-1mm-upfront");
        CM_A_no1mmUpfront_box.setName("CM_A_no1mmUpfront_box"); // NOI18N
        CM_A_no1mmUpfront_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_no1mmUpfront_boxActionPerformed(evt);
            }
        });

        CM_A_i_text.setName("CM_A_i_text"); // NOI18N
        CM_A_i_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CM_A_i_textFocusLost(evt);
            }
        });
        CM_A_i_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_i_textActionPerformed(evt);
            }
        });

        CM_A_nCeil_text.setName("CM_A_nCeil_text"); // NOI18N
        CM_A_nCeil_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CM_A_nCeil_textFocusLost(evt);
            }
        });
        CM_A_nCeil_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_nCeil_textActionPerformed(evt);
            }
        });

        CM_A_Type.add(CM_A_endToEnd_button);
        CM_A_endToEnd_button.setSelected(true);
        CM_A_endToEnd_button.setText("--end-to-end");
        CM_A_endToEnd_button.setName("CM_A_endToEnd_button"); // NOI18N
        CM_A_endToEnd_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_endToEnd_buttonActionPerformed(evt);
            }
        });

        CM_A_Type.add(CM_A_local_button);
        CM_A_local_button.setText("--local");
        CM_A_local_button.setToolTipText("In this mode, Bowtie 2 does not require that the entire read align from one end to the other. Rather, some characters may be omitted (\"soft clipped\") from the ends in order to achieve the greatest possible alignment score. The match bonus --ma is used in this mode, and the best possible alignment score is equal to the match bonus (--ma) times the length of the read. Specifying --local and one of the presets (e.g. --local --very-fast) is equivalent to specifying the local version of the preset (--very-fast-local). This is mutually exclusive with --end-to-end. --end-to-end is the default mode.");
        CM_A_local_button.setName("CM_A_local_button"); // NOI18N
        CM_A_local_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_local_buttonActionPerformed(evt);
            }
        });

        CM_A_endToEnd_text.setName("CM_A_endToEnd_text"); // NOI18N
        CM_A_endToEnd_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CM_A_endToEnd_textFocusLost(evt);
            }
        });
        CM_A_endToEnd_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_endToEnd_textActionPerformed(evt);
            }
        });

        CM_A_N_value.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1, 1));
        CM_A_N_value.setName("CM_A_N_value"); // NOI18N
        CM_A_N_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_A_N_spinner_value(evt);
            }
        });

        CM_A_L_value.setModel(new javax.swing.SpinnerNumberModel(22, 0, 33, 1));
        CM_A_L_value.setName("CM_A_L_value"); // NOI18N
        CM_A_L_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_A_L_spinner_value(evt);
            }
        });

        CM_A_dpad_value.setModel(new javax.swing.SpinnerNumberModel(15, 0, null, 1));
        CM_A_dpad_value.setName("CM_A_dpad_value"); // NOI18N
        CM_A_dpad_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_A_dpad_spinner_value(evt);
            }
        });

        CM_A_gbar_value.setModel(new javax.swing.SpinnerNumberModel(4, 0, null, 1));
        CM_A_gbar_value.setName("CM_A_gbar_value"); // NOI18N
        CM_A_gbar_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_A_gbar_spinner_value(evt);
            }
        });

        CM_A_local_text.setName("CM_A_local_text"); // NOI18N
        CM_A_local_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CM_A_local_textFocusLost(evt);
            }
        });
        CM_A_local_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_local_textActionPerformed(evt);
            }
        });

        CM_A_norc_box.setText("--norc");
        CM_A_norc_box.setName("CM_A_norc_box"); // NOI18N
        CM_A_norc_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_norc_boxActionPerformed(evt);
            }
        });

        CM_A_i_box.setText("-i");
        CM_A_i_box.setName("CM_A_i_box"); // NOI18N
        CM_A_i_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_i_boxActionPerformed(evt);
            }
        });

        CM_A_nCeil_box.setText("--n-ceil");
        CM_A_nCeil_box.setName("CM_A_nCeil_box"); // NOI18N
        CM_A_nCeil_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_nCeil_boxActionPerformed(evt);
            }
        });

        CM_A_N_box.setText("-N");
        CM_A_N_box.setName("CM_A_N_box"); // NOI18N
        CM_A_N_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_N_boxActionPerformed(evt);
            }
        });

        CM_A_L_box.setText("-L");
        CM_A_L_box.setName("CM_A_L_box"); // NOI18N
        CM_A_L_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_L_boxActionPerformed(evt);
            }
        });

        CM_A_dpad_box.setText("--dpad");
        CM_A_dpad_box.setName("CM_A_dpad_box"); // NOI18N
        CM_A_dpad_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_dpad_boxActionPerformed(evt);
            }
        });

        CM_A_gbar_box.setText("--gbar");
        CM_A_gbar_box.setName("CM_A_gbar_box"); // NOI18N
        CM_A_gbar_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_A_gbar_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_Align_PanelLayout = new javax.swing.GroupLayout(CM_Align_Panel);
        CM_Align_Panel.setLayout(CM_Align_PanelLayout);
        CM_Align_PanelLayout.setHorizontalGroup(
            CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                        .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CM_A_N_box)
                                    .addComponent(CM_A_L_box))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CM_A_N_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CM_A_L_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CM_A_dpad_box)
                                    .addComponent(CM_A_gbar_box))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CM_A_gbar_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CM_A_dpad_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CM_A_ignoreQuals_box)
                            .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                                .addComponent(CM_A_nofw_box)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CM_A_norc_box))
                            .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CM_Align_PanelLayout.createSequentialGroup()
                                    .addComponent(CM_A_i_box)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(CM_A_i_text, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(CM_A_no1mmUpfront_box))))
                    .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                        .addComponent(CM_A_nCeil_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_A_nCeil_text, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                        .addComponent(CM_A_endToEnd_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_A_endToEnd_text, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_A_local_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_A_local_text, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CM_Align_PanelLayout.setVerticalGroup(
            CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Align_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_N_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_A_ignoreQuals_box)
                    .addComponent(CM_A_N_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_L_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_A_no1mmUpfront_box)
                    .addComponent(CM_A_L_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_dpad_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_A_nofw_box)
                    .addComponent(CM_A_norc_box)
                    .addComponent(CM_A_dpad_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_gbar_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_A_i_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_A_i_box)
                    .addComponent(CM_A_gbar_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_nCeil_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_A_nCeil_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Align_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_A_endToEnd_button)
                    .addComponent(CM_A_endToEnd_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_A_local_button)
                    .addComponent(CM_A_local_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CM_A_ignoreQuals_box.getAccessibleContext().setAccessibleDescription("When calculating a mismatch penalty, always consider the quality value at the mismatched position to be the highest possible, regardless of the actual value. I.e. input is treated as though all quality values are high. This is also the default behavior when the input doesn't specify quality values (e.g. in -f, -r, or -c modes).");
        CM_A_nofw_box.getAccessibleContext().setAccessibleDescription("If --nofw is specified, bowtie2 will not attempt to align unpaired reads to the forward (Watson) reference strand. If --norc is specified, bowtie2 will not attempt to align unpaired reads against the reverse-complement (Crick) reference strand. In paired-end mode, --nofw and --norc pertain to the fragments; i.e. specifying --nofw causes bowtie2 to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand. Default: both strands enabled.");
        CM_A_no1mmUpfront_box.getAccessibleContext().setAccessibleDescription("By default, Bowtie 2 will attempt to find either an exact or a 1-mismatch end-to-end alignment for the read before trying the multiseed heuristic. Such alignments can be found very quickly, and many short read alignments have exact or near-exact end-to-end alignments. However, this can lead to unexpected alignments when the user also sets options governing the multiseed heuristic, like -L and -N. For instance, if the user specifies -N 0 and -L equal to the length of the read, the user will be surprised to find 1-mismatch alignments reported. This option prevents Bowtie 2 from searching for 1-mismatch end-to-end alignments before using the multiseed heuristic, which leads to the expected behavior when combined with options such as -L and -N. This comes at the expense of speed.");

        CM_TabPanel.addTab("Alignment", CM_Align_Panel);

        CM_Scoring_Panel.setName("CM_Scoring_Panel"); // NOI18N

        CM_S_first_label.setText("first");
        CM_S_first_label.setName("CM_S_first_label"); // NOI18N

        CM_S_second_label.setText("second");
        CM_S_second_label.setName("CM_S_second_label"); // NOI18N

        CM_S_ma_value.setModel(new javax.swing.SpinnerNumberModel(2, 0, null, 1));
        CM_S_ma_value.setToolTipText("");
        CM_S_ma_value.setName("CM_S_ma_value"); // NOI18N
        CM_S_ma_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_S_ma_spinner_value(evt);
            }
        });

        CM_S_np_value.setModel(new javax.swing.SpinnerNumberModel(1, 0, null, 1));
        CM_S_np_value.setName("CM_S_np_value"); // NOI18N
        CM_S_np_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_S_np_spinner_value(evt);
            }
        });

        CM_S_rdg1_value.setModel(new javax.swing.SpinnerNumberModel(5, 0, null, 1));
        CM_S_rdg1_value.setName("CM_S_rdg1_value"); // NOI18N
        CM_S_rdg1_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_S_rdg1_spinner_value(evt);
            }
        });

        CM_S_rfg1_value.setModel(new javax.swing.SpinnerNumberModel(5, 0, null, 1));
        CM_S_rfg1_value.setName("CM_S_rfg1_value"); // NOI18N
        CM_S_rfg1_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_S_rfg1_spinner_value(evt);
            }
        });

        CM_S_rdg2_value.setModel(new javax.swing.SpinnerNumberModel(3, 0, null, 1));
        CM_S_rdg2_value.setName("CM_S_rdg2_value"); // NOI18N
        CM_S_rdg2_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_S_rdg2_spinner_value(evt);
            }
        });

        CM_S_rfg2_value.setModel(new javax.swing.SpinnerNumberModel(3, 0, null, 1));
        CM_S_rfg2_value.setName("CM_S_rfg2_value"); // NOI18N
        CM_S_rfg2_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_S_rfg2_spinner_value(evt);
            }
        });

        CM_S_mp_text.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CM_S_mp_text.setText("6,2");
        CM_S_mp_text.setName("CM_S_mp_text"); // NOI18N
        CM_S_mp_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CM_S_mp_textFocusLost(evt);
            }
        });
        CM_S_mp_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_S_mp_textActionPerformed(evt);
            }
        });

        CM_S_ma_box.setText("--ma");
        CM_S_ma_box.setName("CM_S_ma_box"); // NOI18N
        CM_S_ma_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_S_ma_boxActionPerformed(evt);
            }
        });

        CM_S_np_box.setText("--np");
        CM_S_np_box.setName("CM_S_np_box"); // NOI18N
        CM_S_np_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_S_np_boxActionPerformed(evt);
            }
        });

        CM_S_mp_box.setText("--mp");
        CM_S_mp_box.setName("CM_S_mp_box"); // NOI18N
        CM_S_mp_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_S_mp_boxActionPerformed(evt);
            }
        });

        CM_S_rdg1_box.setText("--rdg1");
        CM_S_rdg1_box.setName("CM_S_rdg1_box"); // NOI18N
        CM_S_rdg1_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_S_rdg1_boxActionPerformed(evt);
            }
        });

        CM_S_rdg2_box.setText("--rdg2");
        CM_S_rdg2_box.setName("CM_S_rdg2_box"); // NOI18N
        CM_S_rdg2_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_S_rdg2_boxActionPerformed(evt);
            }
        });

        CM_S_rfg1_box.setText("--rfg1 ");
        CM_S_rfg1_box.setName("CM_S_rdg1_box"); // NOI18N
        CM_S_rfg1_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_S_rfg1_boxActionPerformed(evt);
            }
        });

        CM_S_rfg2_box.setText("--rfg2 ");
        CM_S_rfg2_box.setName("CM_S_rfg2_box"); // NOI18N
        CM_S_rfg2_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_S_rfg2_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_Scoring_PanelLayout = new javax.swing.GroupLayout(CM_Scoring_Panel);
        CM_Scoring_Panel.setLayout(CM_Scoring_PanelLayout);
        CM_Scoring_PanelLayout.setHorizontalGroup(
            CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Scoring_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CM_Scoring_PanelLayout.createSequentialGroup()
                        .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CM_S_first_label)
                            .addGroup(CM_Scoring_PanelLayout.createSequentialGroup()
                                .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CM_S_rfg1_box)
                                    .addComponent(CM_S_rdg1_box))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CM_S_rfg1_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CM_S_rdg1_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(8, 8, 8)
                        .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CM_S_second_label)
                            .addGroup(CM_Scoring_PanelLayout.createSequentialGroup()
                                .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(CM_S_rfg2_box)
                                    .addComponent(CM_S_rdg2_box))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CM_S_rfg2_value, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CM_S_rdg2_value, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(CM_Scoring_PanelLayout.createSequentialGroup()
                        .addComponent(CM_S_mp_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_S_mp_text, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CM_Scoring_PanelLayout.createSequentialGroup()
                        .addComponent(CM_S_ma_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_S_ma_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CM_S_np_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_S_np_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CM_Scoring_PanelLayout.setVerticalGroup(
            CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Scoring_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_S_ma_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_S_np_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_S_ma_box)
                    .addComponent(CM_S_np_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_S_mp_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_S_mp_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_S_second_label)
                    .addComponent(CM_S_first_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_S_rdg1_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_S_rdg2_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_S_rdg1_box)
                    .addComponent(CM_S_rdg2_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CM_Scoring_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_S_rfg2_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_S_rfg1_box)
                    .addComponent(CM_S_rfg2_box)
                    .addComponent(CM_S_rfg1_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CM_TabPanel.addTab("Scoring", CM_Scoring_Panel);

        CM_Repor_Panel.setName("CM_Repor_Panel"); // NOI18N

        CM_R_buttons.add(CM_R_noset_button);
        CM_R_noset_button.setSelected(true);
        CM_R_noset_button.setText("not set");
        CM_R_noset_button.setName("CM_R_noset_button"); // NOI18N
        CM_R_noset_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_R_noset_buttonActionPerformed(evt);
            }
        });

        CM_R_buttons.add(CM_R_a_button);
        CM_R_a_button.setText("-a");
        CM_R_a_button.setName("CM_R_a_button"); // NOI18N
        CM_R_a_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_R_a_buttonActionPerformed(evt);
            }
        });

        CM_R_buttons.add(CM_R_k_button);
        CM_R_k_button.setText("-k");
        CM_R_k_button.setName("CM_R_k_button"); // NOI18N
        CM_R_k_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_R_k_buttonActionPerformed(evt);
            }
        });

        CM_R_k_value.setModel(new javax.swing.SpinnerNumberModel(1, 0, null, 1));
        CM_R_k_value.setName("CM_R_k_value"); // NOI18N
        CM_R_k_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_R_k_spinner_value(evt);
            }
        });

        javax.swing.GroupLayout CM_Repor_PanelLayout = new javax.swing.GroupLayout(CM_Repor_Panel);
        CM_Repor_Panel.setLayout(CM_Repor_PanelLayout);
        CM_Repor_PanelLayout.setHorizontalGroup(
            CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Repor_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CM_Repor_PanelLayout.createSequentialGroup()
                        .addComponent(CM_R_k_button)
                        .addGap(18, 18, 18)
                        .addComponent(CM_R_k_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CM_R_a_button)
                    .addComponent(CM_R_noset_button))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CM_Repor_PanelLayout.setVerticalGroup(
            CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Repor_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CM_R_noset_button)
                .addGap(18, 18, 18)
                .addComponent(CM_R_a_button)
                .addGap(18, 18, 18)
                .addGroup(CM_Repor_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_R_k_button)
                    .addComponent(CM_R_k_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CM_TabPanel.addTab("Reporting", CM_Repor_Panel);

        CM_Effort_Panel.setName("CM_Effort_Panel"); // NOI18N

        CM_E_D_value.setModel(new javax.swing.SpinnerNumberModel(15, 0, null, 1));
        CM_E_D_value.setName("CM_E_D_value"); // NOI18N
        CM_E_D_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_E_D_spinner_value(evt);
            }
        });

        CM_E_R_value.setModel(new javax.swing.SpinnerNumberModel(2, 0, null, 1));
        CM_E_R_value.setName("CM_E_R_value"); // NOI18N
        CM_E_R_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_E_R_spinner_value(evt);
            }
        });

        CM_E_D_box.setText("-D");
        CM_E_D_box.setName("CM_E_D_box"); // NOI18N
        CM_E_D_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_E_D_boxActionPerformed(evt);
            }
        });

        CM_E_R_box.setText("-R");
        CM_E_R_box.setName("CM_E_R_box"); // NOI18N
        CM_E_R_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_E_R_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_Effort_PanelLayout = new javax.swing.GroupLayout(CM_Effort_Panel);
        CM_Effort_Panel.setLayout(CM_Effort_PanelLayout);
        CM_Effort_PanelLayout.setHorizontalGroup(
            CM_Effort_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Effort_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Effort_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CM_E_D_box)
                    .addComponent(CM_E_R_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Effort_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CM_E_D_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_E_R_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(252, Short.MAX_VALUE))
        );
        CM_Effort_PanelLayout.setVerticalGroup(
            CM_Effort_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Effort_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Effort_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_E_D_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_E_D_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Effort_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_E_R_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_E_R_box))
                .addContainerGap(123, Short.MAX_VALUE))
        );

        CM_TabPanel.addTab("Effort", CM_Effort_Panel);

        CM_SAM_Panel.setName("CM_SAM_Panel"); // NOI18N

        CM_SAM_noUnal_box.setText("--no-unal");
        CM_SAM_noUnal_box.setName("CM_SAM_noUnal_box"); // NOI18N
        CM_SAM_noUnal_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_SAM_noUnal_boxActionPerformed(evt);
            }
        });

        CM_SAM_omitSecSeq_box.setText("--omit-sec-seq");
        CM_SAM_omitSecSeq_box.setName("CM_SAM_omitSecSeq_box"); // NOI18N
        CM_SAM_omitSecSeq_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_SAM_omitSecSeq_boxActionPerformed(evt);
            }
        });

        CM_SAM_noHd_box.setText("--no-hd");
        CM_SAM_noHd_box.setName("CM_SAM_noHd_box"); // NOI18N
        CM_SAM_noHd_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_SAM_noHd_boxActionPerformed(evt);
            }
        });

        CM_SAM_noSq_box.setText("--no-sq");
        CM_SAM_noSq_box.setName("CM_SAM_noSq_box"); // NOI18N
        CM_SAM_noSq_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_SAM_noSq_boxActionPerformed(evt);
            }
        });

        CM_SAM_rgId_text.setName("CM_SAM_rgId_text"); // NOI18N
        CM_SAM_rgId_text.setPreferredSize(new java.awt.Dimension(265, 19));
        CM_SAM_rgId_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CM_SAM_rgId_textFocusLost(evt);
            }
        });
        CM_SAM_rgId_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_SAM_rgId_textActionPerformed(evt);
            }
        });

        CM_SAM_rg_text.setName("CM_SAM_rg_text"); // NOI18N
        CM_SAM_rg_text.setPreferredSize(new java.awt.Dimension(283, 19));
        CM_SAM_rg_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CM_SAM_rg_textFocusLost(evt);
            }
        });
        CM_SAM_rg_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_SAM_rg_textActionPerformed(evt);
            }
        });

        CM_SAM_rgId_box.setText("--rg-id");
        CM_SAM_rgId_box.setName("CM_SAM_rgId_box"); // NOI18N

        CM_SAM_rg_box.setText("--rg");
        CM_SAM_rg_box.setName("CM_SAM_rg_box"); // NOI18N

        javax.swing.GroupLayout CM_SAM_PanelLayout = new javax.swing.GroupLayout(CM_SAM_Panel);
        CM_SAM_Panel.setLayout(CM_SAM_PanelLayout);
        CM_SAM_PanelLayout.setHorizontalGroup(
            CM_SAM_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_SAM_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_SAM_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CM_SAM_PanelLayout.createSequentialGroup()
                        .addComponent(CM_SAM_noUnal_box)
                        .addGap(70, 70, 70)
                        .addComponent(CM_SAM_noHd_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CM_SAM_noSq_box))
                    .addGroup(CM_SAM_PanelLayout.createSequentialGroup()
                        .addComponent(CM_SAM_rgId_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_SAM_rgId_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CM_SAM_PanelLayout.createSequentialGroup()
                        .addComponent(CM_SAM_rg_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_SAM_rg_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CM_SAM_omitSecSeq_box))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CM_SAM_PanelLayout.setVerticalGroup(
            CM_SAM_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_SAM_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_SAM_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_SAM_noUnal_box)
                    .addComponent(CM_SAM_noHd_box)
                    .addComponent(CM_SAM_noSq_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CM_SAM_omitSecSeq_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_SAM_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_SAM_rgId_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_SAM_rgId_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CM_SAM_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_SAM_rg_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_SAM_rg_box))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CM_TabPanel.addTab("SAM", CM_SAM_Panel);

        CM_Performance_Panel.setName("CM_Performance_Panel"); // NOI18N

        CM_P_o_text.setEditable(false);
        CM_P_o_text.setText("NOT SET");
        CM_P_o_text.setEnabled(false);
        CM_P_o_text.setName("CM_P_o_text"); // NOI18N
        CM_P_o_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CM_P_o_textFocusLost(evt);
            }
        });
        CM_P_o_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_P_o_textActionPerformed(evt);
            }
        });

        CM_P_reorder_box.setText("--reorder");
        CM_P_reorder_box.setName("CM_P_reorder_box"); // NOI18N
        CM_P_reorder_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_P_reorder_boxActionPerformed(evt);
            }
        });

        CM_P_mm_box.setText("--mm");
        CM_P_mm_box.setName("CM_P_mm_box"); // NOI18N
        CM_P_mm_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_P_mm_boxActionPerformed(evt);
            }
        });

        CM_P_p_value.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        CM_P_p_value.setName("CM_P_p_value"); // NOI18N
        CM_P_p_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_P_t_spinner_value(evt);
            }
        });

        CM_P_p_box.setText("-p/--threads");
        CM_P_p_box.setName("CM_P_p_box"); // NOI18N
        CM_P_p_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_P_p_boxActionPerformed(evt);
            }
        });

        CM_P_o_box.setText("-o/--offrate");
        CM_P_o_box.setName("CM_P_o_box"); // NOI18N
        CM_P_o_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_P_o_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_Performance_PanelLayout = new javax.swing.GroupLayout(CM_Performance_Panel);
        CM_Performance_Panel.setLayout(CM_Performance_PanelLayout);
        CM_Performance_PanelLayout.setHorizontalGroup(
            CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Performance_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CM_Performance_PanelLayout.createSequentialGroup()
                        .addComponent(CM_P_o_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CM_P_o_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CM_Performance_PanelLayout.createSequentialGroup()
                        .addComponent(CM_P_p_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CM_P_p_value, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CM_P_reorder_box)
                    .addComponent(CM_P_mm_box))
                .addContainerGap(227, Short.MAX_VALUE))
        );
        CM_Performance_PanelLayout.setVerticalGroup(
            CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Performance_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_P_o_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_P_o_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CM_Performance_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_P_p_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CM_P_p_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CM_P_reorder_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CM_P_mm_box)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        CM_TabPanel.addTab("Performances", CM_Performance_Panel);

        CM_Other_Panel.setName("CM_Other_Panel"); // NOI18N

        CM_OO_qcFilter_box.setText("--qc-filter");
        CM_OO_qcFilter_box.setName("CM_OO_qcFilter_box"); // NOI18N
        CM_OO_qcFilter_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_OO_qcFilter_boxActionPerformed(evt);
            }
        });

        CM_OO_nonDeterminist_box.setText("--non-deterministic");
        CM_OO_nonDeterminist_box.setName("CM_OO_nonDeterminist_box"); // NOI18N
        CM_OO_nonDeterminist_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_OO_nonDeterminist_boxActionPerformed(evt);
            }
        });

        CM_OO_seed_value.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        CM_OO_seed_value.setName("CM_OO_seed_value"); // NOI18N
        CM_OO_seed_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CM_OO_seed_spinner_value(evt);
            }
        });

        CM_OO_seed_box.setText("--seed");
        CM_OO_seed_box.setName("CM_OO_seed_box"); // NOI18N
        CM_OO_seed_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CM_OO_seed_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CM_Other_PanelLayout = new javax.swing.GroupLayout(CM_Other_Panel);
        CM_Other_Panel.setLayout(CM_Other_PanelLayout);
        CM_Other_PanelLayout.setHorizontalGroup(
            CM_Other_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Other_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CM_Other_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CM_OO_qcFilter_box)
                    .addGroup(CM_Other_PanelLayout.createSequentialGroup()
                        .addComponent(CM_OO_seed_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CM_OO_seed_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CM_OO_nonDeterminist_box))
                .addContainerGap(216, Short.MAX_VALUE))
        );
        CM_Other_PanelLayout.setVerticalGroup(
            CM_Other_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_Other_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CM_OO_qcFilter_box)
                .addGap(18, 18, 18)
                .addGroup(CM_Other_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CM_OO_seed_box)
                    .addComponent(CM_OO_seed_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(CM_OO_nonDeterminist_box)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CM_TabPanel.addTab("Other options", CM_Other_Panel);

        javax.swing.GroupLayout CM_PanelLayout = new javax.swing.GroupLayout(CM_Panel);
        CM_Panel.setLayout(CM_PanelLayout);
        CM_PanelLayout.setHorizontalGroup(
            CM_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_PanelLayout.createSequentialGroup()
                .addComponent(CM_TabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        CM_PanelLayout.setVerticalGroup(
            CM_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CM_PanelLayout.createSequentialGroup()
                .addComponent(CM_TabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Options.addTab("Custom Mapping", CM_Panel);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Indexed Genome Source", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 1, 15))); // NOI18N
        jPanel5.setPreferredSize(new java.awt.Dimension(376, 210));

        M_IDG_source_buttons.add(M_IDG_workflow_button);
        M_IDG_workflow_button.setText("Workflow");
        M_IDG_workflow_button.setName("M_IDG_workflow_button"); // NOI18N
        M_IDG_workflow_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_IDG_workflow_buttonActionPerformed(evt);
            }
        });

        M_IDG_source_buttons.add(M_IDG_directory_button);
        M_IDG_directory_button.setText("Directory");
        M_IDG_directory_button.setName("M_IDG_directory_button"); // NOI18N
        M_IDG_directory_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_IDG_directory_buttonActionPerformed(evt);
            }
        });

        M_IDG_main_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Directory Indexed Genome Options"));
        M_IDG_main_panel.setName("M_IDG_main_panel"); // NOI18N
        M_IDG_main_panel.setPreferredSize(new java.awt.Dimension(354, 153));

        IDG_selected_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose_an_indexed_Genome" }));
        IDG_selected_ComboBox.setName("IDG_selected_ComboBox"); // NOI18N
        IDG_selected_ComboBox.setPreferredSize(new java.awt.Dimension(320, 27));
        IDG_selected_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_selected_ComboBoxActionPerformed(evt);
            }
        });

        IDG_r_text.setName("IDG_r_text"); // NOI18N
        IDG_r_text.setPreferredSize(new java.awt.Dimension(320, 27));
        IDG_r_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_r_textActionPerformed(evt);
            }
        });

        jLabel2.setText("Indexed Genome Repertory :");

        jLabel3.setText("Select an indexed genome");

        IDG_Update_button.setText("Update");
        IDG_Update_button.setName("IDG_Update_button"); // NOI18N
        IDG_Update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_Update_buttonActionPerformed(evt);
            }
        });

        IDG_change_button.setText("Change");
        IDG_change_button.setName("IDG_change_button"); // NOI18N
        IDG_change_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_change_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout M_IDG_main_panelLayout = new javax.swing.GroupLayout(M_IDG_main_panel);
        M_IDG_main_panel.setLayout(M_IDG_main_panelLayout);
        M_IDG_main_panelLayout.setHorizontalGroup(
            M_IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(M_IDG_main_panelLayout.createSequentialGroup()
                .addGroup(M_IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(IDG_r_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(M_IDG_main_panelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(IDG_change_button))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, M_IDG_main_panelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(IDG_Update_button))
                    .addComponent(IDG_selected_ComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        M_IDG_main_panelLayout.setVerticalGroup(
            M_IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(M_IDG_main_panelLayout.createSequentialGroup()
                .addGroup(M_IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(IDG_change_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDG_r_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(M_IDG_main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(IDG_Update_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDG_selected_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel4.setText("from");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(M_IDG_main_panel, 352, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(M_IDG_workflow_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(M_IDG_directory_button)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M_IDG_workflow_button)
                    .addComponent(M_IDG_directory_button)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(M_IDG_main_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(M_default_button)
                .addGap(18, 18, 18)
                .addComponent(M_CM_button)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TypeOfLib_panel, 445, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Output_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(run_jButton5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stop_jButton4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ClosejButton6))
                                    .addComponent(reset_jButton3)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TypeOfLib_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(M_default_button)
                            .addComponent(M_CM_button))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Output_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(reset_jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(run_jButton5)
                            .addComponent(stop_jButton4)
                            .addComponent(ClosejButton6))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Options.getAccessibleContext().setAccessibleName("");

        Bowtie2MapEditor.addTab("Bowtie2 Mapping", jPanel1);

        ClusterProgramButton.setText("Cluster Options");
        ClusterProgramButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClusterProgramButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ClusterProgramButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(Bowtie2MapEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(ClusterProgramButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Bowtie2MapEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Bowtie2MapEditor.getAccessibleContext().setAccessibleName("BwaEditors");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void Bowtie2MapEditorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_Bowtie2MapEditorComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_Bowtie2MapEditorComponentShown
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void ClosejButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClosejButton6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_ClosejButton6ActionPerformed
    
    private void run_jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_jButton5ActionPerformed
        // TODO add your handling code here:
        if (this.properties.isSet("ClassName")) {
            this.parent_workflow.workflow.updateDependance();
            programs prog=new programs(parent_workflow.workbox.getCurrentWorkflows());
            prog.Run(properties);
        }
    }//GEN-LAST:event_run_jButton5ActionPerformed
    
    private void stop_jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop_jButton4ActionPerformed
        // TODO add your handling code here:
        properties.put("Status", Config.status_nothing);
        properties.killThread();
    }//GEN-LAST:event_stop_jButton4ActionPerformed
    
    private void reset_jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_jButton3ActionPerformed
        // TODO add your handling code here:
        properties.load();             //--reload current properties from file
        this.setProperties(properties);//--Update current field
        this.display(properties);
    }//GEN-LAST:event_reset_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        properties.put("Name", this.name_jTextField1.getText());
    }//GEN-LAST:event_jButton2ActionPerformed
                                                                        
    private void name_jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_jTextField1ActionPerformed
    
    private void M_default_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_default_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_default_button);
    }//GEN-LAST:event_M_default_buttonActionPerformed
    
    private void CM_SAM_rg_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_SAM_rg_textActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,CM_SAM_rg_box,CM_SAM_rg_text);
    }//GEN-LAST:event_CM_SAM_rg_textActionPerformed
    
    private void CM_SAM_rgId_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_SAM_rgId_textActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,CM_SAM_rgId_box,CM_SAM_rgId_text);
    }//GEN-LAST:event_CM_SAM_rgId_textActionPerformed
    
    private void CM_A_endToEnd_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_endToEnd_textActionPerformed
        // TODO add your handling code here:
        if (CM_A_endToEnd_text.getText().equals("")){
            CM_A_endToEnd_text.setText("L,-0.6,-0.6");
        }
        Util.buttonEventText(properties,CM_A_endToEnd_button,CM_A_endToEnd_text);
    }//GEN-LAST:event_CM_A_endToEnd_textActionPerformed
    
    private void CM_A_nCeil_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_nCeil_textActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,CM_A_nCeil_box,CM_A_nCeil_text);
    }//GEN-LAST:event_CM_A_nCeil_textActionPerformed
    
    private void CM_A_i_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_i_textActionPerformed
        // TODO add your handling code here:
        if (CM_A_i_text.getText().equals("")) {
            CM_A_i_text.setText("S,1,1.15");
        }
        Util.boxEventText(properties,CM_A_i_box,CM_A_i_text);
    }//GEN-LAST:event_CM_A_i_textActionPerformed
    
    private void M_CM_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_CM_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_CM_button);
        //addCMMProperties(properties);
    }//GEN-LAST:event_M_CM_buttonActionPerformed
    
    private void M_ETE_F_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_ETE_F_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_ETE_F_button);
        //removeCMMProperties(properties);
    }//GEN-LAST:event_M_ETE_F_buttonActionPerformed
    
    private void M_ETE_S_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_ETE_S_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_ETE_S_button);
        //removeCMMProperties(properties);
    }//GEN-LAST:event_M_ETE_S_buttonActionPerformed
    
    private void M_ETE_VS_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_ETE_VS_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_ETE_VS_button);
        //removeCMMProperties(properties);
    }//GEN-LAST:event_M_ETE_VS_buttonActionPerformed
    
    private void CM_P_mm_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_P_mm_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_P_mm_box,null);
    }//GEN-LAST:event_CM_P_mm_boxActionPerformed
            
    private void M_ETE_VF_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_ETE_VF_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_ETE_VF_button);
    }//GEN-LAST:event_M_ETE_VF_buttonActionPerformed
    
    private void M_L_F_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_L_F_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_L_F_button);
    }//GEN-LAST:event_M_L_F_buttonActionPerformed
    
    private void M_L_VF_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_L_VF_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_L_VF_button);
    }//GEN-LAST:event_M_L_VF_buttonActionPerformed
    
    private void M_L_S_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_L_S_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_L_S_button);
    }//GEN-LAST:event_M_L_S_buttonActionPerformed
    
    private void M_L_VS_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_L_VS_buttonActionPerformed
        // TODO add your handling code here:
        menuEvent(M_L_VS_button);
    }//GEN-LAST:event_M_L_VS_buttonActionPerformed
                                    
    private void CM_OO_seed_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_OO_seed_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_OO_seed_box,CM_OO_seed_value);
    }//GEN-LAST:event_CM_OO_seed_spinner_value
        
    private void CM_I_s_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_I_s_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_s_box,CM_I_s_value);
    }//GEN-LAST:event_CM_I_s_spinner_value
    
    private void CM_I_u_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_I_u_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_u_box,CM_I_u_value);
    }//GEN-LAST:event_CM_I_u_spinner_value
    
    private void CM_I_5_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_I_5_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_5_box,CM_I_5_value);
    }//GEN-LAST:event_CM_I_5_spinner_value
    
    private void CM_I_3_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_I_3_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_3_box,CM_I_3_value);
    }//GEN-LAST:event_CM_I_3_spinner_value
    
    private void CM_A_N_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_A_N_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_N_box,CM_A_N_value);
    }//GEN-LAST:event_CM_A_N_spinner_value
    
    private void CM_A_L_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_A_L_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_L_box,CM_A_L_value);
    }//GEN-LAST:event_CM_A_L_spinner_value
    
    private void CM_A_i_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CM_A_i_textFocusLost
        // TODO add your handling code here:
        if (CM_A_i_text.getText().equals("")) {
            CM_A_i_text.setText("S,1,1.15");
        }
        Util.boxEventText(properties,CM_A_i_box,CM_A_i_text);
    }//GEN-LAST:event_CM_A_i_textFocusLost
    
    private void CM_A_nCeil_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CM_A_nCeil_textFocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,CM_A_nCeil_box,CM_A_nCeil_text);
    }//GEN-LAST:event_CM_A_nCeil_textFocusLost
    
    private void CM_A_dpad_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_A_dpad_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_dpad_box,CM_A_dpad_value);
    }//GEN-LAST:event_CM_A_dpad_spinner_value
    
    private void CM_A_gbar_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_A_gbar_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_gbar_box,CM_A_gbar_value);
    }//GEN-LAST:event_CM_A_gbar_spinner_value
    
    private void CM_A_endToEnd_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CM_A_endToEnd_textFocusLost
        // TODO add your handling code here:
        Util.buttonEventText(properties,CM_A_endToEnd_button,CM_A_endToEnd_text);
    }//GEN-LAST:event_CM_A_endToEnd_textFocusLost
    
    private void CM_S_ma_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_S_ma_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_ma_box,CM_S_ma_value);
    }//GEN-LAST:event_CM_S_ma_spinner_value
        
    private void CM_S_np_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_S_np_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_np_box,CM_S_np_value);
    }//GEN-LAST:event_CM_S_np_spinner_value
    
    private void CM_S_rdg1_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_S_rdg1_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_rdg1_box,CM_S_rdg1_value);
    }//GEN-LAST:event_CM_S_rdg1_spinner_value
    
    private void CM_S_rdg2_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_S_rdg2_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_rdg2_box,CM_S_rdg2_value);
    }//GEN-LAST:event_CM_S_rdg2_spinner_value
    
    private void CM_S_rfg1_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_S_rfg1_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_rfg1_box,CM_S_rfg1_value);
    }//GEN-LAST:event_CM_S_rfg1_spinner_value
    
    private void CM_S_rfg2_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_S_rfg2_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_rdg2_box,CM_S_rdg2_value);
    }//GEN-LAST:event_CM_S_rfg2_spinner_value
    
    private void CM_R_k_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_R_k_spinner_value
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,CM_R_k_button,CM_R_k_value);
    }//GEN-LAST:event_CM_R_k_spinner_value
    
    private void CM_R_k_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_R_k_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(CM_R_noset_button.getName())) properties.remove(CM_R_noset_button.getName());
        if (properties.isSet(CM_R_a_button.getName())) properties.remove(CM_R_a_button.getName());
        Util.buttonEventSpinner(properties,CM_R_k_button,CM_R_k_value);
    }//GEN-LAST:event_CM_R_k_buttonActionPerformed
    
    private void CM_R_a_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_R_a_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(CM_R_noset_button.getName())) properties.remove(CM_R_noset_button.getName());
        if (properties.isSet(CM_R_k_value.getName())) properties.remove(CM_R_k_value.getName());
        Util.buttonEventSpinner(properties,CM_R_a_button,null);
    }//GEN-LAST:event_CM_R_a_buttonActionPerformed
    
    private void CM_R_noset_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_R_noset_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(CM_R_a_button.getName())) properties.remove(CM_R_a_button.getName());
        if (properties.isSet(CM_R_k_value.getName())) properties.remove(CM_R_k_value.getName());
        Util.buttonEventSpinner(properties,CM_R_noset_button,null);
    }//GEN-LAST:event_CM_R_noset_buttonActionPerformed
    
    private void CM_A_ignoreQuals_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_ignoreQuals_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_ignoreQuals_box,null);
    }//GEN-LAST:event_CM_A_ignoreQuals_boxActionPerformed
    
    private void CM_A_no1mmUpfront_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_no1mmUpfront_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_no1mmUpfront_box,null);
    }//GEN-LAST:event_CM_A_no1mmUpfront_boxActionPerformed
    
    private void CM_A_nofw_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_nofw_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_nofw_box,null);
    }//GEN-LAST:event_CM_A_nofw_boxActionPerformed
    
    private void CM_A_endToEnd_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_endToEnd_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(CM_A_local_button.getName())){
            properties.remove(CM_A_local_button.getName());
        }
        CM_A_local_text.setEnabled(false);
        Util.buttonEventText(properties,CM_A_endToEnd_button,CM_A_endToEnd_text);
    }//GEN-LAST:event_CM_A_endToEnd_buttonActionPerformed
    
    private void CM_A_local_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_local_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(CM_A_endToEnd_button.getName())){
            properties.remove(CM_A_endToEnd_button.getName());
        }
        CM_A_endToEnd_text.setEnabled(false);
        Util.buttonEventText(properties,CM_A_local_button,CM_A_local_text);
    }//GEN-LAST:event_CM_A_local_buttonActionPerformed
    
    private void CM_I_q_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_q_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_qseq_box,null);
    }//GEN-LAST:event_CM_I_q_boxActionPerformed
    
    private void CM_I_qseq_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_qseq_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_qseq_box,null);
    }//GEN-LAST:event_CM_I_qseq_boxActionPerformed
    
    private void CM_I_solexaQuals_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_solexaQuals_boxActionPerformed
        // TODO add your handling code here:
        cleanQualBox();
        Util.boxEventSpinner(properties,CM_I_solexaQuals_box,null);
    }//GEN-LAST:event_CM_I_solexaQuals_boxActionPerformed
    
    private void CM_I_intQuals_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_intQuals_boxActionPerformed
        // TODO add your handling code here:
        cleanQualBox();
        Util.boxEventSpinner(properties,CM_I_intQuals_box,null);
    }//GEN-LAST:event_CM_I_intQuals_boxActionPerformed
    
    private void CM_I_f_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_f_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_f_box,null);
    }//GEN-LAST:event_CM_I_f_boxActionPerformed
    
    private void CM_I_r_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_r_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_r_box,null);
    }//GEN-LAST:event_CM_I_r_boxActionPerformed
    
    private void CM_I_c_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_c_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_c_box,null);
    }//GEN-LAST:event_CM_I_c_boxActionPerformed
    
    private void CM_I_phred33_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_phred33_boxActionPerformed
        // TODO add your handling code here:
        cleanQualBox();
        Util.boxEventSpinner(properties,CM_I_phred33_box,null);
    }//GEN-LAST:event_CM_I_phred33_boxActionPerformed
    
    private void CM_I_phred64_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_phred64_boxActionPerformed
        // TODO add your handling code here:
        cleanQualBox();
        Util.boxEventSpinner(properties,CM_I_phred64_box,null);
    }//GEN-LAST:event_CM_I_phred64_boxActionPerformed
    
    private void CM_E_D_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_E_D_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_E_D_box,CM_E_D_value);
    }//GEN-LAST:event_CM_E_D_spinner_value
    
    private void CM_E_R_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_E_R_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_E_R_box,CM_E_R_value);
    }//GEN-LAST:event_CM_E_R_spinner_value
    
    private void M_SE_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_SE_buttonActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,M_SE_button,null);
        if (properties.isSet(M_SE_button.getName())) {
            properties.remove(M_PE_button.getName());
        }
        peButtonFields(false);
    }//GEN-LAST:event_M_SE_buttonActionPerformed
    
    private void M_PE_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_buttonActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,M_PE_button,null);
        
        if (properties.isSet(M_PE_button.getName())) {
            peButtonFields(true);
            properties.remove(M_SE_button.getName());
            if ( !this.properties.isSet(M_PE_rf_button.getName()) && 
                 !this.properties.isSet(M_PE_ff_button.getName())
            ){
                this.M_PE_fr_button.setSelected(true);
                properties.put(M_PE_fr_button.getName(),M_PE_fr_button.getName());
            }
            M_PE_X_box.setSelected(true);
            M_PE_I_box.setSelected(true);
            Util.boxEventSpinner(properties,M_PE_X_box,M_PE_X_value);
            Util.boxEventSpinner(properties,M_PE_I_box,M_PE_I_value);
        }

    }//GEN-LAST:event_M_PE_buttonActionPerformed
        
    private void M_PE_I_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_M_PE_I_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_I_box,M_PE_I_value);
    }//GEN-LAST:event_M_PE_I_spinner_value
    
    private void M_PE_X_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_M_PE_X_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_X_box,M_PE_X_value);
    }//GEN-LAST:event_M_PE_X_spinner_value
    
    private void M_PE_fr_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_fr_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(M_PE_ff_button.getName())) properties.remove(M_PE_ff_button.getName());
        if (properties.isSet(M_PE_rf_button.getName())) properties.remove(M_PE_rf_button.getName());
        Util.buttonEventSpinner(properties,M_PE_fr_button,null);
    }//GEN-LAST:event_M_PE_fr_buttonActionPerformed
    
    private void M_PE_rf_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_rf_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(M_PE_fr_button.getName())) properties.remove(M_PE_fr_button.getName());
        if (properties.isSet(M_PE_ff_button.getName())) properties.remove(M_PE_ff_button.getName());
        Util.buttonEventSpinner(properties,M_PE_rf_button,null);
    }//GEN-LAST:event_M_PE_rf_buttonActionPerformed
    
    private void M_PE_ff_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_ff_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(M_PE_fr_button.getName())) properties.remove(M_PE_fr_button.getName());
        if (properties.isSet(M_PE_rf_button.getName())) properties.remove(M_PE_rf_button.getName());
        Util.buttonEventSpinner(properties,M_PE_ff_button,null);
    }//GEN-LAST:event_M_PE_ff_buttonActionPerformed
    
    private void M_PE_noMixed_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_noMixed_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_noMixed_box,null);
    }//GEN-LAST:event_M_PE_noMixed_boxActionPerformed
    
    private void M_PE_dovetail_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_dovetail_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_dovetail_box,null);
    }//GEN-LAST:event_M_PE_dovetail_boxActionPerformed
    
    private void M_PE_noDiscordant_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_noDiscordant_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_noDiscordant_box,null);
    }//GEN-LAST:event_M_PE_noDiscordant_boxActionPerformed
    
    private void M_PE_noContain_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_noContain_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_noContain_box,null);
    }//GEN-LAST:event_M_PE_noContain_boxActionPerformed
    
    private void M_PE_noOverlap_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_noOverlap_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_noOverlap_box,null);
    }//GEN-LAST:event_M_PE_noOverlap_boxActionPerformed
    
    private void O_unANDunConc_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_unANDunConc_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_unANDunConc_box,null);
    }//GEN-LAST:event_O_unANDunConc_boxActionPerformed
    
    private void O_alANDalConc_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_alANDalConc_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_alANDalConc_box,null);
    }//GEN-LAST:event_O_alANDalConc_boxActionPerformed
    
    private void O_quiet_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_quiet_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,O_quiet_box,null);
    }//GEN-LAST:event_O_quiet_boxActionPerformed
                
    private void CM_SAM_noUnal_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_SAM_noUnal_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_SAM_noUnal_box,null);
    }//GEN-LAST:event_CM_SAM_noUnal_boxActionPerformed
    
    private void CM_SAM_noHd_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_SAM_noHd_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_SAM_noHd_box,null);
    }//GEN-LAST:event_CM_SAM_noHd_boxActionPerformed
    
    private void CM_SAM_noSq_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_SAM_noSq_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_SAM_noSq_box,null);
    }//GEN-LAST:event_CM_SAM_noSq_boxActionPerformed
    
    private void CM_SAM_omitSecSeq_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_SAM_omitSecSeq_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_SAM_omitSecSeq_box,null);
    }//GEN-LAST:event_CM_SAM_omitSecSeq_boxActionPerformed
    
    private void CM_P_t_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CM_P_t_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_P_p_box,CM_P_p_value);
    }//GEN-LAST:event_CM_P_t_spinner_value
    
    private void CM_P_reorder_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_P_reorder_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_P_reorder_box,null);
    }//GEN-LAST:event_CM_P_reorder_boxActionPerformed
    
    private void CM_OO_qcFilter_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_OO_qcFilter_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_OO_qcFilter_box,null);
    }//GEN-LAST:event_CM_OO_qcFilter_boxActionPerformed
    
    private void CM_OO_nonDeterminist_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_OO_nonDeterminist_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_OO_nonDeterminist_box,null);
    }//GEN-LAST:event_CM_OO_nonDeterminist_boxActionPerformed
    
    private void CM_P_o_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_P_o_textActionPerformed
        // TODO add your handling code here:
        //Util.buttonEventText(properties,CM_P_o_text);
    }//GEN-LAST:event_CM_P_o_textActionPerformed
    
    private void CM_SAM_rgId_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CM_SAM_rgId_textFocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,CM_SAM_rgId_box,CM_SAM_rgId_text);
    }//GEN-LAST:event_CM_SAM_rgId_textFocusLost
    
    private void CM_SAM_rg_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CM_SAM_rg_textFocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,CM_SAM_rg_box,CM_SAM_rg_text);
    }//GEN-LAST:event_CM_SAM_rg_textFocusLost

    private void CM_A_local_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_local_textActionPerformed
        // TODO add your handling code here:
        Util.buttonEventText(properties,CM_A_endToEnd_button,CM_A_local_text);
        if (CM_A_local_text.equals("")){
            properties.put(CM_A_local_text,"G,20,8");
            CM_A_local_text.setText("G,20,8");
        }
    }//GEN-LAST:event_CM_A_local_textActionPerformed

    private void CM_A_local_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CM_A_local_textFocusLost
        // TODO add your handling code here:
        Util.buttonEventText(properties,CM_A_local_button,CM_A_local_text);
    }//GEN-LAST:event_CM_A_local_textFocusLost

    private void CM_P_o_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CM_P_o_textFocusLost
        // TODO add your handling code here:
        
        //textUpdate(CM_P_o_text);
    }//GEN-LAST:event_CM_P_o_textFocusLost

    private void CM_S_mp_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_S_mp_textActionPerformed
        // TODO add your handling code here:
        String s = CM_S_mp_text.getText();
        s = s.replace(".",",");
        if (!s.matches("\\d*,\\d*")) {
            CM_S_mp_text.setText("6,2");
        } else {
            CM_S_mp_text.setText(s);
        }
        Util.boxEventText(properties,CM_S_mp_box,CM_S_mp_text);
    }//GEN-LAST:event_CM_S_mp_textActionPerformed

    private void CM_S_mp_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CM_S_mp_textFocusLost
        // TODO add your handling code here:
        String s = CM_S_mp_text.getText();
        s = s.replace(".",",");
        if (!s.matches("\\d*,\\d*")) {
            CM_S_mp_text.setText("6,2");
        } else {
            CM_S_mp_text.setText(s);
        }
        Util.boxEventText(properties,CM_S_mp_box,CM_S_mp_text);
    }//GEN-LAST:event_CM_S_mp_textFocusLost

    private void IDG_change_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_change_buttonActionPerformed
        // TODO add your handling code here:
        JFileChooser d;
        
        if (this.IDG_r_text.getText().isEmpty()) {
            d=new JFileChooser(config.getExplorerPath());
        } else {
            d=new JFileChooser(this.IDG_r_text.getText());
        }
        
        d.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        d.setAcceptAllFileFilterUsed(false);
        d.setMultiSelectionEnabled(false);
        int result = d.showOpenDialog(this);
        
        if (result==JFileChooser.APPROVE_OPTION) {           
            File dir = d.getSelectedFile();
            
            // Set the text
            String s = dir.getAbsolutePath();
            IDG_r_text.setText(s);
            properties.put(IDG_r_text.getName(),s);
                
            // Set the combobox
            setIDGCombobox(s);
        }
    }//GEN-LAST:event_IDG_change_buttonActionPerformed
    
    private void IDG_Update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_Update_buttonActionPerformed
        // TODO add your handling code here:
        if (!IDG_r_text.getText().equals("")){
            setIDGCombobox(IDG_r_text.getText());
            IDG_selected_ComboBox.setSelectedIndex(0);
        }
    }//GEN-LAST:event_IDG_Update_buttonActionPerformed

    private void setIDGCombobox (String path) {
        Util.CreateDir(path);
        File dir = new File(path);
        IDG_selected_ComboBox.removeAllItems();
        IDG_selected_ComboBox.addItem("Choose_an_indexed_Genome");
        Hashtable<String,String> h = new Hashtable<String,String>();
        String s = "";
        String l = "_long";
        boolean b = false;
        for (File f:dir.listFiles()) {
            if (f.getName().matches(".*\\.\\d\\.bt2l$")) b = true;
            if (f.getName().matches(".*\\.\\d\\.bt2l?$")){
                s = f.getName().replaceAll("\\.\\d\\.bt2l?","");
                s = s.replaceAll("\\.rev$","");
                if (b) s+=l;
                if (!h.containsKey(s)){
                    h.put(s,"");
                    IDG_selected_ComboBox.addItem(s);
                }
            }
        }
    }

    private void IDG_r_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_r_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDG_r_textActionPerformed

    private void IDG_selected_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_selected_ComboBoxActionPerformed
        // TODO add your handling code here:
        if (IDG_selected_ComboBox.getItemCount()>0) {
            int i    = IDG_selected_ComboBox.getSelectedIndex();
            String s = IDG_selected_ComboBox.getItemAt(i).toString();
            properties.put(IDG_selected_ComboBox.getName(),s);
        }
    }//GEN-LAST:event_IDG_selected_ComboBoxActionPerformed

    private void M_IDG_workflow_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_IDG_workflow_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(M_IDG_directory_button.getName())) {
            properties.remove(M_IDG_directory_button.getName());
        }
        Util.buttonEventSpinner(properties,M_IDG_workflow_button,null);
        M_IDG_main_panel.setVisible(false);
    }//GEN-LAST:event_M_IDG_workflow_buttonActionPerformed

    private void M_IDG_directory_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_IDG_directory_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(M_IDG_workflow_button.getName())) {
            properties.remove(M_IDG_workflow_button.getName());
        }
        Util.buttonEventSpinner(properties,M_IDG_directory_button,null);
        M_IDG_main_panel.setVisible(true);
    }//GEN-LAST:event_M_IDG_directory_buttonActionPerformed

    private void CM_A_norc_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_norc_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_norc_box,null);
    }//GEN-LAST:event_CM_A_norc_boxActionPerformed

    private void CM_A_i_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_i_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,CM_A_i_box,CM_A_i_text);
    }//GEN-LAST:event_CM_A_i_boxActionPerformed

    private void CM_A_nCeil_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_nCeil_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,CM_A_nCeil_box,CM_A_nCeil_text);
    }//GEN-LAST:event_CM_A_nCeil_boxActionPerformed

    private void CM_OO_seed_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_OO_seed_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_OO_seed_box,CM_OO_seed_value);
    }//GEN-LAST:event_CM_OO_seed_boxActionPerformed

    private void CM_P_o_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_P_o_boxActionPerformed
        // TODO add your handling code here:
        //Util.boxEventText(properties,CM_P_o_box,CM_P_o_text);
    }//GEN-LAST:event_CM_P_o_boxActionPerformed

    private void CM_P_p_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_P_p_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_P_p_box,CM_P_p_value);
    }//GEN-LAST:event_CM_P_p_boxActionPerformed

    private void CM_I_s_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_s_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_s_box,CM_I_s_value);
    }//GEN-LAST:event_CM_I_s_boxActionPerformed

    private void CM_I_u_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_u_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_u_box,CM_I_u_value);
    }//GEN-LAST:event_CM_I_u_boxActionPerformed

    private void CM_I_5_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_5_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_5_box,CM_I_5_value);
    }//GEN-LAST:event_CM_I_5_boxActionPerformed

    private void CM_I_3_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_I_3_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_I_3_box,CM_I_3_value);
    }//GEN-LAST:event_CM_I_3_boxActionPerformed

    private void CM_A_N_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_N_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_N_box,CM_A_N_value);
    }//GEN-LAST:event_CM_A_N_boxActionPerformed

    private void CM_A_L_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_L_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_L_box,CM_A_L_value);
    }//GEN-LAST:event_CM_A_L_boxActionPerformed

    private void CM_A_dpad_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_dpad_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_dpad_box,CM_A_dpad_value);
    }//GEN-LAST:event_CM_A_dpad_boxActionPerformed

    private void CM_A_gbar_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_A_gbar_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_A_gbar_box,CM_A_gbar_value);
    }//GEN-LAST:event_CM_A_gbar_boxActionPerformed

    private void CM_S_ma_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_S_ma_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_ma_box,CM_S_ma_value);
    }//GEN-LAST:event_CM_S_ma_boxActionPerformed

    private void CM_S_np_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_S_np_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_np_box,CM_S_np_value);
    }//GEN-LAST:event_CM_S_np_boxActionPerformed

    private void CM_S_mp_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_S_mp_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,CM_S_mp_box,CM_S_mp_text);
    }//GEN-LAST:event_CM_S_mp_boxActionPerformed

    private void CM_S_rdg1_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_S_rdg1_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_rdg1_box,CM_S_rdg1_value);
    }//GEN-LAST:event_CM_S_rdg1_boxActionPerformed

    private void CM_S_rfg1_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_S_rfg1_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_rfg1_box,CM_S_rfg1_value);
    }//GEN-LAST:event_CM_S_rfg1_boxActionPerformed

    private void CM_S_rdg2_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_S_rdg2_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_rdg2_box,CM_S_rdg2_value);
    }//GEN-LAST:event_CM_S_rdg2_boxActionPerformed

    private void CM_S_rfg2_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_S_rfg2_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_S_rfg2_box,CM_S_rfg2_value);
    }//GEN-LAST:event_CM_S_rfg2_boxActionPerformed

    private void M_PE_I_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_I_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_I_box,M_PE_I_value);
    }//GEN-LAST:event_M_PE_I_boxActionPerformed

    private void M_PE_X_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M_PE_X_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,M_PE_X_box,M_PE_X_value);
    }//GEN-LAST:event_M_PE_X_boxActionPerformed

    private void CM_E_D_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_E_D_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_E_D_box,CM_E_D_value);
    }//GEN-LAST:event_CM_E_D_boxActionPerformed

    private void CM_E_R_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CM_E_R_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,CM_E_R_box,CM_E_R_value);
    }//GEN-LAST:event_CM_E_R_boxActionPerformed

    private void ClusterProgramButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClusterProgramButtonActionPerformed
        // TODO add your handling code here:
        clusterEditorProgram dock = new clusterEditorProgram(this.frame, false, properties);
        dock.setVisible(true);
    }//GEN-LAST:event_ClusterProgramButtonActionPerformed
    
    /**
     * Clean Variables in properties
     * /!\ DONT FORGET TO ADD A NAME in the design for all /!\
     * @param Save_Values
     */
    private void cleanQualBox () {
        String[] qualB = {"CM_I_phred64_box","CM_I_phred33_box","CM_I_solexaQuals_box","CM_I_intQuals_box"};
        for (String b:qualB) if (properties.isSet(b)) properties.remove(b);
    }
    
    /**
     * Save Values
     * @param Save_Values
     */
    //For Menu
    private void menuEvent(javax.swing.JRadioButton b){
        if (b.isSelected()==true){
            String s = b.getName();
            menuFields(s);
            properties.put(Options.getName(),s);
        }
    }
    
    /*
     ***************************************************************************
     * Enable or disable fields of Options
     ***************************************************************************
     */
    
    private void menuFields(String s){    
        if (properties.isSet(M_PE_button.getName())) {
            M_PE_Panel.setVisible(true);
            peButtonFields(true);
        } else {
            M_PE_Panel.setVisible(false);
            peButtonFields(false);
        }
        
        if (properties.isSet(M_IDG_directory_button.getName())) {
            M_IDG_main_panel.setVisible(true);
        } else M_IDG_main_panel.setVisible(false);
        
        if (s.equals(M_CM_button.getName())){
            this.M_CM_button.setSelected(true);
            this.Options.setSelectedIndex(1);
            this.CM_TabPanel.setSelectedIndex(0);
            this.customMappingFields(true);
        } else {
            this.Options.setSelectedIndex(0);
            this.customMappingFields(false);
        }
    }
    
    private void customMappingFields(boolean e){
        CM_TabPanel.setEnabled(e);
        CM_Input_Panel.setEnabled(e);
        CM_Align_Panel.setEnabled(e);
        CM_Scoring_Panel.setEnabled(e);
        CM_Repor_Panel.setEnabled(e);
        CM_Effort_Panel.setEnabled(e);
        CM_Other_Panel.setEnabled(e);
        CM_Performance_Panel.setEnabled(e);
        CM_SAM_Panel.setEnabled(e);
        this.CM_A_L_box.setEnabled(e);
        if (properties.isSet(CM_A_L_box.getName()) && e==true)
            this.CM_A_L_value.setEnabled(true);
        else this.CM_A_L_value.setEnabled(false);
        this.CM_A_N_box.setEnabled(e);
        if (properties.isSet(CM_A_N_box.getName()) && e==true)
            this.CM_A_N_value.setEnabled(true);
        else this.CM_A_N_value.setEnabled(false);
        this.CM_A_dpad_box.setEnabled(e);
        if (properties.isSet(CM_A_dpad_box.getName()) && e==true)
            this.CM_A_dpad_value.setEnabled(true);
        else this.CM_A_dpad_value.setEnabled(false);
        this.CM_A_gbar_box.setEnabled(e);
        if (properties.isSet(CM_A_gbar_box.getName()) && e==true)
            this.CM_A_gbar_value.setEnabled(true);
        else this.CM_A_gbar_value.setEnabled(false);
        this.CM_A_i_box.setEnabled(e);
        if (properties.isSet(CM_A_i_box.getName()) && e==true)
            this.CM_A_i_text.setEnabled(true);
        else this.CM_A_i_text.setEnabled(false);
        this.CM_A_ignoreQuals_box.setEnabled(e);
        this.CM_A_nCeil_box.setEnabled(e);
        if (properties.isSet(CM_A_nCeil_box.getName()) && e==true)
            this.CM_A_nCeil_text.setEnabled(true);
        else this.CM_A_nCeil_text.setEnabled(false);
        this.CM_A_no1mmUpfront_box.setEnabled(e);
        this.CM_A_nofw_box.setEnabled(e);
        this.CM_A_norc_box.setEnabled(e);
        this.CM_E_D_box.setEnabled(e);
        if (properties.isSet(CM_E_D_box.getName()) && e==true)
            this.CM_E_D_value.setEnabled(true);
        else this.CM_E_D_value.setEnabled(false);
        this.CM_E_R_box.setEnabled(e);
        if (properties.isSet(CM_E_R_box.getName()) && e==true)
            this.CM_E_R_value.setEnabled(true);
        else this.CM_E_R_value.setEnabled(false);
        this.CM_I_3_box.setEnabled(e);
        if (properties.isSet(CM_I_3_box.getName()) && e==true)
            this.CM_I_3_value.setEnabled(true);
        else this.CM_I_3_value.setEnabled(false);
        this.CM_I_5_box.setEnabled(e);
        if (properties.isSet(CM_I_5_box.getName()) && e==true)
            this.CM_I_5_value.setEnabled(true);
        else this.CM_I_5_value.setEnabled(false);
        this.CM_I_c_box.setEnabled(e);
        this.CM_I_f_box.setEnabled(e);
        this.CM_I_intQuals_box.setEnabled(e);
        this.CM_I_phred33_box.setEnabled(e);
        this.CM_I_phred64_box.setEnabled(e);
        this.CM_I_q_box.setEnabled(e);
        this.CM_I_qseq_box.setEnabled(e);
        this.CM_I_r_box.setEnabled(e);
        this.CM_I_s_box.setEnabled(e);
        if (properties.isSet(CM_I_s_box.getName()) && e==true)
            this.CM_I_s_value.setEnabled(true);
        else this.CM_I_s_value.setEnabled(false);
        this.CM_I_solexaQuals_box.setEnabled(e);
        this.CM_I_u_box.setEnabled(e);
        if (properties.isSet(CM_I_u_box.getName()) && e==true)
            this.CM_I_u_value.setEnabled(true);
        else this.CM_I_u_value.setEnabled(false);
        this.CM_OO_nonDeterminist_box.setEnabled(e);
        this.CM_OO_qcFilter_box.setEnabled(e);
        this.CM_OO_seed_box.setEnabled(e);
        if (properties.isSet(CM_OO_seed_box.getName()) && e==true)
            this.CM_OO_seed_value.setEnabled(true);
        else this.CM_OO_seed_value.setEnabled(false);
        this.CM_P_mm_box.setEnabled(e);
        this.CM_P_o_box.setEnabled(e);
        if (properties.isSet(CM_P_o_box.getName()) && e==true)
            this.CM_P_o_text.setEnabled(true);
        else this.CM_P_o_text.setEnabled(false);
        this.CM_P_p_box.setEnabled(e);
        if (properties.isSet(CM_P_p_box.getName()) && e==true)
            this.CM_P_p_value.setEnabled(true);
        else this.CM_P_p_value.setEnabled(false);
        this.CM_P_reorder_box.setEnabled(e);
        this.CM_SAM_noHd_box.setEnabled(e);
        this.CM_SAM_noSq_box.setEnabled(e);
        this.CM_SAM_noUnal_box.setEnabled(e);
        this.CM_SAM_omitSecSeq_box.setEnabled(e);
        this.CM_SAM_rgId_box.setEnabled(e);
        if (properties.isSet(CM_SAM_rgId_box.getName()) && e==true)
            this.CM_SAM_rgId_text.setEnabled(true);
        else this.CM_SAM_rgId_text.setEnabled(false);
        this.CM_SAM_rg_box.setEnabled(e);
        if (properties.isSet(CM_SAM_rg_box.getName()) && e==true)
            this.CM_SAM_rg_text.setEnabled(true);
        else this.CM_SAM_rg_text.setEnabled(false);
        this.CM_S_ma_box.setEnabled(e);
        if (properties.isSet(CM_S_ma_box.getName()) && e==true)
            this.CM_S_ma_value.setEnabled(true);
        else this.CM_S_ma_value.setEnabled(false);
        this.CM_S_mp_box.setEnabled(e);
        if (properties.isSet(CM_S_mp_box.getName()) && e==true)
            this.CM_S_mp_text.setEnabled(true);
        else this.CM_S_mp_text.setEnabled(false);
        this.CM_S_np_box.setEnabled(e);
        if (properties.isSet(CM_S_np_box.getName()) && e==true)
            this.CM_S_np_value.setEnabled(true);
        else this.CM_S_np_value.setEnabled(false);
        this.CM_S_rdg1_box.setEnabled(e);
        if (properties.isSet(CM_S_rdg1_box.getName()) && e==true)
            this.CM_S_rdg1_value.setEnabled(true);
        else this.CM_S_rdg1_value.setEnabled(false);
        this.CM_S_rdg2_box.setEnabled(e);
        if (properties.isSet(CM_S_rdg2_box.getName()) && e==true)
            this.CM_S_rdg2_value.setEnabled(true);
        else this.CM_S_rdg2_value.setEnabled(false);
        this.CM_S_rfg1_box.setEnabled(e);
        if (properties.isSet(CM_S_rfg1_box.getName()) && e==true)
            this.CM_S_rfg1_value.setEnabled(true);
        else this.CM_S_rfg1_value.setEnabled(false);
        this.CM_S_rfg2_box.setEnabled(e);
        if (properties.isSet(CM_S_rfg2_box.getName()) && e==true)
            this.CM_S_rfg2_value.setEnabled(true);
        else this.CM_S_rfg2_value.setEnabled(false);
    }
    
    private void peButtonFields(boolean enabled){
        this.M_PE_Panel.setVisible(enabled);
        this.M_PE_fr_button.setEnabled(enabled);
        this.M_PE_rf_button.setEnabled(enabled);
        this.M_PE_ff_button.setEnabled(enabled);
        this.M_PE_noMixed_box.setEnabled(enabled);
        this.M_PE_noDiscordant_box.setEnabled(enabled);
        this.M_PE_dovetail_box.setEnabled(enabled);
        this.M_PE_noContain_box.setEnabled(enabled);
        this.M_PE_noOverlap_box.setEnabled(enabled);
        this.M_PE_I_value.setEnabled(enabled);
        this.M_PE_X_value.setEnabled(enabled);
    }
    
    /*
     ***************************************************************************
     * Update Saved Properties => usp_functions
     ***************************************************************************
     */
    
    private void updateSavedProperties(workflow_properties properties) {
        // Menu Options
        this.usp_GenomeDirFields(properties);
        this.usp_PairedEndFields(properties);
        this.usp_OutputFields(properties);
        this.usp_CMFieldsValues(properties);
        this.usp_CMFieldsBox(properties);
        this.usp_MapOptions(properties);
    }
    
    private void usp_GenomeDirFields (workflow_properties properties) {
        //Genome Directory Options
        if (properties.isSet(M_IDG_directory_button.getName())) {
            this.M_IDG_directory_button.setSelected(true);
            this.M_IDG_main_panel.setVisible(true);
        } else if (properties.isSet(M_IDG_workflow_button.getName())) {
            this.M_IDG_workflow_button.setSelected(true);
            this.M_IDG_main_panel.setVisible(false);
        }
        if (properties.isSet(IDG_r_text.getName())) {
            IDG_r_text.setText(properties.get(IDG_r_text.getName()));
            setIDGCombobox(properties.get(IDG_r_text.getName()));
        }
    }

    private void usp_PairedEndFields(workflow_properties properties) {
        //Paired-end options
        if (this.properties.isSet(M_SE_button.getName())){
            this.M_SE_button.setSelected(true);
            this.peButtonFields(false);
        } else if (this.properties.isSet(M_PE_button.getName())){
            this.M_PE_button.setSelected(true);
            this.peButtonFields(true);
        }
        if (this.properties.isSet(M_PE_fr_button.getName())) {
            this.M_PE_fr_button.setSelected(true);
        } else if (this.properties.isSet(M_PE_rf_button.getName())){
            this.M_PE_rf_button.setSelected(true);
        } else if (this.properties.isSet(M_PE_ff_button.getName())){
            this.M_PE_ff_button.setSelected(true);
        }
        if (this.properties.isSet(M_PE_noMixed_box.getName())){
            this.M_PE_noMixed_box.setSelected(true);
        }
        if (this.properties.isSet(M_PE_dovetail_box.getName())){
            this.M_PE_dovetail_box.setSelected(true);
        }
        if (this.properties.isSet(M_PE_noDiscordant_box.getName())){
            this.M_PE_noDiscordant_box.setSelected(true);
        }
        if (this.properties.isSet(M_PE_noContain_box.getName())){
            this.M_PE_noContain_box.setSelected(true);
        }
        if (this.properties.isSet(M_PE_noOverlap_box.getName())){
            this.M_PE_noOverlap_box.setSelected(true);
        }

        if (this.properties.isSet(M_PE_X_value.getName())){
            this.M_PE_X_value.setValue(Integer.parseInt(this.properties.get(M_PE_X_value.getName())));
        }
        if (this.properties.isSet(M_PE_I_value.getName())){
            this.M_PE_I_value.setValue(Integer.parseInt(this.properties.get(M_PE_I_value.getName())));
        }

    }
    
    private void usp_OutputFields (workflow_properties properties) {
        //Output Options
        if (this.properties.isSet(O_unANDunConc_box.getName())){
            this.O_unANDunConc_box.setSelected(true);
        }
        if (this.properties.isSet(O_alANDalConc_box.getName())){
            this.O_alANDalConc_box.setSelected(true);
        }
        if (this.properties.isSet(O_quiet_box.getName())){
            this.O_quiet_box.setSelected(true);
        }
    }
        
    private void usp_MapOptions(workflow_properties properties) {
        // Mapping properties saved
        String s     = this.properties.get(Options.getName());
        
        if (s.equals(M_ETE_F_button.getName())){
            this.M_ETE_F_button.setSelected(true);
        } else if (s.equals(M_ETE_VF_button.getName())){
            this.M_ETE_VF_button.setSelected(true);
        } else if (s.equals(M_ETE_S_button.getName())){
            this.M_ETE_S_button.setSelected(true);
        } else if (s.equals(M_ETE_VS_button.getName())){
            this.M_ETE_VS_button.setSelected(true);
        } else if (s.equals(M_L_F_button.getName())){
            this.M_L_F_button.setSelected(true);
        } else if (s.equals(M_L_VF_button.getName())){
            this.M_L_VF_button.setSelected(true);
        } else if (s.equals(M_L_S_button.getName())){
            this.M_L_S_button.setSelected(true);
        } else if (s.equals(M_L_VS_button.getName())){
            this.M_L_VS_button.setSelected(true);
        } else if (s.equals(M_CM_button.getName())) {
            this.M_CM_button.setSelected(true);
        } else {
            this.M_default_button.setSelected(true);
            properties.put(Options.getName(),M_default_button.getName());
        }
    }
    
    private void usp_CMFieldsBox(workflow_properties properties) {
        if (this.properties.isSet(CM_A_L_box.getName())){
            this.CM_A_L_box.setSelected(true);
            this.CM_A_L_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_A_N_box.getName())){
            this.CM_A_N_box.setSelected(true);
            this.CM_A_N_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_A_dpad_box.getName())){
            this.CM_A_dpad_box.setSelected(true);
            this.CM_A_dpad_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_A_gbar_box.getName())){
            this.CM_A_gbar_box.setSelected(true);
            this.CM_A_gbar_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_A_i_box.getName())){
            this.CM_A_i_box.setSelected(true);
            this.CM_A_i_text.setEnabled(true);
        }
        if (this.properties.isSet(CM_A_ignoreQuals_box.getName())){
            this.CM_A_ignoreQuals_box.setSelected(true);
        }
        if (this.properties.isSet(CM_A_nCeil_box.getName())){
            this.CM_A_nCeil_box.setSelected(true);
            this.CM_A_nCeil_text.setEnabled(true);
        }
        if (this.properties.isSet(CM_A_no1mmUpfront_box.getName())){
            this.CM_A_no1mmUpfront_box.setSelected(true);
        }
        if (this.properties.isSet(CM_A_nofw_box.getName())){
            this.CM_A_nofw_box.setSelected(true);
        }
        if (this.properties.isSet(CM_A_norc_box.getName())){
            this.CM_A_norc_box.setSelected(true);
        }
        if (this.properties.isSet(CM_E_D_box.getName())){
            this.CM_E_D_box.setSelected(true);
            this.CM_E_D_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_E_R_box.getName())){
            this.CM_E_R_box.setSelected(true);
            this.CM_E_R_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_I_3_box.getName())){
            this.CM_I_3_box.setSelected(true);
            this.CM_I_3_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_I_5_box.getName())){
            this.CM_I_5_box.setSelected(true);
            this.CM_I_5_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_I_c_box.getName())){
            this.CM_I_c_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_f_box.getName())){
            this.CM_I_f_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_intQuals_box.getName())){
            this.CM_I_intQuals_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_phred33_box.getName())){
            this.CM_I_phred33_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_phred64_box.getName())){
            this.CM_I_phred64_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_q_box.getName())){
            this.CM_I_q_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_qseq_box.getName())){
            this.CM_I_qseq_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_r_box.getName())){
            this.CM_I_r_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_s_box.getName())){
            this.CM_I_s_box.setSelected(true);
            this.CM_I_s_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_I_solexaQuals_box.getName())){
            this.CM_I_solexaQuals_box.setSelected(true);
        }
        if (this.properties.isSet(CM_I_u_box.getName())){
            this.CM_I_u_box.setSelected(true);
            this.CM_I_u_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_OO_nonDeterminist_box.getName())){
            this.CM_OO_nonDeterminist_box.setSelected(true);
        }
        if (this.properties.isSet(CM_OO_qcFilter_box.getName())){
            this.CM_OO_qcFilter_box.setSelected(true);
        }
        if (this.properties.isSet(CM_OO_seed_box.getName())){
            this.CM_OO_seed_box.setSelected(true);
            this.CM_OO_seed_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_P_mm_box.getName())){
            this.CM_P_mm_box.setSelected(true);
        }
        if (this.properties.isSet(CM_P_o_box.getName())){
            this.CM_P_o_box.setSelected(true);
            this.CM_P_o_text.setEnabled(true);
        }
        if (this.properties.isSet(CM_P_p_box.getName())){
            this.CM_P_p_box.setSelected(true);
            this.CM_P_p_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_P_reorder_box.getName())){
            this.CM_P_reorder_box.setSelected(true);
        }
        if (this.properties.isSet(CM_SAM_noHd_box.getName())){
            this.CM_SAM_noHd_box.setSelected(true);
        }
        if (this.properties.isSet(CM_SAM_noSq_box.getName())){
            this.CM_SAM_noSq_box.setSelected(true);
        }
        if (this.properties.isSet(CM_SAM_noUnal_box.getName())){
            this.CM_SAM_noUnal_box.setSelected(true);
        }
        if (this.properties.isSet(CM_SAM_omitSecSeq_box.getName())){
            this.CM_SAM_omitSecSeq_box.setSelected(true);
        }
        if (this.properties.isSet(CM_SAM_rgId_box.getName())){
            this.CM_SAM_rgId_box.setSelected(true);
            this.CM_SAM_rgId_text.setEnabled(true);
        }
        if (this.properties.isSet(CM_SAM_rg_box.getName())){
            this.CM_SAM_rg_box.setSelected(true);
            this.CM_SAM_rg_text.setEnabled(true);
        }
        if (this.properties.isSet(CM_S_ma_box.getName())){
            this.CM_S_ma_box.setSelected(true);
            this.CM_S_ma_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_S_mp_box.getName())){
            this.CM_S_mp_box.setSelected(true);
            this.CM_S_mp_text.setEnabled(true);
        }
        if (this.properties.isSet(CM_S_np_box.getName())){
            this.CM_S_np_box.setSelected(true);
            this.CM_S_np_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_S_rdg1_box.getName())){
            this.CM_S_rdg1_box.setSelected(true);
            this.CM_S_rdg1_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_S_rdg2_box.getName())){
            this.CM_S_rdg2_box.setSelected(true);
            this.CM_S_rdg2_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_S_rfg1_box.getName())){
            this.CM_S_rfg1_box.setSelected(true);
            this.CM_S_rfg1_value.setEnabled(true);
        }
        if (this.properties.isSet(CM_S_rfg2_box.getName())){
            this.CM_S_rfg2_box.setSelected(true);
            this.CM_S_rfg2_value.setEnabled(true);
        }
    }
    
    private void usp_CMFieldsValues(workflow_properties properties) {
        if (this.properties.isSet(CM_A_L_value.getName())){
            this.CM_A_L_value.setValue(Integer.parseInt(this.properties.get(CM_A_L_value.getName())));
            this.CM_A_L_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_A_N_value.getName())){
            this.CM_A_N_value.setValue(Integer.parseInt(this.properties.get(CM_A_N_value.getName())));
            this.CM_A_N_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_A_dpad_value.getName())){
            this.CM_A_dpad_value.setValue(Integer.parseInt(this.properties.get(CM_A_dpad_value.getName())));
            this.CM_A_dpad_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_A_gbar_value.getName())){
            this.CM_A_gbar_value.setValue(Integer.parseInt(this.properties.get(CM_A_gbar_value.getName())));
            this.CM_A_gbar_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_E_D_value.getName())){
            this.CM_E_D_value.setValue(Integer.parseInt(this.properties.get(CM_E_D_value.getName())));
            this.CM_E_D_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_E_R_value.getName())){
            this.CM_E_R_value.setValue(Integer.parseInt(this.properties.get(CM_E_R_value.getName())));
            this.CM_E_R_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_I_3_value.getName())){
            this.CM_I_3_value.setValue(Integer.parseInt(this.properties.get(CM_I_3_value.getName())));
            this.CM_I_3_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_I_5_value.getName())){
            this.CM_I_5_value.setValue(Integer.parseInt(this.properties.get(CM_I_5_value.getName())));
            this.CM_I_5_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_I_s_value.getName())){
            this.CM_I_s_value.setValue(Integer.parseInt(this.properties.get(CM_I_s_value.getName())));
            this.CM_I_s_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_I_u_value.getName())){
            this.CM_I_u_value.setValue(Integer.parseInt(this.properties.get(CM_I_u_value.getName())));
            this.CM_I_u_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_OO_seed_value.getName())){
            this.CM_OO_seed_value.setValue(Integer.parseInt(this.properties.get(CM_OO_seed_value.getName())));
            this.CM_OO_seed_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_P_p_value.getName())){
            this.CM_P_p_value.setValue(Integer.parseInt(this.properties.get(CM_P_p_value.getName())));
            this.CM_P_p_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_R_k_value.getName())){
            this.CM_R_k_value.setValue(Integer.parseInt(this.properties.get(CM_R_k_value.getName())));
            this.CM_R_k_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_S_ma_value.getName())){
            this.CM_S_ma_value.setValue(Integer.parseInt(this.properties.get(CM_S_ma_value.getName())));
            this.CM_S_ma_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_S_np_value.getName())){
            this.CM_S_np_value.setValue(Integer.parseInt(this.properties.get(CM_S_np_value.getName())));
            this.CM_S_np_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_S_rdg1_value.getName())){
            this.CM_S_rdg1_value.setValue(Integer.parseInt(this.properties.get(CM_S_rdg1_value.getName())));
            this.CM_S_rdg1_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_S_rdg2_value.getName())){
            this.CM_S_rdg2_value.setValue(Integer.parseInt(this.properties.get(CM_S_rdg2_value.getName())));
            this.CM_S_rdg2_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_S_rfg1_value.getName())){
            this.CM_S_rfg1_value.setValue(Integer.parseInt(this.properties.get(CM_S_rfg1_value.getName())));
            this.CM_S_rfg1_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_S_rfg2_value.getName())){
            this.CM_S_rfg2_value.setValue(Integer.parseInt(this.properties.get(CM_S_rfg2_value.getName())));
            this.CM_S_rfg2_value.setEnabled(false);
        }
        if (this.properties.isSet(CM_A_endToEnd_text.getName())){
            this.CM_A_endToEnd_text.setText(this.properties.get(CM_A_endToEnd_text.getName()));
            this.CM_A_endToEnd_text.setEnabled(false);
        }
        if (this.properties.isSet(CM_A_i_text.getName())){
            this.CM_A_i_text.setText(this.properties.get(CM_A_i_text.getName()));
            this.CM_A_i_text.setEnabled(false);
        }
        if (this.properties.isSet(CM_A_local_text.getName())){
            this.CM_A_local_text.setText(this.properties.get(CM_A_local_text.getName()));
            this.CM_A_local_text.setEnabled(false);
        }
        if (this.properties.isSet(CM_A_nCeil_text.getName())){
            this.CM_A_nCeil_text.setText(this.properties.get(CM_A_nCeil_text.getName()));
            this.CM_A_nCeil_text.setEnabled(false);
        }
        if (this.properties.isSet(CM_P_o_text.getName())){
            this.CM_P_o_text.setText(this.properties.get(CM_P_o_text.getName()));
            this.CM_P_o_text.setEnabled(false);
        }
        if (this.properties.isSet(CM_SAM_rgId_text.getName())){
            this.CM_SAM_rgId_text.setText(this.properties.get(CM_SAM_rgId_text.getName()));
            this.CM_SAM_rgId_text.setEnabled(false);
        }
        if (this.properties.isSet(CM_SAM_rg_text.getName())){
            this.CM_SAM_rg_text.setText(this.properties.get(CM_SAM_rg_text.getName()));
            this.CM_SAM_rg_text.setEnabled(false);
        }
        if (this.properties.isSet(CM_S_mp_text.getName())){
            this.CM_S_mp_text.setText(this.properties.get(CM_S_mp_text.getName()));
            this.CM_S_mp_text.setEnabled(false);
        }
    }
    
    /**
     * Set the configuration properties for this object
     */
    
    public void display(workflow_properties properties) {
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // Set position
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
                (screenSize.height-d.height)/2);
        
        // Set the program properties
        this.setProperties(properties);
        
        if (workbox.isWorkboxOnCLuster())
            ClusterProgramButton.setVisible(true);
        else
            ClusterProgramButton.setVisible(false);
            
            
        // Update Saved Properties => usp
        this.updateSavedProperties(properties);
        
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }
    
    /**
     * Set Properties
     * @param properties
     */
    public void setProperties(workflow_properties properties) {
            this.properties=properties;
            setTitle(properties.getName());
            //if (this.properties.isSet("Description")) this.Notice.setText(properties.get("Description"));

            // Properties Default Options
            this.defaultPgrmValues(properties);

            // Set the menu
            this.menuFields(Options.getName());
        }

        public void setProperties(String filename, String path) {
            workflow_properties tmp=new workflow_properties();
            tmp.load(filename, path);
            this.properties=tmp;
            setTitle(properties.getName());
        }

        /**
         * Set With default program values present in properties file
         */
        
        private void defaultPgrmValues(workflow_properties properties) {
            Util.getDefaultPgrmValues(properties,this.properties.isSet(Options.getName()));
        }
        
    @Override
    public void saveImage(String filename) {
        BufferedImage bi;
        try {
            bi = new Robot().createScreenCapture(this.getBounds());
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
        } catch (Exception ex) {
            Config.log("Unable to save "+filename+" dialog image");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Bowtie2MapEditor;
    private javax.swing.JCheckBox CM_A_L_box;
    private javax.swing.JSpinner CM_A_L_value;
    private javax.swing.JCheckBox CM_A_N_box;
    private javax.swing.JSpinner CM_A_N_value;
    private javax.swing.ButtonGroup CM_A_Type;
    private javax.swing.JCheckBox CM_A_dpad_box;
    private javax.swing.JSpinner CM_A_dpad_value;
    private javax.swing.JRadioButton CM_A_endToEnd_button;
    private javax.swing.JTextField CM_A_endToEnd_text;
    private javax.swing.JCheckBox CM_A_gbar_box;
    private javax.swing.JSpinner CM_A_gbar_value;
    private javax.swing.JCheckBox CM_A_i_box;
    private javax.swing.JTextField CM_A_i_text;
    private javax.swing.JCheckBox CM_A_ignoreQuals_box;
    private javax.swing.JRadioButton CM_A_local_button;
    private javax.swing.JTextField CM_A_local_text;
    private javax.swing.JCheckBox CM_A_nCeil_box;
    private javax.swing.JTextField CM_A_nCeil_text;
    private javax.swing.JCheckBox CM_A_no1mmUpfront_box;
    private javax.swing.JCheckBox CM_A_nofw_box;
    private javax.swing.JCheckBox CM_A_norc_box;
    private javax.swing.JPanel CM_Align_Panel;
    private javax.swing.JCheckBox CM_E_D_box;
    private javax.swing.JSpinner CM_E_D_value;
    private javax.swing.JCheckBox CM_E_R_box;
    private javax.swing.JSpinner CM_E_R_value;
    private javax.swing.JPanel CM_Effort_Panel;
    private javax.swing.JCheckBox CM_I_3_box;
    private javax.swing.JSpinner CM_I_3_value;
    private javax.swing.JCheckBox CM_I_5_box;
    private javax.swing.JSpinner CM_I_5_value;
    private javax.swing.JPanel CM_I_TOI_panel;
    private javax.swing.JCheckBox CM_I_c_box;
    private javax.swing.JCheckBox CM_I_f_box;
    private javax.swing.JCheckBox CM_I_intQuals_box;
    private javax.swing.JCheckBox CM_I_phred33_box;
    private javax.swing.JCheckBox CM_I_phred64_box;
    private javax.swing.JCheckBox CM_I_q_box;
    private javax.swing.JCheckBox CM_I_qseq_box;
    private javax.swing.JCheckBox CM_I_r_box;
    private javax.swing.JCheckBox CM_I_s_box;
    private javax.swing.JSpinner CM_I_s_value;
    private javax.swing.JCheckBox CM_I_solexaQuals_box;
    private javax.swing.JCheckBox CM_I_u_box;
    private javax.swing.JSpinner CM_I_u_value;
    private javax.swing.JPanel CM_Input_Panel;
    private javax.swing.JCheckBox CM_OO_nonDeterminist_box;
    private javax.swing.JCheckBox CM_OO_qcFilter_box;
    private javax.swing.JCheckBox CM_OO_seed_box;
    private javax.swing.JSpinner CM_OO_seed_value;
    private javax.swing.ButtonGroup CM_O_phred_Buttons;
    private javax.swing.JPanel CM_Other_Panel;
    private javax.swing.ButtonGroup CM_PE_stream_buttons;
    private javax.swing.ButtonGroup CM_PE_type_buttons;
    private javax.swing.JCheckBox CM_P_mm_box;
    private javax.swing.JCheckBox CM_P_o_box;
    private javax.swing.JTextField CM_P_o_text;
    private javax.swing.JCheckBox CM_P_p_box;
    private javax.swing.JSpinner CM_P_p_value;
    private javax.swing.JCheckBox CM_P_reorder_box;
    private javax.swing.JPanel CM_Panel;
    private javax.swing.JPanel CM_Performance_Panel;
    private javax.swing.JRadioButton CM_R_a_button;
    private javax.swing.ButtonGroup CM_R_buttons;
    private javax.swing.JRadioButton CM_R_k_button;
    private javax.swing.JSpinner CM_R_k_value;
    private javax.swing.JRadioButton CM_R_noset_button;
    private javax.swing.JPanel CM_Repor_Panel;
    private javax.swing.JPanel CM_SAM_Panel;
    private javax.swing.JCheckBox CM_SAM_noHd_box;
    private javax.swing.JCheckBox CM_SAM_noSq_box;
    private javax.swing.JCheckBox CM_SAM_noUnal_box;
    private javax.swing.JCheckBox CM_SAM_omitSecSeq_box;
    private javax.swing.JCheckBox CM_SAM_rgId_box;
    private javax.swing.JTextField CM_SAM_rgId_text;
    private javax.swing.JCheckBox CM_SAM_rg_box;
    private javax.swing.JTextField CM_SAM_rg_text;
    private javax.swing.JLabel CM_S_first_label;
    private javax.swing.JCheckBox CM_S_ma_box;
    private javax.swing.JSpinner CM_S_ma_value;
    private javax.swing.JCheckBox CM_S_mp_box;
    private javax.swing.JTextField CM_S_mp_text;
    private javax.swing.JCheckBox CM_S_np_box;
    private javax.swing.JSpinner CM_S_np_value;
    private javax.swing.JCheckBox CM_S_rdg1_box;
    private javax.swing.JSpinner CM_S_rdg1_value;
    private javax.swing.JCheckBox CM_S_rdg2_box;
    private javax.swing.JSpinner CM_S_rdg2_value;
    private javax.swing.JCheckBox CM_S_rfg1_box;
    private javax.swing.JSpinner CM_S_rfg1_value;
    private javax.swing.JCheckBox CM_S_rfg2_box;
    private javax.swing.JSpinner CM_S_rfg2_value;
    private javax.swing.JLabel CM_S_second_label;
    private javax.swing.JPanel CM_Scoring_Panel;
    private javax.swing.JTabbedPane CM_TabPanel;
    private javax.swing.JButton ClosejButton6;
    private javax.swing.JButton ClusterProgramButton;
    private javax.swing.JButton IDG_Update_button;
    private javax.swing.JButton IDG_change_button;
    private javax.swing.JTextField IDG_r_text;
    private javax.swing.JComboBox IDG_selected_ComboBox;
    private javax.swing.ButtonGroup M_Buttons;
    private javax.swing.JRadioButton M_CM_button;
    private javax.swing.JRadioButton M_ETE_F_button;
    private javax.swing.JLabel M_ETE_Label;
    private javax.swing.JRadioButton M_ETE_S_button;
    private javax.swing.JRadioButton M_ETE_VF_button;
    private javax.swing.JRadioButton M_ETE_VS_button;
    private javax.swing.JRadioButton M_IDG_directory_button;
    private javax.swing.JPanel M_IDG_main_panel;
    private javax.swing.ButtonGroup M_IDG_source_buttons;
    private javax.swing.JRadioButton M_IDG_workflow_button;
    private javax.swing.JRadioButton M_L_F_button;
    private javax.swing.JRadioButton M_L_S_button;
    private javax.swing.JRadioButton M_L_VF_button;
    private javax.swing.JRadioButton M_L_VS_button;
    private javax.swing.JLabel M_Local_Label;
    private javax.swing.JCheckBox M_PE_I_box;
    private javax.swing.JSpinner M_PE_I_value;
    private javax.swing.JPanel M_PE_Panel;
    private javax.swing.JCheckBox M_PE_X_box;
    private javax.swing.JSpinner M_PE_X_value;
    private javax.swing.JRadioButton M_PE_button;
    private javax.swing.JCheckBox M_PE_dovetail_box;
    private javax.swing.JRadioButton M_PE_ff_button;
    private javax.swing.JRadioButton M_PE_fr_button;
    private javax.swing.JCheckBox M_PE_noContain_box;
    private javax.swing.JCheckBox M_PE_noDiscordant_box;
    private javax.swing.JCheckBox M_PE_noMixed_box;
    private javax.swing.JCheckBox M_PE_noOverlap_box;
    private javax.swing.JRadioButton M_PE_rf_button;
    private javax.swing.JPanel M_Panel;
    private javax.swing.JRadioButton M_SE_button;
    private javax.swing.JRadioButton M_default_button;
    private javax.swing.JCheckBox O_alANDalConc_box;
    private javax.swing.JCheckBox O_quiet_box;
    private javax.swing.JCheckBox O_unANDunConc_box;
    private javax.swing.JTabbedPane Options;
    private javax.swing.JPanel Output_Panel;
    private javax.swing.JPanel TypeOfLib_panel;
    private javax.swing.ButtonGroup bowtie2ChoicesButtons;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField name_jTextField1;
    private javax.swing.JButton reset_jButton3;
    private javax.swing.JButton run_jButton5;
    private javax.swing.JButton stop_jButton4;
    // End of variables declaration//GEN-END:variables
}
