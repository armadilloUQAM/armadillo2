//System.out.println("update");
//System.out.println(properties.get("CM_A_i_function"));
//System.out.println("remove box");

/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

package editors;

import configuration.Config;
import configuration.Util;
import editor.EditorInterface;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import program.*;
import workflows.armadillo_workflow;
import workflows.workflow_properties;
import workflows.workflow_properties_dictionnary;

/**
 *
 * @author Jérémy Goimard
 * @date Aout 2015
 * 
 * If a button, box is used with spinner or text field,
 * the choice was made to use the value name because of the updated content function
 * 
 */

public class Bowtie1IndexEditors extends javax.swing.JDialog implements EditorInterface  {
    
    /**
     * Creates new form MaqEditors
     */
    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected="";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow parent_workflow;
    
    public final String defaultNameString=" Name";
    static final boolean default_map=true;
    
    /////////////////////////////////////////////////////////////////////////
    /// Default Options
    
    public Bowtie1IndexEditors(java.awt.Frame parent, armadillo_workflow parent_workflow) {
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IG_options_buttons = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        Bowtie2Editor = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        name_jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        IG_Panel = new javax.swing.JPanel();
        IG_ntoa_box = new javax.swing.JCheckBox();
        IG_a_button = new javax.swing.JRadioButton();
        IG_Non_Auto_Panel = new javax.swing.JPanel();
        IG_dcv_box = new javax.swing.JCheckBox();
        IG_p_box = new javax.swing.JCheckBox();
        IG_bmax_box = new javax.swing.JCheckBox();
        IG_bmaxdivn_box = new javax.swing.JCheckBox();
        IG_bmaxdivn_value = new javax.swing.JSpinner();
        IG_bmax_value = new javax.swing.JSpinner();
        IG_dcv_value = new javax.swing.JSpinner();
        IG_nodc_box = new javax.swing.JCheckBox();
        IG_o_box = new javax.swing.JCheckBox();
        IG_t_box = new javax.swing.JCheckBox();
        IG_seed_box = new javax.swing.JCheckBox();
        IG_q_box = new javax.swing.JCheckBox();
        IG_seed_value = new javax.swing.JSpinner();
        IG_t_value = new javax.swing.JSpinner();
        IG_o_value = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        IG_big_box = new javax.swing.JCheckBox();
        IG_little_box = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        IG_3_box = new javax.swing.JCheckBox();
        IG_r_box = new javax.swing.JCheckBox();
        IG_DO_button = new javax.swing.JRadioButton();
        IG_AO_button = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        IDG_r_text = new javax.swing.JTextField();
        IDG_change_button = new javax.swing.JButton();
        reset_jButton3 = new javax.swing.JButton();
        stop_jButton4 = new javax.swing.JButton();
        run_jButton5 = new javax.swing.JButton();
        ClosejButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("?");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Bowtie2Editor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                Bowtie2EditorComponentShown(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(521, 521));

        jButton2.setText("Rename");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        name_jTextField1.setText("Bowtie Index Genome");
        name_jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        IG_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Index Genome Options"));
        IG_Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        IG_Panel.setEnabled(false);
        IG_Panel.setName("IG_Panel"); // NOI18N
        IG_Panel.setPreferredSize(new java.awt.Dimension(600, 460));

        IG_ntoa_box.setText("--ntoa");
        IG_ntoa_box.setName("IG_ntoa_box"); // NOI18N
        IG_ntoa_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_ntoa_boxActionPerformed(evt);
            }
        });

        IG_a_button.setText("-a/--noauto");
        IG_a_button.setName("IG_a_button"); // NOI18N
        IG_a_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_a_buttonActionPerformed(evt);
            }
        });

        IG_Non_Auto_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Modify Automatic Options"));
        IG_Non_Auto_Panel.setEnabled(false);
        IG_Non_Auto_Panel.setName("IG_Non_Auto_Panel"); // NOI18N

        IG_dcv_box.setText("--dcv");
        IG_dcv_box.setName("IG_dcv_box"); // NOI18N
        IG_dcv_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_dcv_boxActionPerformed(evt);
            }
        });

        IG_p_box.setText("-p/--packed");
        IG_p_box.setName("IG_p_box"); // NOI18N
        IG_p_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_p_boxActionPerformed(evt);
            }
        });

        IG_bmax_box.setText("--bmax");
        IG_bmax_box.setName("IG_bmax_box"); // NOI18N
        IG_bmax_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_bmax_boxActionPerformed(evt);
            }
        });

        IG_bmaxdivn_box.setText("--bmaxdivn");
        IG_bmaxdivn_box.setName("IG_bmaxdivn_box"); // NOI18N
        IG_bmaxdivn_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_bmaxdivn_boxActionPerformed(evt);
            }
        });

        IG_bmaxdivn_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(4), Integer.valueOf(0), null, Integer.valueOf(1)));
        IG_bmaxdivn_value.setEnabled(false);
        IG_bmaxdivn_value.setName("IG_bmaxdivn_value"); // NOI18N
        IG_bmaxdivn_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                IG_bmaxdivn_spinner_value(evt);
            }
        });

        IG_bmax_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(4), Integer.valueOf(0), null, Integer.valueOf(1)));
        IG_bmax_value.setEnabled(false);
        IG_bmax_value.setName("IG_bmax_value"); // NOI18N
        IG_bmax_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                IG_bmax_spinner_value(evt);
            }
        });

        IG_dcv_value.setModel(new javax.swing.SpinnerNumberModel(1024, 0, 4096, 2));
        IG_dcv_value.setEnabled(false);
        IG_dcv_value.setMinimumSize(new java.awt.Dimension(100, 28));
        IG_dcv_value.setName("IG_dcv_value"); // NOI18N
        IG_dcv_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                IG_dcv_spinner_value(evt);
            }
        });

        javax.swing.GroupLayout IG_Non_Auto_PanelLayout = new javax.swing.GroupLayout(IG_Non_Auto_Panel);
        IG_Non_Auto_Panel.setLayout(IG_Non_Auto_PanelLayout);
        IG_Non_Auto_PanelLayout.setHorizontalGroup(
            IG_Non_Auto_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IG_Non_Auto_PanelLayout.createSequentialGroup()
                .addGroup(IG_Non_Auto_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IG_Non_Auto_PanelLayout.createSequentialGroup()
                        .addComponent(IG_p_box)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(IG_Non_Auto_PanelLayout.createSequentialGroup()
                        .addGroup(IG_Non_Auto_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IG_bmax_box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(IG_bmaxdivn_box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(IG_dcv_box, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(IG_Non_Auto_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(IG_dcv_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IG_bmax_value)
                            .addComponent(IG_bmaxdivn_value))))
                .addContainerGap())
        );
        IG_Non_Auto_PanelLayout.setVerticalGroup(
            IG_Non_Auto_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IG_Non_Auto_PanelLayout.createSequentialGroup()
                .addGroup(IG_Non_Auto_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IG_bmaxdivn_box)
                    .addComponent(IG_bmaxdivn_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IG_Non_Auto_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IG_bmax_box)
                    .addComponent(IG_bmax_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IG_p_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IG_Non_Auto_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IG_dcv_box)
                    .addComponent(IG_dcv_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        IG_dcv_box.getAccessibleContext().setAccessibleDescription("Use <int> as the period for the difference-cover sample. A larger period yields less memory overhead, but may make suffix sorting slower, especially if repeats are present. Must be a power of 2 no greater than 4096. Default: 1024. This is configured automatically by default; use -a/--noauto to configure manually.");
        IG_bmax_box.getAccessibleContext().setAccessibleDescription("The maximum number of suffixes allowed in a block. Allowing more suffixes per block makes indexing faster, but increases peak memory usage. Setting this option overrides any previous setting for --bmax, or --bmaxdivn. Default (in terms of the --bmaxdivn parameter) is --bmaxdivn 4. This is configured automatically by default; use -a/--noauto to configure manually.");
        IG_bmaxdivn_box.getAccessibleContext().setAccessibleDescription("The maximum number of suffixes allowed in a block, expressed as a fraction of the length of the reference. Setting this option overrides any previous setting for --bmax, or --bmaxdivn. Default: --bmaxdivn 4. This is configured automatically by default; use -a/--noauto to configure manually.");

        IG_nodc_box.setText("--nodc");
        IG_nodc_box.setName("IG_nodc_box"); // NOI18N
        IG_nodc_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_nodc_boxActionPerformed(evt);
            }
        });

        IG_o_box.setText("-o/--offrate");
        IG_o_box.setName("IG_o_box"); // NOI18N
        IG_o_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_o_boxActionPerformed(evt);
            }
        });

        IG_t_box.setText("-t/--ftabchars");
        IG_t_box.setName("IG_t_box"); // NOI18N
        IG_t_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_t_boxActionPerformed(evt);
            }
        });

        IG_seed_box.setText("--seed");
        IG_seed_box.setName("IG_seed_box"); // NOI18N
        IG_seed_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_seed_boxActionPerformed(evt);
            }
        });

        IG_q_box.setText("-q/--quiet");
        IG_q_box.setName("IG_q_box"); // NOI18N
        IG_q_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_q_boxActionPerformed(evt);
            }
        });

        IG_seed_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        IG_seed_value.setEnabled(false);
        IG_seed_value.setName("IG_seed_value"); // NOI18N
        IG_seed_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                IG_seed_spinner_value(evt);
            }
        });

        IG_t_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(0), null, Integer.valueOf(1)));
        IG_t_value.setEnabled(false);
        IG_t_value.setName("IG_t_value"); // NOI18N
        IG_t_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                IG_t_spinner_value(evt);
            }
        });

        IG_o_value.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(0), null, Integer.valueOf(1)));
        IG_o_value.setEnabled(false);
        IG_o_value.setName("IG_o_value"); // NOI18N
        IG_o_value.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                IG_o_spinner_value(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Big or Little"));

        IG_big_box.setText("--big");
        IG_big_box.setName("IG_big_box"); // NOI18N
        IG_big_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_big_boxActionPerformed(evt);
            }
        });

        IG_little_box.setText("--little");
        IG_little_box.setName("IG_little_box"); // NOI18N
        IG_little_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_little_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(IG_big_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IG_little_box))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(IG_big_box)
                .addComponent(IG_little_box))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("no ref or just the ref"));

        IG_3_box.setText("-3/--justref");
        IG_3_box.setName("IG_3_box"); // NOI18N
        IG_3_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_3_boxActionPerformed(evt);
            }
        });

        IG_r_box.setText("-r/--noref");
        IG_r_box.setName("IG_r_box"); // NOI18N
        IG_r_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_r_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(IG_r_box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(IG_3_box))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(IG_r_box)
                .addComponent(IG_3_box))
        );

        javax.swing.GroupLayout IG_PanelLayout = new javax.swing.GroupLayout(IG_Panel);
        IG_Panel.setLayout(IG_PanelLayout);
        IG_PanelLayout.setHorizontalGroup(
            IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IG_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IG_PanelLayout.createSequentialGroup()
                        .addComponent(IG_ntoa_box)
                        .addGap(59, 59, 59)
                        .addComponent(IG_q_box))
                    .addGroup(IG_PanelLayout.createSequentialGroup()
                        .addComponent(IG_a_button, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IG_Non_Auto_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(IG_PanelLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(IG_PanelLayout.createSequentialGroup()
                        .addGroup(IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IG_o_box)
                            .addComponent(IG_seed_box)
                            .addComponent(IG_t_box))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(IG_seed_value)
                                .addComponent(IG_t_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(IG_PanelLayout.createSequentialGroup()
                                .addComponent(IG_o_value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(IG_nodc_box)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        IG_PanelLayout.setVerticalGroup(
            IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IG_PanelLayout.createSequentialGroup()
                .addGroup(IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(IG_PanelLayout.createSequentialGroup()
                        .addGroup(IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IG_ntoa_box)
                            .addComponent(IG_q_box))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(IG_PanelLayout.createSequentialGroup()
                        .addComponent(IG_nodc_box)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IG_o_box)
                    .addComponent(IG_o_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IG_t_box)
                    .addComponent(IG_t_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IG_seed_box)
                    .addComponent(IG_seed_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IG_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IG_PanelLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(IG_a_button))
                    .addComponent(IG_Non_Auto_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        IG_ntoa_box.getAccessibleContext().setAccessibleDescription("Force bowtie2-build to build a large index, even if the reference is less than ~ 4 billion nucleotides inlong.");
        IG_nodc_box.getAccessibleContext().setAccessibleDescription("Disable use of the difference-cover sample. Suffix sorting becomes quadratic-time in the worst case (where the worst case is an extremely repetitive reference). Default: off.");
        IG_o_box.getAccessibleContext().setAccessibleDescription("To map alignments back to positions on the reference sequences, it's necessary to annotate (\"mark\") some or all of the Burrows-Wheeler rows with their corresponding location on the genome. -o/--offrate governs how many rows get marked: the indexer will mark every 2^<int> rows. Marking more rows makes reference-position lookups faster, but requires more memory to hold the annotations at runtime. The default is 5 (every 32nd row is marked; for human genome, annotations occupy about 340 megabytes).");
        IG_t_box.getAccessibleContext().setAccessibleDescription("The ftab is the lookup table used to calculate an initial Burrows-Wheeler range with respect to the first <int> characters of the query. A larger <int> yields a larger lookup table but faster query times. The ftab has size 4^(<int>+1) bytes. The default setting is 10 (ftab is 4MB).");
        IG_seed_box.getAccessibleContext().setAccessibleDescription("Use <int> as the seed for pseudo-random number generator.");
        IG_q_box.getAccessibleContext().setAccessibleDescription("bowtie2-build is verbose by default. With this option bowtie2-build will print only error messages.");
        IG_t_value.getAccessibleContext().setAccessibleName("IG_t_value");
        IG_o_value.getAccessibleContext().setAccessibleName("IG_o_value");

        IG_options_buttons.add(IG_DO_button);
        IG_DO_button.setText("Default options");
        IG_DO_button.setName("IG_DO_button"); // NOI18N
        IG_DO_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_DO_buttonActionPerformed(evt);
            }
        });

        IG_options_buttons.add(IG_AO_button);
        IG_AO_button.setText("Advanced options");
        IG_AO_button.setName("IG_AO_button"); // NOI18N
        IG_AO_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IG_AO_buttonActionPerformed(evt);
            }
        });

        jLabel2.setText("Indexed Genome Repertory :");

        IDG_r_text.setText("./indexed_genomes/bowtie");
        IDG_r_text.setName("IDG_r_text"); // NOI18N
        IDG_r_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_r_textActionPerformed(evt);
            }
        });

        IDG_change_button.setText("Change");
        IDG_change_button.setName("IDG_change_button"); // NOI18N
        IDG_change_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDG_change_buttonActionPerformed(evt);
            }
        });

        reset_jButton3.setText("Reset default value");
        reset_jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_jButton3ActionPerformed(evt);
            }
        });

        stop_jButton4.setText("Stop");
        stop_jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop_jButton4ActionPerformed(evt);
            }
        });

        run_jButton5.setText("Run");
        run_jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_jButton5ActionPerformed(evt);
            }
        });

        ClosejButton6.setText("Close");
        ClosejButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClosejButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(IDG_r_text, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(reset_jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(stop_jButton4)
                                .addGap(18, 18, 18)
                                .addComponent(run_jButton5)
                                .addGap(18, 18, 18)
                                .addComponent(ClosejButton6))
                            .addComponent(IG_Panel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(IG_DO_button)
                                .addGap(18, 18, 18)
                                .addComponent(IG_AO_button)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(138, 138, 138)
                                .addComponent(IDG_change_button)))))
                .addGap(551, 551, 551))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IG_DO_button)
                    .addComponent(IG_AO_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IG_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(IDG_change_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDG_r_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset_jButton3)
                    .addComponent(stop_jButton4)
                    .addComponent(run_jButton5)
                    .addComponent(ClosejButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        IG_Panel.getAccessibleContext().setAccessibleName("");
        IG_Panel.getAccessibleContext().setAccessibleDescription("");

        Bowtie2Editor.addTab("Bowtie Index Genome", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addComponent(Bowtie2Editor, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Bowtie2Editor, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE))
        );

        Bowtie2Editor.getAccessibleContext().setAccessibleName("BwaEditors");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void Bowtie2EditorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_Bowtie2EditorComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_Bowtie2EditorComponentShown
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void ClosejButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClosejButton6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_ClosejButton6ActionPerformed
    
    private void run_jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_jButton5ActionPerformed
        // TODO add your handling code here:
        if (this.properties.isSet("ClassName")) {
            this.parent_workflow.workflow.updateDependance();
            programs prog=new programs(parent_workflow.workbox.getCurrentWorkflows());
            prog.Run(properties);
        }
    }//GEN-LAST:event_run_jButton5ActionPerformed
    
    private void stop_jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop_jButton4ActionPerformed
        // TODO add your handling code here:
        properties.put("Status", Config.status_nothing);
        properties.killThread();
    }//GEN-LAST:event_stop_jButton4ActionPerformed
    
    private void reset_jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_jButton3ActionPerformed
        // TODO add your handling code here:
        properties.load();             //--reload current properties from file
        this.setProperties(properties);//--Update current field
        this.display(properties);
    }//GEN-LAST:event_reset_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        properties.put("Name", this.name_jTextField1.getText());
    }//GEN-LAST:event_jButton2ActionPerformed
                                                                        
    private void name_jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_jTextField1ActionPerformed

    private void IG_3_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_3_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_3_box,null);
        if (properties.isSet(IG_r_box.getName())) {
            properties.remove(IG_r_box.getName());
            IG_r_box.setSelected(false);
        }
    }//GEN-LAST:event_IG_3_boxActionPerformed

    private void IG_r_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_r_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_r_box,null);
        if (properties.isSet(IG_3_box.getName())) {
            properties.remove(IG_3_box.getName());
            IG_3_box.setSelected(false);
        }
    }//GEN-LAST:event_IG_r_boxActionPerformed

    private void IG_o_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_IG_o_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_o_box,IG_o_value);
    }//GEN-LAST:event_IG_o_spinner_value

    private void IG_t_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_IG_t_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_t_box,IG_t_value);
    }//GEN-LAST:event_IG_t_spinner_value

    private void IG_seed_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_IG_seed_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_seed_box,IG_seed_value);
    }//GEN-LAST:event_IG_seed_spinner_value

    private void IG_q_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_q_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_q_box,null);
    }//GEN-LAST:event_IG_q_boxActionPerformed

    private void IG_seed_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_seed_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_seed_box,IG_seed_value);
    }//GEN-LAST:event_IG_seed_boxActionPerformed

    private void IG_t_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_t_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_t_box,IG_t_value);
    }//GEN-LAST:event_IG_t_boxActionPerformed

    private void IG_o_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_o_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_o_box,IG_o_value);
    }//GEN-LAST:event_IG_o_boxActionPerformed

    private void IG_nodc_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_nodc_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_nodc_box,null);
    }//GEN-LAST:event_IG_nodc_boxActionPerformed

    private void IG_dcv_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_IG_dcv_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_dcv_box,IG_dcv_value);
    }//GEN-LAST:event_IG_dcv_spinner_value

    private void IG_bmax_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_IG_bmax_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_bmax_box,IG_bmax_value);
    }//GEN-LAST:event_IG_bmax_spinner_value

    private void IG_bmaxdivn_spinner_value(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_IG_bmaxdivn_spinner_value
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_bmaxdivn_box,IG_bmaxdivn_value);
    }//GEN-LAST:event_IG_bmaxdivn_spinner_value

    private void IG_bmaxdivn_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_bmaxdivn_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(IG_bmax_box.getName())) {
            properties.remove(IG_bmax_box.getName());
            IG_bmax_value.setEnabled(false);
            IG_bmax_box.setSelected(false);
            
        }

        Util.boxEventSpinner(properties,IG_bmaxdivn_box,IG_bmaxdivn_value);

        if (!(properties.isSet(IG_bmaxdivn_value.getName())) &&
            !(properties.isSet(IG_dcv_value.getName())) &&
            !(properties.isSet(IG_p_box.getName())) &&
            !(properties.isSet(IG_bmax_value.getName()))
        ){
            properties.remove(IG_a_button.getName());
            nonAutoPanelfields(false);
        }
    }//GEN-LAST:event_IG_bmaxdivn_boxActionPerformed

    private void IG_bmax_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_bmax_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(IG_bmaxdivn_box.getName())){
            properties.remove(IG_bmaxdivn_box.getName());
            IG_bmaxdivn_value.setEnabled(false);
            IG_bmaxdivn_box.setSelected(false);
        }

        Util.boxEventSpinner(properties,IG_bmax_box,IG_bmax_value);

        if (!(properties.isSet(IG_bmaxdivn_value.getName())) &&
            !(properties.isSet(IG_dcv_value.getName())) &&
            !(properties.isSet(IG_p_box.getName())) &&
            !(properties.isSet(IG_bmax_value.getName()))
        ){
            properties.remove(IG_a_button.getName());
            nonAutoPanelfields(false);
        }
    }//GEN-LAST:event_IG_bmax_boxActionPerformed

    private void IG_p_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_p_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_p_box,null);

        if (!(properties.isSet(IG_bmaxdivn_value.getName())) &&
            !(properties.isSet(IG_dcv_value.getName())) &&
            !(properties.isSet(IG_p_box.getName())) &&
            !(properties.isSet(IG_bmax_value.getName()))
        ){
            properties.remove(IG_a_button.getName());
            nonAutoPanelfields(false);
        }
    }//GEN-LAST:event_IG_p_boxActionPerformed

    private void IG_dcv_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_dcv_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_dcv_box,IG_dcv_value);

        if (!(properties.isSet(IG_bmaxdivn_value.getName())) &&
            !(properties.isSet(IG_dcv_value.getName())) &&
            !(properties.isSet(IG_p_box.getName())) &&
            !(properties.isSet(IG_bmax_value.getName()))
        ){
            properties.remove(IG_a_button.getName());
            nonAutoPanelfields(false);
        }
    }//GEN-LAST:event_IG_dcv_boxActionPerformed

    private void IG_a_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_a_buttonActionPerformed
        // TODO add your handling code here:
        if (IG_a_button.isSelected()==true){
            nonAutoPanelfields(true);
            properties.put(IG_a_button.getName(),IG_a_button.isSelected());
        } else {
            nonAutoPanelfields(false);
            properties.remove(IG_a_button.getName());
            properties.remove(IG_p_box.getName());
            properties.remove(IG_bmax_value.getName());
            properties.remove(IG_bmaxdivn_value.getName());
            properties.remove(IG_dcv_value.getName());
        }
    }//GEN-LAST:event_IG_a_buttonActionPerformed

    private void IG_DO_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_DO_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(IG_AO_button.getName())){
            properties.remove(IG_AO_button.getName());
        }
        Util.buttonEventSpinner(properties, IG_DO_button, null);
        IG_Panel.setVisible(false);
    }//GEN-LAST:event_IG_DO_buttonActionPerformed

    private void IG_AO_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_AO_buttonActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(IG_DO_button.getName())){
            properties.remove(IG_DO_button.getName());
        }
        Util.buttonEventSpinner(properties, IG_AO_button, null);
        IG_Panel.setVisible(true);
    }//GEN-LAST:event_IG_AO_buttonActionPerformed

    private void IDG_r_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_r_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDG_r_textActionPerformed

    private void IDG_change_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDG_change_buttonActionPerformed
        // TODO add your handling code here:
        JFileChooser d;
        
        if (this.IDG_r_text.getText().isEmpty()) {
            d=new JFileChooser(config.getExplorerPath());
        } else {
            d=new JFileChooser(this.IDG_r_text.getText());
        }
        
        d.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        d.setAcceptAllFileFilterUsed(false);
        d.setMultiSelectionEnabled(false);
        int result = d.showOpenDialog(this);
        
        if (result==JFileChooser.APPROVE_OPTION) {           
            properties.remove(IDG_r_text.getName());
            
            File dir = d.getSelectedFile();
            
            // Set the text
            String s = dir.getAbsolutePath();
            IDG_r_text.setText(s);
            properties.put(IDG_r_text.getName(),IDG_r_text.getText());
        }        
    }//GEN-LAST:event_IDG_change_buttonActionPerformed

    private void IG_ntoa_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_ntoa_boxActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,IG_ntoa_box,null);
    }//GEN-LAST:event_IG_ntoa_boxActionPerformed

    private void IG_big_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_big_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(IG_little_box.getName())) {
            properties.remove(IG_little_box.getName());
            IG_little_box.setSelected(false);
        }
        Util.boxEventSpinner(properties,IG_big_box,null);
    }//GEN-LAST:event_IG_big_boxActionPerformed

    private void IG_little_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IG_little_boxActionPerformed
        // TODO add your handling code here:
        if (properties.isSet(IG_big_box.getName())) {
            properties.remove(IG_big_box.getName());
            IG_big_box.setSelected(false);
        }
        Util.boxEventSpinner(properties,IG_little_box,null);
    }//GEN-LAST:event_IG_little_boxActionPerformed
                                                                                                                                                                                                                                                                                                                                                                                                    
    /**
     * Enable or disable fields of Options
     * @param enabled
     */
    private void nonAutoPanelfields(boolean enabled){
        IG_a_button.setSelected(enabled);
        IG_Non_Auto_Panel.setEnabled(enabled);
        IG_p_box.setEnabled(enabled);
        IG_bmax_box.setEnabled(enabled);
        if (properties.isSet(IG_bmax_box.getName()))IG_bmax_value.setEnabled(true);
        else IG_bmax_value.setEnabled(false);
        IG_bmaxdivn_box.setEnabled(enabled);
        if (properties.isSet(IG_bmaxdivn_box.getName()))IG_bmaxdivn_value.setEnabled(true);
        else IG_bmaxdivn_value.setEnabled(false);
        IG_dcv_box.setEnabled(enabled);
        if (properties.isSet(IG_dcv_box.getName()))IG_dcv_value.setEnabled(true);
        else IG_dcv_value.setEnabled(false);
        
    }
    
    /**
     * Set Properties
     * @param properties
     */
    
    public void setProperties(workflow_properties properties) {
        this.properties=properties;
        setTitle(properties.getName());
        //if (this.properties.isSet("Description")) this.Notice.setText(properties.get("Description"));
        
        // Properties Default Options
        this.defaultPgrmValues(properties);
    }

    public void setProperties(String filename, String path) {
        workflow_properties tmp=new workflow_properties();
        tmp.load(filename, path);
        this.properties=tmp;
        setTitle(properties.getName());
    }
    
    private void defaultPgrmValues(workflow_properties properties) {
        if (!properties.isSet(IG_DO_button.getName())){
            String defaultEditorStatus = properties.get("defaultPgrmValues");
            String[] arrayDefault = defaultEditorStatus.split("<>");
            int z = 0;
            for (int i =0 ; i < arrayDefault.length ; i=i+2){
                z = i;
                properties.put(arrayDefault[z],arrayDefault[z+1]);
            }
            nonAutoPanelfields(false);
            IG_Panel.setVisible(false);
        }
    }

    /**
     * Update Saved Properties uSP
     */
    
    private void updateSavedProperties(workflow_properties properties) {
        // IG Properties saved
        // Utilisation d'une méthode ?
        
        if (properties.isSet(IG_DO_button.getName())){
            this.IG_DO_button.setSelected(true);
            nonAutoPanelfields(false);
            IG_Panel.setVisible(false);
        }
        
        if (properties.isSet(IG_AO_button.getName())){
            this.IG_AO_button.setSelected(true);
            nonAutoPanelfields(true);
            IG_Panel.setVisible(true);
        }
        
        if (properties.isSet(IG_o_value.getName())) {
            this.IG_o_value.setValue(Integer.parseInt(properties.get(IG_o_value.getName())));
        }
        if (properties.isSet(IG_o_box.getName())) {
            this.IG_o_box.setSelected(true);
            this.IG_o_value.setEnabled(true);
        } else this.IG_o_value.setEnabled(false);
        
        if (properties.isSet(IG_t_value.getName())) {
            this.IG_t_value.setValue(Integer.parseInt(properties.get(IG_t_value.getName())));
        }
        if (properties.isSet(IG_t_box.getName())) {
            this.IG_t_box.setSelected(true);
            this.IG_t_value.setEnabled(true);
        } else this.IG_t_value.setEnabled(false);
        
        if (properties.isSet(IG_seed_value.getName())) {
            this.IG_seed_value.setValue(Integer.parseInt(properties.get(IG_seed_value.getName())));
        }
        if (properties.isSet(IG_seed_box.getName())) {
            this.IG_seed_box.setSelected(true);
            this.IG_seed_value.setEnabled(true);
        } else this.IG_seed_value.setEnabled(false);
        
        if (properties.isSet(IG_ntoa_box.getName())){
            this.IG_ntoa_box.setSelected(true);
        }
        if (properties.isSet(IG_q_box.getName())){
            this.IG_q_box.setSelected(true);
        }
        if (properties.isSet(IG_nodc_box.getName())){
            this.IG_nodc_box.setSelected(true);
        }
        if (properties.isSet(IG_r_box.getName())){
            this.IG_r_box.setSelected(true);
        }
        if (properties.isSet(IG_3_box.getName())){
            this.IG_3_box.setSelected(true);
        }
        if (properties.isSet(IG_a_button.getName())){
            if ( properties.isSet(IG_bmaxdivn_value.getName()) ||
                 properties.isSet(IG_bmax_value.getName()) ||
                 properties.isSet(IG_dcv_value.getName()) ||
                 properties.isSet(IG_p_box.getName())
            ){
                this.nonAutoPanelfields(true);
                this.IG_a_button.setSelected(true);
            } else {
                this.IG_a_button.setSelected(false);
            }
            
        }
        if (properties.isSet(IG_bmaxdivn_value.getName())){
            this.IG_bmaxdivn_value.setValue(Integer.parseInt(properties.get(IG_bmaxdivn_value.getName())));
        }
        if (properties.isSet(IG_bmaxdivn_box.getName())){
            this.IG_bmaxdivn_box.setSelected(true);
            this.IG_bmaxdivn_value.setEnabled(true);
        } else this.IG_bmaxdivn_value.setEnabled(false);
        
        if (properties.isSet(IG_bmax_value.getName())){
            this.IG_bmax_value.setValue(Integer.parseInt(properties.get(IG_bmax_value.getName())));
        }
        if (properties.isSet(IG_bmax_box.getName())){
            this.IG_bmax_box.setSelected(true);
            this.IG_bmax_value.setEnabled(true);
        } else this.IG_bmax_value.setEnabled(false);
        
        if (properties.isSet(IG_dcv_value.getName())){
            this.IG_dcv_value.setValue(Integer.parseInt(properties.get(IG_dcv_value.getName())));
        }
        if (properties.isSet(IG_dcv_box.getName())){
            this.IG_dcv_box.setSelected(true);
            this.IG_dcv_value.setEnabled(true);
        } else this.IG_dcv_value.setEnabled(false);
        
        if (properties.isSet(IG_p_box.getName())){
            this.IG_p_box.setSelected(true);
        }
        if (properties.isSet(IDG_r_text.getName())){
            this.IDG_r_text.setText(properties.get(IDG_r_text.getName()));
        }
        
        if (properties.isSet(IG_little_box.getName())){
            this.IG_little_box.setSelected(true);
        } else if (properties.isSet(IG_big_box.getName())) {
            this.IG_big_box.setSelected(true);
        }

    }
    
    /**
     * Set the configuration properties for this object
     */
    
    @Override
    public void display(workflow_properties properties) {
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // Set position
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
                (screenSize.height-d.height)/2);
        
        this.setProperties(properties);
        
        //Update Saved Properties uSP
        this.updateSavedProperties(properties);

        
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }
    
    public void saveImage(String filename) {
        BufferedImage bi;
        try {
            bi = new Robot().createScreenCapture(this.getBounds());
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
        } catch (Exception ex) {
            Config.log("Unable to save "+filename+" dialog image");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Bowtie2Editor;
    private javax.swing.JButton ClosejButton6;
    private javax.swing.JButton IDG_change_button;
    private javax.swing.JTextField IDG_r_text;
    private javax.swing.JCheckBox IG_3_box;
    private javax.swing.JRadioButton IG_AO_button;
    private javax.swing.JRadioButton IG_DO_button;
    private javax.swing.JPanel IG_Non_Auto_Panel;
    private javax.swing.JPanel IG_Panel;
    private javax.swing.JRadioButton IG_a_button;
    private javax.swing.JCheckBox IG_big_box;
    private javax.swing.JCheckBox IG_bmax_box;
    private javax.swing.JSpinner IG_bmax_value;
    private javax.swing.JCheckBox IG_bmaxdivn_box;
    private javax.swing.JSpinner IG_bmaxdivn_value;
    private javax.swing.JCheckBox IG_dcv_box;
    private javax.swing.JSpinner IG_dcv_value;
    private javax.swing.JCheckBox IG_little_box;
    private javax.swing.JCheckBox IG_nodc_box;
    private javax.swing.JCheckBox IG_ntoa_box;
    private javax.swing.JCheckBox IG_o_box;
    private javax.swing.JSpinner IG_o_value;
    private javax.swing.ButtonGroup IG_options_buttons;
    private javax.swing.JCheckBox IG_p_box;
    private javax.swing.JCheckBox IG_q_box;
    private javax.swing.JCheckBox IG_r_box;
    private javax.swing.JCheckBox IG_seed_box;
    private javax.swing.JSpinner IG_seed_value;
    private javax.swing.JCheckBox IG_t_box;
    private javax.swing.JSpinner IG_t_value;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField name_jTextField1;
    private javax.swing.JButton reset_jButton3;
    private javax.swing.JButton run_jButton5;
    private javax.swing.JButton stop_jButton4;
    // End of variables declaration//GEN-END:variables
}
